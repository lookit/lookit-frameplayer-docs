{
    "project": {
        "url": "https://github.com/lookit/ember-lookit-frameplayer",
        "projectLogo": "docs/themes/lookit/assets/css/logo.png",
        "name": "ember-lookit-frameplayer",
        "description": "Ember Frame Player",
        "version": "v1.3.0"
    },
    "files": {
        "app/components/exp-frame-base/component.js": {
            "name": "app/components/exp-frame-base/component.js",
            "modules": {
                "frames": 1
            },
            "classes": {
                "Exp-frame-base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-frame-select/component.js": {
            "name": "app/components/exp-frame-select/component.js",
            "modules": {},
            "classes": {
                "Exp-frame-select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-calibration/component.js": {
            "name": "app/components/exp-lookit-calibration/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-calibration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-change-detection/component.js": {
            "name": "app/components/exp-lookit-change-detection/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-change-detection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-composite-video-trial/component.js": {
            "name": "app/components/exp-lookit-composite-video-trial/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-composite-video-trial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-dialogue-page/component.js": {
            "name": "app/components/exp-lookit-dialogue-page/component.js",
            "modules": {
                "frames-deprecated": 1
            },
            "classes": {
                "Exp-lookit-dialogue-page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-exit-survey/component.js": {
            "name": "app/components/exp-lookit-exit-survey/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-exit-survey": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-geometry-alternation/component.js": {
            "name": "app/components/exp-lookit-geometry-alternation/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-geometry-alternation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-geometry-alternation-open/component.js": {
            "name": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-geometry-alternation-open": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-images-audio/component.js": {
            "name": "app/components/exp-lookit-images-audio/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-images-audio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-images-audio-infant-control/component.js": {
            "name": "app/components/exp-lookit-images-audio-infant-control/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-images-audio-infant-control": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-instructions/component.js": {
            "name": "app/components/exp-lookit-instructions/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-instructions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-mood-questionnaire/component.js": {
            "name": "app/components/exp-lookit-mood-questionnaire/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-mood-questionnaire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-observation/component.js": {
            "name": "app/components/exp-lookit-observation/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-observation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-preferential-looking/component.js": {
            "name": "app/components/exp-lookit-preferential-looking/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-preferential-looking": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-preview-explanation/component.js": {
            "name": "app/components/exp-lookit-preview-explanation/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-preview-explanation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-start-recording/component.js": {
            "name": "app/components/exp-lookit-start-recording/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-start-recording": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-stimuli-preview/component.js": {
            "name": "app/components/exp-lookit-stimuli-preview/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-stimuli-preview": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-stop-recording/component.js": {
            "name": "app/components/exp-lookit-stop-recording/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-stop-recording": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-story-page/component.js": {
            "name": "app/components/exp-lookit-story-page/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-story-page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-survey/component.js": {
            "name": "app/components/exp-lookit-survey/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-survey": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-text/component.js": {
            "name": "app/components/exp-lookit-text/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-video/component.js": {
            "name": "app/components/exp-lookit-video/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-video": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-video-assent/component.js": {
            "name": "app/components/exp-lookit-video-assent/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-video-assent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-video-consent/component.js": {
            "name": "app/components/exp-lookit-video-consent/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-video-consent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-video-infant-control/component.js": {
            "name": "app/components/exp-lookit-video-infant-control/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-video-infant-control": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-lookit-webcam-display/component.js": {
            "name": "app/components/exp-lookit-webcam-display/component.js",
            "modules": {},
            "classes": {
                "Exp-lookit-webcam-display": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-player/component.js": {
            "name": "app/components/exp-player/component.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-video-config/component.js": {
            "name": "app/components/exp-video-config/component.js",
            "modules": {},
            "classes": {
                "Exp-video-config": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/components/exp-video-config-quality/component.js": {
            "name": "app/components/exp-video-config-quality/component.js",
            "modules": {},
            "classes": {
                "Exp-video-config-quality": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/expand-assets.js": {
            "name": "app/mixins/expand-assets.js",
            "modules": {
                "mixins": 1
            },
            "classes": {
                "Expand-assets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/full-screen.js": {
            "name": "app/mixins/full-screen.js",
            "modules": {},
            "classes": {
                "Full-screen": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/infant-controlled-timing.js": {
            "name": "app/mixins/infant-controlled-timing.js",
            "modules": {},
            "classes": {
                "Infant-controlled-timing": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/media-reload.js": {
            "name": "app/mixins/media-reload.js",
            "modules": {},
            "classes": {
                "Media-reload": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/session-record.js": {
            "name": "app/mixins/session-record.js",
            "modules": {},
            "classes": {
                "Session-record": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/mixins/video-record.js": {
            "name": "app/mixins/video-record.js",
            "modules": {},
            "classes": {
                "Video-record": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/randomizers/permute.js": {
            "name": "app/randomizers/permute.js",
            "modules": {
                "randomizers": 1
            },
            "classes": {
                "Permute": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/randomizers/pref-phys.js": {
            "name": "app/randomizers/pref-phys.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app/randomizers/random-parameter-set.js": {
            "name": "app/randomizers/random-parameter-set.js",
            "modules": {},
            "classes": {
                "Random-parameter-set": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/randomizers/select.js": {
            "name": "app/randomizers/select.js",
            "modules": {},
            "classes": {
                "Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/services/video-recorder.js": {
            "name": "app/services/video-recorder.js",
            "modules": {},
            "classes": {
                "video-recorder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/yuidoc-prose.js": {
            "name": "app/yuidoc-prose.js",
            "modules": {
                "exp-player": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "exp-player": {
            "name": "exp-player",
            "submodules": {
                "frames": 1,
                "frames-deprecated": 1,
                "mixins": 1,
                "randomizers": 1
            },
            "elements": {},
            "classes": {
                "Exp-frame-base": 1,
                "Exp-frame-select": 1,
                "Exp-lookit-calibration": 1,
                "Exp-lookit-change-detection": 1,
                "Exp-lookit-composite-video-trial": 1,
                "Exp-lookit-dialogue-page": 1,
                "Exp-lookit-exit-survey": 1,
                "Exp-lookit-geometry-alternation": 1,
                "Exp-lookit-geometry-alternation-open": 1,
                "Exp-lookit-images-audio": 1,
                "Exp-lookit-images-audio-infant-control": 1,
                "Exp-lookit-instructions": 1,
                "Exp-lookit-mood-questionnaire": 1,
                "Exp-lookit-observation": 1,
                "Exp-lookit-preferential-looking": 1,
                "Exp-lookit-preview-explanation": 1,
                "Exp-lookit-start-recording": 1,
                "Exp-lookit-stimuli-preview": 1,
                "Exp-lookit-stop-recording": 1,
                "Exp-lookit-story-page": 1,
                "Exp-lookit-survey": 1,
                "Exp-lookit-text": 1,
                "Exp-lookit-video": 1,
                "Exp-lookit-video-assent": 1,
                "Exp-lookit-video-consent": 1,
                "Exp-lookit-video-infant-control": 1,
                "Exp-lookit-webcam-display": 1,
                "Exp-video-config": 1,
                "Exp-video-config-quality": 1,
                "Expand-assets": 1,
                "Full-screen": 1,
                "Infant-controlled-timing": 1,
                "Media-reload": 1,
                "Session-record": 1,
                "Video-record": 1,
                "Permute": 1,
                "Random-parameter-set": 1,
                "Select": 1,
                "video-recorder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "app/services/video-recorder.js",
            "line": 76,
            "description": "Reusable parts of experiments. Includes frame definitions, randomizers, and utilities.",
            "itemtype": "main"
        },
        "frames": {
            "name": "frames",
            "submodules": {},
            "elements": {},
            "classes": {
                "Exp-frame-base": 1,
                "Exp-frame-select": 1,
                "Exp-lookit-calibration": 1,
                "Exp-lookit-change-detection": 1,
                "Exp-lookit-composite-video-trial": 1,
                "Exp-lookit-exit-survey": 1,
                "Exp-lookit-images-audio": 1,
                "Exp-lookit-images-audio-infant-control": 1,
                "Exp-lookit-instructions": 1,
                "Exp-lookit-mood-questionnaire": 1,
                "Exp-lookit-observation": 1,
                "Exp-lookit-preferential-looking": 1,
                "Exp-lookit-start-recording": 1,
                "Exp-lookit-stimuli-preview": 1,
                "Exp-lookit-stop-recording": 1,
                "Exp-lookit-survey": 1,
                "Exp-lookit-text": 1,
                "Exp-lookit-video": 1,
                "Exp-lookit-video-assent": 1,
                "Exp-lookit-video-consent": 1,
                "Exp-lookit-video-infant-control": 1,
                "Exp-lookit-webcam-display": 1,
                "Exp-video-config": 1,
                "Exp-video-config-quality": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 17,
            "description": "Reusable frames that can be used as part of Lookit studies. This is the main reference\n  for researchers writing their own study protocols on Lookit.",
            "tag": "main",
            "itemtype": "main"
        },
        "frames-deprecated": {
            "name": "frames-deprecated",
            "submodules": {},
            "elements": {},
            "classes": {
                "Exp-lookit-dialogue-page": 1,
                "Exp-lookit-geometry-alternation": 1,
                "Exp-lookit-geometry-alternation-open": 1,
                "Exp-lookit-preview-explanation": 1,
                "Exp-lookit-story-page": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 18,
            "description": "Frames someone may still be using, but that are deprecated and will not be included\nin future releases.",
            "tag": "main",
            "itemtype": "main"
        },
        "mixins": {
            "name": "mixins",
            "submodules": {},
            "elements": {},
            "classes": {
                "Expand-assets": 1,
                "Full-screen": 1,
                "Infant-controlled-timing": 1,
                "Media-reload": 1,
                "Session-record": 1,
                "Video-record": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "app/mixins/video-record.js",
            "line": 14,
            "description": "Reference for DEVELOPERS of new frames only (not Lookit researchers writing their\nstudy protocols on the site)!\n\nMixins that can be used to add specific functionality to frames",
            "tag": "main",
            "itemtype": "main"
        },
        "randomizers": {
            "name": "randomizers",
            "submodules": {},
            "elements": {},
            "classes": {
                "Permute": 1,
                "Random-parameter-set": 1,
                "Select": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "app/randomizers/select.js",
            "line": 6,
            "description": "Reusable randomizers that can be used as part of user-defined experiments.\nRandomizers allow researchers to specify how to select which frames or\nsequences of frames to use as part of a particular session of a given\nexperiment, for instance in order to counterbalance stimuli used across\nsubjects, assign subjects randomly to different experimental conditions, or\nimplement a longitudinal design where the frames used in this study depend on\nthe frames used in the participant's last session.",
            "tag": "main",
            "itemtype": "main"
        }
    },
    "classes": {
        "Exp-frame-base": {
            "name": "Exp-frame-base",
            "shortname": "Exp-frame-base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-frame-base/component.js",
            "line": 13,
            "description": "This provides common base behavior required for any experiment frame. All experiment frames must extend this one.\nThis frame has no configuration options because all of its logic is internal, and should not be directly used\n in an experiment.\nAs a user you will almost never need to insert a component into a template directly- the platform should handle that\n  by automatically inserting an <a href=\"../classes/Exp-player.html\" class=\"crosslink\">exp-player</a> component when your experiment starts.\n However, a sample template usage is provided below for completeness.\n```handlebars\n  {{\n      component currentFrameTemplate\n        frameIndex=frameIndex\n        frameConfig=currentFrameConfig\n        frameContext=currentFrameContext\n       session=session\n        experiment=experiment\n       next=(action 'next')\n        exit=(action 'exit')\n        previous=(action 'previous')\n        saveHandler=(action 'saveFrame')\n        skipone=(action 'skipone')\n        extra=extra\n    }}\n ```",
            "uses": [
                "Full-screen",
                "Session-record"
            ]
        },
        "Exp-frame-select": {
            "name": "Exp-frame-select",
            "shortname": "Exp-frame-select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-frame-select/component.js",
            "line": 9,
            "description": "Frame that allows you to specify a list of possible frames to show, plus an index or\n list of indices of which ones to actually show. The frame(s) will be inserted into the\n sequence of frames for this study on the fly, so that you can use a custom\n <a href=\"../classes/Exp-frame-base.html#property_generateProperties\" class=\"crosslink\">generateProperties</a>\n function to select which frame(s) to show.\n\nThis frame serves as a wrapper for the randomizer <a href=\"../classes/Select.html\" class=\"crosslink\">select</a>,\n which is evaluated during experiment parsing and cannot be modified on the fly.\n\nFor more information about making study behavior conditional on data collected,\n see <a href=\"https://lookit.readthedocs.io/en/develop/researchers-create-experiment.html#conditional-logic\">the Lookit docs</a>.\n\nExample usage:\n ```json\n        \"study-procedure\": {\n            \"kind\": \"exp-frame-select\",\n            \"frameOptions\": [\n                {\n                    \"kind\": \"exp-lookit-text\",\n                    \"blocks\": [\n                        {\n                            \"emph\": true,\n                            \"text\": \"Cats are great\"\n                        },\n                        {\n                            \"text\": \"We are measuring how much your child loves cats now. Beep boop!\"\n                        }\n                    ]\n                },\n                {\n                    \"kind\": \"exp-lookit-text\",\n                    \"blocks\": [{\n                            \"emph\": true,\n                            \"text\": \"Your child is not eligible for this study\"\n                        },\n                        {\n                            \"text\": \"Either you do not have any cats or your child does not love cats.\"\n                        }\n                    ]\n                }\n            ],\n            \"generateProperties\": \"function(expData, sequence, child, pastSessions) {var formData = expData['0-eligibility-survey'].formData; if (formData.nCats >= 1 && formData.loveCats == 'yes') { console.log('eligible'); return { 'whichFrames': 0, 'ELIGIBLE': true } } else { console.log('ineligible'); return { 'whichFrames': 1,  'ELIGIBLE': false } } }\"\n        }\n```\n\n**Warning:** to avoid unpredictable behavior, this frame does not itself use any\n <a href=\"../classes/Exp-frame-base.html#property_selectNextFrame\" class=\"crosslink\">selectNextFrame</a> passed to it.\n (Frames within the `frameOptions` list are welcome to make use of `selectNextFrame`, though!)\n\nData will be stored for this frame so that any ``generatedProperties`` are available\n for future use; however, it will proceed immediately upon loading to the first frame\n that is specified (or the next frame in the original sequence, if it turns out that `whichFrames` is an empty\n list).\n\nIn `expData`, the frame keys for all frames generated by this frame will be prefixed\n by this frame's ID, with an index within `whichFrames` appended to the end of the ID.\n For instance, if this frame's ID is `1-study-procedure`, and it generates three frames,\n we would have keys `1-study-procedure`, `1-study-procedure-0`, `1-study-procedure-1`, and\n `1-study-procedure-2`.",
            "extends": "Exp-frame-base"
        },
        "Exp-lookit-calibration": {
            "name": "Exp-lookit-calibration",
            "shortname": "Exp-lookit-calibration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 20,
            "description": "Frame to do calibration for looking direction. Shows a small video/image in a sequence\n of locations so you'll have video of the child looking to those locations at known times.\nThe attention-grabber can be either a small video or an image (see examples below of each).\n Images can be animated (spinning or bouncing).\nGenerally you will want to have video of this frame. You can set doRecording to true to\n make a video clip just for this frame, or you can use session-level recording (set\n startSessionRecording to true on this or a previous frame). If either type of recording\n is starting on this frame, it waits until recording starts to display the first calibration\n segment.\nIt can be displayed at center, left, or right of the screen. You can specify the sequence\n of positions or use the default ['center', 'left', 'right', 'center']. Each time it moves,\n the video (if any) and audio restart, and an event is recorded with the location and time (and time\n relative to any video recording) of the segment start.\nFor details about specifying media locations, please see\n https://lookit.readthedocs.io/en/develop/researchers-prep-stimuli.html?highlight=basedir#directory-structure\nThis frame is displayed fullscreen, to match the frames you will likely want to compare\n looking behavior on. If the participant leaves fullscreen, that will be\n recorded as an event, and a large \"return to fullscreen\" button will be displayed. Don't\n use video coding from any intervals where the participant isn't in fullscreen mode - the\n position of the attention-grabbers won't be as expected.\nIf the frame before it is not fullscreen, that frame\n needs to include a manual \"next\" button so that there's a user interaction\n event to trigger fullscreen mode. (Browsers don't allow us to switch to FS\n without a user event.)\nExample usage:\n\n```json\n   \"calibration-with-image\": {\n        \"kind\": \"exp-lookit-calibration\",\n        \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n        \"audioTypes\": [\n            \"ogg\",\n            \"mp3\"\n        ],\n        \"videoTypes\": [\n            \"webm\",\n            \"mp4\"\n        ],\n        \"calibrationImage\": \"peekaboo_remy.jpg\",\n        \"calibrationLength\": 3000,\n        \"calibrationPositions\": [\n            \"center\",\n            \"left\",\n            \"right\"\n        ],\n        \"calibrationAudio\": \"chimes\",\n        \"calibrationImageAnimation\": \"spin\"\n    },\n   \"calibration-with-video\": {\n        \"kind\": \"exp-lookit-calibration\",\n        \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n        \"audioTypes\": [\n            \"ogg\",\n            \"mp3\"\n        ],\n        \"videoTypes\": [\n            \"webm\",\n            \"mp4\"\n        ],\n        \"calibrationLength\": 3000,\n        \"calibrationPositions\": [\n            \"center\",\n            \"left\",\n            \"right\"\n        ],\n        \"calibrationAudio\": \"chimes\",\n        \"calibrationVideo\": \"attentiongrabber\"\n    },\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Media-reload",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-change-detection": {
            "name": "Exp-lookit-change-detection",
            "shortname": "Exp-lookit-change-detection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 31,
            "description": "Frame for a preferential looking \"alternation\" or \"change detection\" paradigm trial,\n in which separate streams of images are displayed on the left and right of the screen.\n Typically, on one side images would be alternating between two categories - e.g., images\n of 8 vs. 16 dots, images of cats vs. dogs - and on the other side the images would all\n be in the same category.\n\nThe frame starts with an optional brief \"announcement\" segment, where an attention-getter\n video is displayed and audio is played. During this segment, the trial can be paused\n and restarted.\n\nIf `doRecording` is true (default), then we wait for recording to begin before the\n actual test trial can begin. We also always wait for all images to pre-load, so that\n there are no delays in loading images that affect the timing of presentation.\n\nYou can customize the appearance of the frame: background color overall, color of the\n two rectangles that contain the image streams, and border of those rectangles. You can\n also specify how long to present the images for, how long to clear the screen in between\n image pairs, and how long the test trial should be altogether.\n\nYou provide four lists of images to use in this frame: `leftImagesA`, `leftImagesB`,\n `rightImagesA`, and `rightImagesB`. The left stream will alternate between images in\n `leftImagesA` and `leftImagesB`. The right stream will alternate between images in\n `rightImagesA` and `rightImagesB`. They are either presented in random order (default)\n within those lists, or can be presented in the exact order listed by setting\n `randomizeImageOrder` to false.\n\nThe timing of all image presentations and the specific images presented is recorded in\n the event data.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\n needs to include a manual \"next\" button so that there's a user interaction\n event to trigger fullscreen mode. (Browsers don't allow switching to fullscreen\n without a user event.) If the user leaves fullscreen, that event is recorded, but the\n trial is not paused.\n\nSpecifying media locations:\n\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\n a list of src/type pairs with full paths like this:\n ```json\n    [\n        {\n            'src': 'http://.../video1.mp4',\n            'type': 'video/mp4'\n        },\n        {\n            'src': 'http://.../video1.webm',\n            'type': 'video/webm'\n        }\n    ]\n ```\n OR you can provide a single string 'stub', which will be expanded\n based on the parameter baseDir and the media types expected - either audioTypes or\n videoTypes as appropriate. For example, if you provide the audio source `intro`\n and baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\n will be expanded to:\n ```json\n                  [\n                         {\n                             src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                             type: 'audio/mp3'\n                         },\n                         {\n                             src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                             type: 'audio/ogg'\n                         }\n                 ]\n ```\n This allows you to simplify your JSON document a bit and also easily switch to a\n new version of your stimuli without changing every URL. You can mix source objects with\n full URLs and those using stubs within the same directory. However, any stimuli\n specified using stubs MUST be\n organized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nExample usage:\n```json\n \"frames\": {\n    \"alt-trial\": {\n        \"kind\": \"exp-lookit-change-detection\",\n        \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n        \"videoTypes\": [\"mp4\", \"webm\"],\n        \"audioTypes\": [\"mp3\", \"ogg\"],\n        \"trialLength\": 15,\n        \"attnLength\": 2,\n        \"fsAudio\": \"sample_1\",\n        \"unpauseAudio\": \"return_after_pause\",\n        \"pauseAudio\": \"pause\",\n        \"videoSources\": \"attentiongrabber\",\n        \"musicSources\": \"music_01\",\n        \"audioSources\": \"video_01\",\n        \"endAudioSources\": \"all_done\",\n        \"border\": \"thick solid black\",\n        \"leftImagesA\": [\"apple.jpg\", \"orange.jpg\"],\n        \"rightImagesA\": [\"square.png\", \"tall.png\", \"wide.png\"],\n        \"leftImagesB\": [\"apple.jpg\", \"orange.jpg\"],\n        \"rightImagesB\": [\"apple.jpg\", \"orange.jpg\"],\n        \"startWithA\": true,\n        \"randomizeImageOrder\": true,\n        \"displayMs\": 500,\n        \"blankMs\": 250,\n        \"containerColor\": \"white\",\n        \"backgroundColor\": \"#abc\",\n    }\n }\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-composite-video-trial": {
            "name": "Exp-lookit-composite-video-trial",
            "shortname": "Exp-lookit-composite-video-trial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 19,
            "description": "Composite video display for typical looking measures trials (e.g. preferential looking,\nlooking time). (Previously called exp-lookit-video.)\n\nTrial consists of four phases, each of which is optional.\n\n1. Announcement: The audio in audioSources is played while the attnSources video is played centrally, looping as needed. This lasts for announceLength seconds or the duration of the audio, whichever is longer. To skip this phase, set announceLength to 0 and do not provide audioSources.\n\n2. Intro: The introSources video is played centrally until it ends. To skip this phase, do not provide introSources.\n\n3. Calibration: The video in calibrationVideoSources is played (looping as needed) in each of the locations specified in calibrationPositions in turn, remaining in each position for calibrationLength ms. At the start of each position the audio in calibrationAudioSources is played once. (Audio will be paused and restarted if it is longer than calibrationLength.) Set calibrationLength to 0 to skip calibration.\n\n4. Test: The video in sources and audio in musicSources (optional) are played until either: testLength seconds have elapsed (with video looping if needed), or the video has been played testCount times. If testLength is set, it overrides testCount - for example if testCount is 1 and testLength is 30, a 10-second video will be played 3 times. If the participant pauses the study during the test phase, then after restarting the trial, the video in altSources will be used again (defaulting to the same video if altSources is not provided). To skip this phase, do not provide sources.\n\nSpecifying media locations:\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n   [\n       {\n           'src': 'http://.../video1.mp4',\n           'type': 'video/mp4'\n       },\n       {\n           'src': 'http://.../video1.webm',\n           'type': 'video/webm'\n       }\n   ]\n```\nOR you can provide a single string 'stub', which will be expanded\nbased on the parameter baseDir and the media types expected - either audioTypes or\nvideoTypes as appropriate. For example, if you provide the audio source `intro`\nand baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\nwill be expanded to:\n```json\n                [\n                       {\n                           src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                           type: 'audio/mp3'\n                       },\n                       {\n                           src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                           type: 'audio/ogg'\n                       }\n               ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be\norganized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nExample usage:\n\n```json\n       \"sample-intermodal-trial-2\": {\n           \"kind\": \"exp-lookit-composite-video-trial\",\n           \"isLast\": false,\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/intermodal/\",\n           \"sources\": \"sbs_ramp_down_up_apple_c1_b1_NN\",\n           \"testCount\": 2,\n           \"altSources\": \"sbs_ramp_up_down_apple_c1_b1_NN\",\n           \"audioTypes\": [\n               \"ogg\",\n               \"mp3\"\n           ],\n           \"pauseAudio\": \"pause\",\n           \"videoTypes\": [\n               \"webm\",\n               \"mp4\"\n           ],\n           \"attnSources\": \"attentiongrabber\",\n           \"audioSources\": \"video_02\",\n           \"introSources\": \"cropped_book\",\n           \"musicSources\": \"music_02\",\n           \"unpauseAudio\": \"return_after_pause\",\n           \"calibrationLength\": 3000,\n           \"calibrationAudioSources\": \"chimes\",\n           \"calibrationVideoSources\": \"attentiongrabber\"\n       }\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Media-reload",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-dialogue-page": {
            "name": "Exp-lookit-dialogue-page",
            "shortname": "Exp-lookit-dialogue-page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "namespace": "",
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 18,
            "description": "This frame is deprecated and will not be included in release 2.x. For new studies, use\nthe frame {{#crossLink \"Exp-lookit-images-audio\"}}{{/crossLink}} instead.\n\nFrame to implement a storybook page with dialogue spoken by characters.\nFirst, characters appear and any main narration audio is played.\nNext, the user can click on the characters to play additional audio\nassociated with each character image, or (for a choice trial) the user clicks\none of the images to select it as an answer. Once main narration audio has\nbeen played and either a selection has been made (for a choice trial,\nisChoiceFrame: true) or all\nrequired character audio has been played (for a non-choice trial), the user\ncan proceed by pressing 'next'. (A trial with only main narration audio can\nalso simply auto-proceed when audio is finished.)\n\nRecording is optional. If webcam recording is conducted (doRecording: true)\nthen audio does not start until recording does, to ensure the entire trial\nis recorded.\n\nThe character images are specified in 'images', including an image source,\npositioning on the screen, any animation at the start of the trial, any\nassociated audio, and whether that audio is required.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nThe examples below show a few expected uses of this frame. In phase-2,\ntwo characters are shown; the protagonist is already present, and speaker1\nflies in from the left. Speaker1 has associated audio (dialogue). After\nthe narrative audio, the user can click on speaker1 to play the audio, and\nwill then be able to proceed.\n\nphase-5 is a choice trial, where the user has to click on one of the two\nimages before proceeding.\n\n```json\n\"frames\": {\n       \"phase-2\": {\n           \"kind\": \"exp-lookit-dialogue-page\",\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/politeness/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"backgroundImage\": \"order1_test1_background.png\",\n           \"doRecording\": false,\n           \"autoProceed\": false,\n           \"parentTextBlock\": {\n               \"title\": \"Parents!\",\n               \"text\": \"some instructions\",\n               \"emph\": true,\n               \"css\": {\n                   \"color\": \"red\",\n                   \"font-size\": \"12px\"\n               }\n           },\n           \"images\": [\n               {\n                   \"id\": \"protagonist\",\n                   \"src\": \"order1_test1_listener1.png\",\n                   \"left\": \"40\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               },\n               {\n                   \"id\": \"speaker1\",\n                   \"text\": \"Click to hear what he said!\",\n                   \"src\": \"order1_test1_speaker1.png\",\n                   \"left\": \"20\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\",\n                   \"animate\": \"flyleft\",\n                   \"requireAudio\": true,\n                   \"imageAudio\": \"polcon_example_2_2speaker1polite\"\n               }\n           ],\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": \"polcon_example_2_1intro\"\n               }\n           ]\n       },\n       \"phase-5\": {\n           \"kind\": \"exp-lookit-dialogue-page\",\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/politeness/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"backgroundImage\": \"order1_test1_background.png\",\n           \"doRecording\": false,\n           \"autoProceed\": false,\n           \"isChoiceFrame\": true,\n           \"parentTextBlock\": {\n               \"title\": \"Parents:\",\n               \"text\": \"click on the character your child selects.\",\n               \"emph\": true\n           },\n           \"images\": [\n               {\n                   \"id\": \"speaker1\",\n                   \"src\": \"order1_test1_speaker1.png\",\n                   \"left\": \"20\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               },\n               {\n                   \"id\": \"speaker2\",\n                   \"src\": \"order1_test1_speaker2.png\",\n                   \"left\": \"60\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               }\n           ],\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": \"polcon_example_5q1\"\n               }\n           ]\n       }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Expand-assets",
                "Video-record"
            ],
            "deprecated": true
        },
        "Exp-lookit-exit-survey": {
            "name": "Exp-lookit-exit-survey",
            "shortname": "Exp-lookit-exit-survey",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 31,
            "description": "Standard exit survey for Lookit studies: confirm participant birthdate, ask user for video sharing permission level & Databrary sharing, option to withdraw, freeform comments, debriefing/thank you text. Leaves fullscreen mode.\n\n```json\n\"frames\": {\n    \"my-exit-survey\": {\n        \"kind\": \"exp-lookit-exit-survey\",\n        \"debriefing\": {\n            \"title\": \"Thank you!\",\n            \"text\": \"Learning how children react to ducks will help scientists design better rubber ducks.\",\n            \"image\": {\n                \"src\": \"https://s3.amazonaws.com/lookitcontents/ducks/duck.png\",\n                \"alt\": \"Very cute duck\"\n            }\n        }\n    }\n}\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Validations"
            ]
        },
        "Exp-lookit-geometry-alternation": {
            "name": "Exp-lookit-geometry-alternation",
            "shortname": "Exp-lookit-geometry-alternation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "namespace": "",
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 19,
            "description": "This frame is a bespoke frame for a beta tester. It is deprecated and will not be\nincluded in release 2.x. For new studies, use {{#crossLink \"Exp-lookit-change-detection\"}}{{/crossLink}} instead.\n\nFrame to implement specific test trial structure for geometry alternation\nexperiment. Includes announcement, calibration, and alternation (test)\nphases. During \"alternation,\" two streams of triangles are shown, in\nrectangles on the left and right of the screen: one one side both size and\nshape change, on the other only size changes. Frame is displayed fullscreen\nand video recording is conducted during calibration/test.\n\nThe geometry randomizer generates a series of ExpLookitGeometryAlternation\nframes.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nSpecifying media locations:\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n   [\n       {\n           'src': 'http://.../video1.mp4',\n           'type': 'video/mp4'\n       },\n       {\n           'src': 'http://.../video1.webm',\n           'type': 'video/webm'\n       }\n   ]\n```\nOR you can provide a single string 'stub', which will be expanded\nbased on the parameter baseDir and the media types expected - either audioTypes or\nvideoTypes as appropriate. For example, if you provide the audio source `intro`\nand baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\nwill be expanded to:\n```json\n                 [\n                        {\n                            src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                            type: 'audio/mp3'\n                        },\n                        {\n                            src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                            type: 'audio/ogg'\n                        }\n                ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be\norganized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nExample usage:\n\n```json\n\"frames\": {\n   \"alt-trial\": {\n       \"kind\": \"exp-lookit-geometry-alternation\",\n       \"triangleLineWidth\": 8,\n       \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/geometry/\",\n       \"videoTypes\": [\"mp4\", \"webm\"],\n       \"audioTypes\": [\"mp3\", \"ogg\"],\n       \"calibrationVideoSources\": \"attention\",\n       \"trialLength\": 60,\n       \"attnLength\": 10,\n       \"calibrationLength\": 3000,\n       \"fsAudio\": \"fullscreen\",\n       \"triangleColor\": \"#056090\",\n       \"unpauseAudio\": \"return_after_pause\",\n       \"pauseAudio\": \"pause\",\n       \"videoSources\": \"attentiongrabber\",\n       \"musicSources\": \"happy-stroll\",\n       \"calibrationAudioSources\": \"chimes\",\n       \"altOnLeft\": true,\n       \"context\": true,\n       \"audioSources\": \"video_01\",\n       \"endAudioSources\": \"all_done\"\n   }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ],
            "deprecated": true
        },
        "Exp-lookit-geometry-alternation-open": {
            "name": "Exp-lookit-geometry-alternation-open",
            "shortname": "Exp-lookit-geometry-alternation-open",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "namespace": "",
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 19,
            "description": "This frame is a bespoke frame for a beta tester. It is deprecated and will not be\nincluded in release 2.x. For new studies, use {{#crossLink \"Exp-lookit-change-detection\"}}{{/crossLink}} instead.\n\nFrame to implement specific test trial structure for geometry alternation\nreplication study. Includes announcement, calibration, and alternation (test)\nphases. During \"alternation,\" two streams of \"open triangles\" are shown, in\nrectangles on the left and right of the screen: one one side both size and\nshape change, on the other only size changes. Frame is displayed fullscreen\nand video recording is conducted during calibration/test.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nSpecifying media locations:\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n   [\n       {\n           'src': 'http://.../video1.mp4',\n           'type': 'video/mp4'\n       },\n       {\n           'src': 'http://.../video1.webm',\n           'type': 'video/webm'\n       }\n   ]\n```\nOR you can provide a single string 'stub', which will be expanded\nbased on the parameter baseDir and the media types expected - either audioTypes or\nvideoTypes as appropriate. For example, if you provide the audio source `intro`\nand baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\nwill be expanded to:\n```json\n                 [\n                        {\n                            src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                            type: 'audio/mp3'\n                        },\n                        {\n                            src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                            type: 'audio/ogg'\n                        }\n                ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be\norganized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nExample usage:\n\n```json\n\"frames\": {\n   \"alt-trial\": {\n       \"kind\": \"exp-lookit-geometry-alternation-open\",\n       \"triangleLineWidth\": 8,\n       \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/geometry/\",\n       \"videoTypes\": [\"mp4\", \"webm\"],\n       \"audioTypes\": [\"mp3\", \"ogg\"],\n       \"calibrationVideoSources\": \"attention\",\n       \"trialLength\": 60,\n       \"attnLength\": 10,\n       \"calibrationLength\": 3000,\n       \"fsAudio\": \"fullscreen\",\n       \"triangleColor\": \"#056090\",\n       \"unpauseAudio\": \"return_after_pause\",\n       \"pauseAudio\": \"pause\",\n       \"videoSources\": \"attentiongrabber\",\n       \"musicSources\": \"happy-stroll\",\n       \"calibrationAudioSources\": \"chimes\",\n       \"altOnLeft\": true,\n       \"context\": true,\n       \"audioSources\": \"video_01\",\n       \"endAudioSources\": \"all_done\"\n   }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ],
            "deprecated": true
        },
        "Exp-lookit-images-audio": {
            "name": "Exp-lookit-images-audio",
            "shortname": "Exp-lookit-images-audio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 20,
            "description": "Frame to display image(s) and play audio, with optional video recording. Options allow\ncustomization for looking time, storybook, forced choice, and reaction time type trials,\nincluding training versions where children (or parents) get feedback about their responses.\n\nThis can be used in a variety of ways - for example:\n\n- Display an image for a set amount of time and measure looking time\n\n- Display two images for a set amount of time and play audio for a\nlooking-while-listening paradigm\n\n- Show a \"storybook page\" where you show images and play audio, having the parent/child\npress 'Next' to proceed. If desired,\nimages can appear and be highlighted at specific times\nrelative to audio. E.g., the audio might say \"This [image of Remy appears] is a boy\nnamed Remy. Remy has a little sister [image of Zenna appears] named Zenna.\n[Remy highlighted] Remy's favorite food is brussel sprouts, but [Zenna highlighted]\nZenna's favorite food is ice cream. [Remy and Zenna both highlighted] Remy and Zenna\nboth love tacos!\"\n\n- Play audio asking the child to choose between two images by pointing or answering\nverbally. Show text for the parent about how to help and when to press Next.\n\n- Play audio asking the child to choose between two images, and require one of those\nimages to be clicked to proceed (see \"choiceRequired\" option).\n\n- Measure reaction time as the child is asked to choose a particular option on each trial\n(e.g., a central cue image is shown first, then two options at a short delay; the child\nclicks on the one that matches the cue in some way)\n\n- Provide audio and/or text feedback on the child's (or parent's) choice before proceeding,\neither just to make the study a bit more interactive (\"Great job, you chose the color BLUE!\")\nor for initial training/familiarization to make sure they understand the task. Some\nimages can be marked as the \"correct\" answer and a correct answer required to proceed.\nIf you'd like to include some initial training questions before your test questions,\nthis is a great way to do it.\n\nIn general, the images are displayed in a designated region of the screen with aspect\nratio 7:4 (1.75 times as wide as it is tall) to standardize display as much as possible\nacross different monitors. If you want to display things truly fullscreen, you can\nuse `autoProceed` and not provide `parentText` so there's nothing at the bottom, and then\nset `maximizeDisplay` to true.\n\nWebcam recording may be turned on or off; if on, stimuli are not displayed and audio is\nnot started until recording begins. (Using the frame-specific `isRecording` property\nis good if you have a smallish number of test trials and prefer to have separate video\nclips for each. For reaction time trials or many short trials, you will likely want\nto use session recording instead - i.e. start the session recording before the first trial\nand end on the last trial - to avoid the short delays related to starting/stopping the video.)\n\nThis frame is displayed fullscreen, but is not paused or otherwise disabled if the\nuser leaves fullscreen. A button appears prompting the user to return to\nfullscreen mode.\n\nAny number of images may be placed on the screen, and their position\nspecified. (Aspect ratio will be the same as the original image.)\n\nThe examples below show a variety of usages, corresponding to those shown in the video.\n\nimage-1: Single image displayed full-screen, maximizing area on monitor, for 8 seconds.\n\nimage-2: Single image displayed at specified position, with 'next' button to move on\n\nimage-3: Image plus audio, auto-proceeding after audio completes and 4 seconds go by\n\nimage-4: Image plus audio, with 'next' button to move on\n\nimage-5: Two images plus audio question asking child to point to one of the images,\n  demonstrating different timing of image display & highlighting of images during audio\n\nimage-6: Three images with audio prompt, family has to click one of two to continue\n\nimage-7: Three images with audio prompt, family has to click correct one to continue -\n  audio feedback on incorrect answer\n\nimage-8: Three images with audio prompt, family has to click correct one to continue -\n  text feedback on incorrect answer\n\n\n\n```json\n\"frames\": {\n   \"image-1\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"images\": [\n           {\n               \"id\": \"cats\",\n               \"src\": \"two_cats.png\",\n               \"position\": \"fill\"\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"autoProceed\": true,\n       \"doRecording\": true,\n       \"durationSeconds\": 8,\n       \"maximizeDisplay\": true\n   },\n   \"image-2\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"images\": [\n           {\n               \"id\": \"cats\",\n               \"src\": \"three_cats.JPG\",\n               \"top\": 10,\n               \"left\": 30,\n               \"width\": 40\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"autoProceed\": false,\n       \"doRecording\": true,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       }\n   },\n   \"image-3\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"wheresremy\",\n       \"images\": [\n           {\n               \"id\": \"remy\",\n               \"src\": \"wheres_remy.jpg\",\n               \"position\": \"fill\"\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"audioTypes\": [\n           \"mp3\",\n           \"ogg\"\n       ],\n       \"autoProceed\": true,\n       \"doRecording\": false,\n       \"durationSeconds\": 4,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       },\n       \"showProgressBar\": true\n   },\n   \"image-4\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"peekaboo\",\n       \"images\": [\n           {\n               \"id\": \"remy\",\n               \"src\": \"peekaboo_remy.jpg\",\n               \"position\": \"fill\"\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"audioTypes\": [\n           \"mp3\",\n           \"ogg\"\n       ],\n       \"autoProceed\": false,\n       \"doRecording\": false,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       }\n   },\n   \"image-5\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"remyzennaintro\",\n       \"images\": [\n           {\n               \"id\": \"remy\",\n               \"src\": \"scared_remy.jpg\",\n               \"position\": \"left\"\n           },\n           {\n               \"id\": \"zenna\",\n               \"src\": \"love_zenna.jpg\",\n               \"position\": \"right\",\n               \"displayDelayMs\": 1500\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"highlights\": [\n           {\n               \"range\": [\n                   0,\n                   1.5\n               ],\n               \"imageId\": \"remy\"\n           },\n           {\n               \"range\": [\n                   1.5,\n                   3\n               ],\n               \"imageId\": \"zenna\"\n           }\n       ],\n       \"autoProceed\": false,\n       \"doRecording\": true,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       }\n   },\n   \"image-6\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"matchremy\",\n       \"images\": [\n           {\n               \"id\": \"cue\",\n               \"src\": \"happy_remy.jpg\",\n               \"position\": \"center\",\n               \"nonChoiceOption\": true\n           },\n           {\n               \"id\": \"option1\",\n               \"src\": \"happy_zenna.jpg\",\n               \"position\": \"left\",\n               \"displayDelayMs\": 2000\n           },\n           {\n               \"id\": \"option2\",\n               \"src\": \"annoyed_zenna.jpg\",\n               \"position\": \"right\",\n               \"displayDelayMs\": 2000\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"autoProceed\": false,\n       \"doRecording\": true,\n       \"choiceRequired\": true,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       },\n       \"canMakeChoiceBeforeAudioFinished\": true\n   },\n   \"image-7\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"matchzenna\",\n       \"images\": [\n           {\n               \"id\": \"cue\",\n               \"src\": \"sad_zenna.jpg\",\n               \"position\": \"center\",\n               \"nonChoiceOption\": true\n           },\n           {\n               \"id\": \"option1\",\n               \"src\": \"surprised_remy.jpg\",\n               \"position\": \"left\",\n               \"feedbackAudio\": \"negativefeedback\",\n               \"displayDelayMs\": 3500\n           },\n           {\n               \"id\": \"option2\",\n               \"src\": \"sad_remy.jpg\",\n               \"correct\": true,\n               \"position\": \"right\",\n               \"displayDelayMs\": 3500\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"autoProceed\": false,\n       \"doRecording\": true,\n       \"choiceRequired\": true,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       },\n       \"correctChoiceRequired\": true,\n       \"canMakeChoiceBeforeAudioFinished\": false\n   },\n   \"image-8\": {\n       \"kind\": \"exp-lookit-images-audio\",\n       \"audio\": \"matchzenna\",\n       \"images\": [\n           {\n               \"id\": \"cue\",\n               \"src\": \"sad_zenna.jpg\",\n               \"position\": \"center\",\n               \"nonChoiceOption\": true\n           },\n           {\n               \"id\": \"option1\",\n               \"src\": \"surprised_remy.jpg\",\n               \"position\": \"left\",\n               \"feedbackText\": \"Try again! Remy looks surprised in that picture. Can you find the picture where he looks sad, like Zenna?\",\n               \"displayDelayMs\": 3500\n           },\n           {\n               \"id\": \"option2\",\n               \"src\": \"sad_remy.jpg\",\n               \"correct\": true,\n               \"position\": \"right\",\n               \"feedbackText\": \"Great job! Remy is sad in that picture, just like Zenna is sad.\",\n               \"displayDelayMs\": 3500\n           }\n       ],\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"autoProceed\": false,\n       \"doRecording\": true,\n       \"choiceRequired\": true,\n       \"parentTextBlock\": {\n           \"text\": \"Some explanatory text for parents\",\n           \"title\": \"For parents\"\n       },\n       \"correctChoiceRequired\": true,\n       \"canMakeChoiceBeforeAudioFinished\": false\n   }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-images-audio-infant-control": {
            "name": "Exp-lookit-images-audio-infant-control",
            "shortname": "Exp-lookit-images-audio-infant-control",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-images-audio-infant-control/component.js",
            "line": 9,
            "description": "Infant-controlled version of the {{#crossLink \"Exp-lookit-images-audio\"}}{{/crossLink}} frame. This works the same way as\nexp-lookit-images-audio except that you can enable the parent to:\n\n- end the trial by pressing the `endTrialKey` key\n- hold down the `lookawayKey` (or the mouse button) to indicate that the child is not looking; the trial will automatically end\n  after the lookaway criterion is met.\n\nYou can disable either of these behaviors by setting the key to `''`.\n\nThe frame will still end when it would have anyway if neither of these things happen! For instance, if you would have\ndisplayed an image for 30 seconds, then after 30 seconds the frame will move on, serving as a \"ceiling\" on looking time.\n\nLookaway criterion: You have two options for how to determine when the child has looked away long enough to proceed.\nSet the `lookawayType` to `\"total\"` to accumulate lookaway time until the child has looked away for a total of\n`lookawayThreshold` seconds. (For instance, if the `lookawayThreshold` is 2, then the trial will end after the child\nlooks away for 0.5s, then 1s, then 0.5s.) Set the `lookawayType` to `\"continuous\"` to require that the child look\naway for a continuous `lookawayThreshold`-second interval. (For instance, if the `lookawayThreshold` is 2, then the\nchild might look away for 1s, 1.5s, and 1s but the trial would continue until she looked away for 2s.)\n\nThe looking time measurement begins only when the video starts, not while a video connection is established.\n\nIf a `lookawayKey` is defined, lookaways are recorded the entire time the frame is running. However, the looking\ntime measurement only starts once images are displayed (or the \"delay\" timer starts counting down, for images\nshown at a delay - but e.g., not during webcam connection). Lookaways at the very\nstart don't count! If the child is not looking at the start, the measurement begins once they look\nfor the first time.\n\nTwo pieces of data are recorded for convenience when coding or if implementing a live habituation procedure:\n`totalLookingTime` and `reasonTrialEnded`.\n\nExample usage:\n\n```json\n\"play-video-twice\": {\n   \"kind\": \"exp-lookit-video-infant-control\",\n   \"lookawayKey\": \"p\",\n   \"lookawayType\": \"total\",\n   \"lookawayThreshold\": 2,\n   \"endTrialKey\": \"q\",\n\n   \"audio\": {\n       \"loop\": false,\n       \"source\": \"peekaboo\"\n   },\n   \"video\": {\n       \"top\": 10,\n       \"left\": 25,\n       \"loop\": true,\n       \"width\": 50,\n       \"source\": \"cropped_apple\"\n   },\n   \"backgroundColor\": \"white\",\n   \"autoProceed\": true,\n   \"parentTextBlock\": {\n       \"text\": \"If your child needs a break, just press X to pause!\"\n   },\n   \"requiredDuration\": 0,\n   \"requireAudioCount\": 0,\n   \"requireVideoCount\": 2,\n   \"restartAfterPause\": true,\n   \"pauseKey\": \"x\",\n   \"pauseKeyDescription\": \"X\",\n   \"pauseAudio\": \"pause\",\n   \"pauseVideo\": \"attentiongrabber\",\n   \"pauseText\": \"(You'll have a moment to turn around again.)\",\n   \"unpauseAudio\": \"return_after_pause\",\n   \"doRecording\": true,\n   \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n   \"audioTypes\": [\n       \"ogg\",\n       \"mp3\"\n   ],\n   \"videoTypes\": [\n       \"webm\",\n       \"mp4\"\n   ]\n}\n\n```",
            "extends": "Exp-lookit-images-audio",
            "uses": [
                "Infant-controlled-timing"
            ]
        },
        "Exp-lookit-instructions": {
            "name": "Exp-lookit-instructions",
            "shortname": "Exp-lookit-instructions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 16,
            "description": "A frame to display instructions to the user. The user's webcam may optionally be\ndisplayed, and audio and video clips may be included in the instructions (and may be\nrequired to be played before moving on).\n\nEach element of the 'blocks' parameter is rendered using {{#crossLink \"Exp-text-block\"}}{{/crossLink}}.\n\n```json\n\"frames\": {\n       \"instructions\": {\n           \"kind\": \"exp-lookit-instructions\",\n           \"blocks\": [\n               {\n                   \"title\": \"Parent's role\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Follow instructions\"\n                       },\n                       {\n                           \"text\": \"Only do each joke once\"\n                       }\n                   ]\n               },\n               {\n                   \"text\": \"It's important that we can see you\",\n                   \"image\": {\n                       \"alt\": \"Father holding child looking over his shoulder\",\n                       \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics/OverShoulder.jpg\"\n                   },\n                   \"title\": \"Camera position\"\n               },\n               {\n                   \"text\": \"Here's some audio you have to play\",\n                   \"title\": \"Test\",\n                   \"mediaBlock\": {\n                       \"text\": \"You should hear 'Ready to go?'\",\n                       \"isVideo\": false,\n                       \"sources\": [\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/audio/ready.mp3\",\n                               \"type\": \"audio/mp3\"\n                           },\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/audio/ready.ogg\",\n                               \"type\": \"audio/ogg\"\n                           }\n                       ],\n                       \"mustPlay\": true,\n                       \"warningText\": \"Please try playing the sample audio.\"\n                   }\n               },\n               {\n                   \"text\": \"Here's a video you don't have to play!\",\n                   \"title\": \"Test\",\n                   \"mediaBlock\": {\n                       \"text\": \"Look at that.\",\n                       \"isVideo\": true,\n                       \"sources\": [\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/examples/7_control_same.mp4\",\n                               \"type\": \"video/mp4\"\n                           },\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/examples/7_control_same.webm\",\n                               \"type\": \"video/webm\"\n                           }\n                       ],\n                       \"mustPlay\": false\n                   }\n               }\n           ],\n           \"showWebcam\": true,\n           \"webcamBlocks\": [\n               {\n                   \"title\": \"Some webcam instructions\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Like this!\"\n                       },\n                       {\n                           \"text\": \"Be careful your webcam does not have tape over it\"\n                       }\n                   ]\n               }\n           ],\n           \"nextButtonText\": \"Next\"\n       }\n}\n\n```",
            "extends": "Video-record"
        },
        "Exp-lookit-mood-questionnaire": {
            "name": "Exp-lookit-mood-questionnaire",
            "shortname": "Exp-lookit-mood-questionnaire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 22,
            "description": "A standard mood survey with questions about factors that might affect a\nchild's responses. Includes Likert-type ratings of the CHILD's position on\nthe following scales:\n- Tired - Rested\n- Sick - Healthy\n- Fussy - Happy\n- Calm - Active\n\nand of the PARENT's position on:\n- Tired - Energetic\n- Overwhelmed - On top of things\n- Upset - Happy\n\nIt also asks for a response in hours:minutes for:\n- how long ago the child last woke up from sleep or a nap\n- how long until he/she is due for another nap/sleep (if regular nap schedule)\n- how long ago the child last ate/drank\n\nand for what the child was doing just before this (free-response). Responses\nto all questions are required to move on.\n\nThis frame can be used as a starting point/example for other custom survey frames, or development of a customizable survey frame.\n\n```json\n\"frames\": {\n   \"mood-survey\": {\n       \"introText\": \"How are you two doing? We really want to know: we’re interested in how your child’s mood affects his or her looking preferences.\",\n       \"kind\": \"exp-lookit-mood-questionnaire\"\n   }\n}\n\n```",
            "extends": "Exp-frame-base"
        },
        "Exp-lookit-observation": {
            "name": "Exp-lookit-observation",
            "shortname": "Exp-lookit-observation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 16,
            "description": "A frame to collect a video observation with the participant's help. By default the\nwebcam is displayed to the participant and they can choose when to start, pause, and\nresume recording. The duration of an individual recording can optionally be limited\nand/or recording can be started automatically. This is intended for cases where we\nwant the parent to perform some test or behavior with the child, rather than\npresenting stimuli ourselves. E.g., you might give instructions to conduct a structured\ninterview and allow the parent to control recording.\n\nEach element of the 'blocks' parameter is rendered using {{#crossLink \"Exp-text-block\"}}{{/crossLink}}.\n\n```\n   \"frames\": {\n       \"observation\": {\n           \"kind\": \"exp-lookit-observation\",\n           \"blocks\": [\n               {\n                   \"title\": \"Time to do the joke!\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Rip the paper\"\n                       },\n                       {\n                           \"text\": \"Wait ten seconds\"\n                       }\n                   ]\n               }\n           ],\n           \"hideWebcam\": true,\n           \"hideControls\": false,\n           \"recordSegmentLength\": 10,\n           \"startRecordingAutomatically\": false,\n           \"nextButtonText\": \"move on\",\n           \"showPreviousButton\": false\n       }\n   }\n```",
            "extends": "Video-record"
        },
        "Exp-lookit-preferential-looking": {
            "name": "Exp-lookit-preferential-looking",
            "shortname": "Exp-lookit-preferential-looking",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 18,
            "description": "Basic image display for looking measures (e.g. preferential looking, looking time).\nTrial consists of four phases, each of which is optional.\n\nThis is a composite trial very similar to exp-lookit-composite-video-trial except that\nit allows specifying either video stimuli or static images.\n\nIn general it may be simpler to use a combination of exp-lookit-calibration,\nexp-lookit-video, and exp-lookit-images-audio frames.\n\n1. Announcement: The audio in announcementAudio is played while the announcementVideo\nvideo is played centrally, looping as needed. This lasts for announcementLength seconds\nor the duration of the audio, whichever is longer. To skip this phase, set\nannouncementLength to 0 and do not provide announcementAudio.\n\n2. Intro: The introVideo video is played centrally until it ends. To skip this phase,\ndo not provide introVideo.\n\n3. Calibration: The video in calibrationVideo is played (looping as needed) in each of\nthe locations specified in calibrationPositions in turn, remaining in each position for\ncalibrationLength ms. At the start of each position the audio in calibrationAudio is\nplayed once. (Audio will be paused and restarted if it is longer than calibrationLength.)\nSet calibrationLength to 0 to skip calibration.\n\n4. Test: Test images are displayed or the video in testVideo and audio in testAudio (optional) are played until\neither: testLength seconds have elapsed (with video looping if needed), or the video\nhas been played testCount times. If testLength is set, it overrides testCount - for\nexample if testCount is 1 and testLength is 30, a 10-second video will be played 3 times.\nIf the participant pauses the study during the test phase, then after restarting the\ntrial, the video in altTestVideo will be used again (defaulting to the same video if\naltTestVideo is not provided).\n\nTo specify test images, you can provide leftImage, rightImage, and/or centerImage, or you can provide a list of\npossibleImages and give an index in that list for any of those three placements.\n\nSpecifying media locations:\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n   [\n       {\n           'src': 'http://.../video1.mp4',\n           'type': 'video/mp4'\n       },\n       {\n           'src': 'http://.../video1.webm',\n           'type': 'video/webm'\n       }\n   ]\n```\nOR you can provide a string 'stub', which will be expanded\nbased on the parameter baseDir. Expected audio/video locations will be based on either audioTypes or\nvideoTypes as appropriate; images will be expected to all be in an img/ subdirectory.\nFor example, if you provide the audio source `intro`,\nand baseDir is `https://mystimuli.org/mystudy/`, with audioTypes `['mp3', 'ogg']`, then this\nwill be expanded to:\n```json\n                [\n                       {\n                           src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                           type: 'audio/mp3'\n                       },\n                       {\n                           src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                           type: 'audio/ogg'\n                       }\n               ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be\norganized as expected under `baseDir/MEDIATYPE/filename.MEDIATYPE`.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nExample usage:\n\n```json\n   \"sample-trial\": {\n       \"kind\": \"exp-lookit-preferential-looking\",\n       \"isLast\": false,\n       \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/labelsconcepts/\",\n       \"leftImage\": \"stapler_test_02.jpg\",\n       \"testLength\": 8,\n       \"audioTypes\": [\n           \"ogg\",\n           \"mp3\"\n       ],\n       \"pauseAudio\": \"pause\",\n       \"rightImage\": \"novel_02.jpg\",\n       \"videoTypes\": [\n           \"webm\",\n           \"mp4\"\n       ],\n       \"announcementVideo\": \"attentiongrabber\",\n       \"announcementAudio\": \"video_02\",\n       \"introVideo\": \"cropped_book\",\n       \"testAudio\": \"400Hz_tones\",\n       \"unpauseAudio\": \"return_after_pause\",\n       \"calibrationLength\": 0,\n       \"calibrationAudio\": \"chimes\",\n       \"calibrationVideo\": \"attentiongrabber\",\n       \"loopTestAudio\": false\n   }\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-preview-explanation": {
            "name": "Exp-lookit-preview-explanation",
            "shortname": "Exp-lookit-preview-explanation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "namespace": "",
            "file": "app/components/exp-lookit-preview-explanation/component.js",
            "line": 9,
            "description": "A frame that to explain any blinding procedures to parents, and offer them the option to preview stimuli before the study. Two buttons allow the user to move forward: one goes to the next frame (if the parent wants to preview stimuli), and one skips the next frame and goes to the one after that (if the parent declins). Therefore, this frame should be followed by an {{#crossLink \"Exp-video-preview\"}}{{/crossLink}} frame.\n\n```json\n\"frames\": {\n   \"my-video-preview-explanation\": {\n       \"introBlock\": {\n           \"text\": \"During the videos, we'll ask that you hold your child over your shoulder like this, so that you're facing face away from the screen.\"\n       },\n       \"image\": {\n           \"alt\": \"Father holding child looking over his shoulder\",\n           \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics/OverShoulder.jpg\"\n       },\n       \"kind\": \"exp-lookit-preview-explanation\",\n       \"skipButtonText\": \"Skip preview\",\n       \"previewButtonText\": \"I'd like to preview the videos\",\n       \"blocks\": [\n           {\n               \"text\": \"The reason we ask this is that your child is learning from you all the time. Even if he or she can't see where you're looking, you may unconsciously shift towards one side or the other and influence your child's attention. We want to make sure we're measuring your child's preferences, not yours!\"\n           },\n           {\n               \"text\": \"If you'd like to see the videos your child will be shown, you can take a look ahead of time now. It's important that you preview the videos without your child, so that the videos will still be new to them.\"\n           }\n       ],\n       \"showPreviousButton\": true\n   }\n}\n\n```",
            "extends": "Exp-frame-base",
            "deprecated": true
        },
        "Exp-lookit-start-recording": {
            "name": "Exp-lookit-start-recording",
            "shortname": "Exp-lookit-start-recording",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 17,
            "description": "Dedicated frame to start session recording.\n\nThis frame will take a few seconds to get a session-level recording started, then proceed\nimmediately to the next frame. (See https://lookit.readthedocs.io/en/develop/researchers-create-experiment.html?highlight=startSessionRecording#recording-webcam-video\nfor information about session-level vs. individual-frame recording.)\n\n(You could also set startSessionRecording to true on any frame, but then you need to rely\non that individual frame's setup for waiting for recording before getting started.)\n\nIf the following frame is full-screen, make this one full-screen too.\n\nJust like for exp-lookit-calibration, you can display a video or an optionally animated\nimage (see below for examples of each) as a placeholder while getting recording started.\n\nFor details about specifying media locations, please see\nhttps://lookit.readthedocs.io/en/develop/researchers-prep-stimuli.html?highlight=basedir#directory-structure\n\nExample usage:\n\n```json\n\n   \"start-recording-with-image\": {\n       \"kind\": \"exp-lookit-start-recording\",\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"videoTypes\": [\n           \"webm\",\n           \"mp4\"\n       ],\n       \"image\": \"peekaboo_remy.jpg\",\n       \"imageAnimation\": \"spin\"\n       \"displayFullscreen\": true\n   },\n\n   \"start-recording-with-video\": {\n       \"kind\": \"exp-lookit-start-recording\",\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"videoTypes\": [\n           \"webm\",\n           \"mp4\"\n       ],\n       \"video\": \"attentiongrabber\",\n       \"displayFullscreen\": true\n   },\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Media-reload",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-stimuli-preview": {
            "name": "Exp-lookit-stimuli-preview",
            "shortname": "Exp-lookit-stimuli-preview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 16,
            "description": "A frame that to explain any blinding procedures to parents, and offer them the option to preview stimuli before the study. Two buttons allow the user to move forward: one goes to the next frame (if the parent wants to preview stimuli), and one skips the next frame and goes to the one after that (if the parent declins). Therefore, this frame should be followed by an {{#crossLink \"Exp-video-preview\"}}{{/crossLink}} frame.\n\n```json\n\"frames\": {\n   \"my-video-preview-explanation\": {\n       \"kind\": \"exp-lookit-stimuli-preview\",\n       \"doRecording\": true,\n       \"skipButtonText\": \"Skip preview\",\n       \"previewButtonText\": \"I'd like to preview the videos\",\n       \"blocks\": [\n           {\n                \"text\": \"During the videos, we'll ask that you hold your child over your shoulder like this, so that you're facing face away from the screen.\"\n           },\n           {\n               \"image\": {\n                   \"alt\": \"Father holding child looking over his shoulder\",\n                   \"src\": \"https://raw.githubusercontent.com/kimberscott/placeholder-stimuli/master/img/OverShoulder.jpg\"\n               }\n           },\n           {\n               \"text\": \"This is because your child is learning from you all the time, and may pick up on even very small cues about what you think. But if you can't see the stimuli, we're definitely only measuring your child's own beliefs.\"\n           },\n           {\n               \"text\": \"If you'd like to see the videos your child will be shown, you can take a look ahead of time now. It's important that you preview the videos without your child, so that the videos will still be new to them.\"\n           }\n       ],\n       \"showPreviousButton\": true,\n       \"baseDir\": \"https://raw.githubusercontent.com/kimberscott/placeholder-stimuli/master/\",\n       \"videoTypes\": [\"webm\", \"mp4\"],\n       \"audioTypes\": [\"mp3\", \"ogg\"],\n       \"stimuli\": [\n          {\n            \"caption\": \"At the start of each section, we will play a video like this that shows a common household object, like a book or an apple.\",\n            \"video\": \"cropped_book\"\n          },\n          {\n            \"caption\": \"Your child will be looking at images like this, and we'll ask him or her to describe each one.\",\n            \"image\": \"square.png\"\n          },\n          {\n            \"caption\": \"Between sections, we will play audio like this so you know where you are in the study.\",\n            \"audio\": \"sample_1\"\n          }\n        ]\n   }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Expand-assets",
                "Video-record",
                "Media-reload"
            ]
        },
        "Exp-lookit-stop-recording": {
            "name": "Exp-lookit-stop-recording",
            "shortname": "Exp-lookit-stop-recording",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 17,
            "description": "Dedicated frame to stop session recording.\n\nThis frame will take a few seconds to upload an ongoing session-level recording, then proceed\nimmediately to the next frame. (See https://lookit.readthedocs.io/en/develop/researchers-create-experiment.html?highlight=startSessionRecording#recording-webcam-video\nfor information about session-level vs. individual-frame recording.)\n\nIt will time out after a default of 5 minutes of waiting for the upload to complete, or\nafter 5 seconds of not seeing any progress (i.e. something went wrong with starting the\nupload process). If there is no active session recording, it proceeds immediately.\n\n\n\n(You could also set stopSessionRecording to true on any frame, but you generally wouldn't\nget any specialized functionality for displaying a nice message about upload progress.)\n\nJust like for exp-lookit-calibration, you can display a video or an optionally animated\nimage (see below for examples of each) as a placeholder while getting recording started.\n\nFor details about specifying media locations, please see\nhttps://lookit.readthedocs.io/en/develop/researchers-prep-stimuli.html?highlight=basedir#directory-structure\n\nExample usage:\n\n```json\n\n   \"stop-recording-with-image\": {\n       \"kind\": \"exp-lookit-stop-recording\",\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"videoTypes\": [\n           \"webm\",\n           \"mp4\"\n       ],\n       \"image\": \"peekaboo_remy.jpg\",\n       \"imageAnimation\": \"spin\"\n       \"displayFullscreen\": true\n   },\n\n   \"stop-recording-with-video\": {\n       \"kind\": \"exp-lookit-stop-recording\",\n       \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n       \"videoTypes\": [\n           \"webm\",\n           \"mp4\"\n       ],\n       \"video\": \"attentiongrabber\",\n       \"displayFullscreen\": true\n   },\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Media-reload",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-story-page": {
            "name": "Exp-lookit-story-page",
            "shortname": "Exp-lookit-story-page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "namespace": "",
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 18,
            "description": "This frame is deprecated and will not be included in release 2.x. For new studies, use\nthe frame {{#crossLink \"Exp-lookit-images-audio\"}}{{/crossLink}} instead.\n\nFrame to implement a basic \"storybook page\" trial, with images placed on the\nscreen within a display area and a sequence of audio files played.\nOptionally, images may be highlighted at specified times during the audio\nfiles.\n\nWebcam recording may be turned on or off; if on, the page is not displayed\nor audio started until recording begins.\n\nFrame is displayed fullscreen, but is not paused or otherwise disabled if the\nuser leaves fullscreen. A button appears prompting the user to return to\nfullscreen mode.\n\nThe parent may press 'next' to proceed, or the study may proceed\nautomatically when audio finishes (autoProceed). Optionally, if using autoProceed,\nthe frame may be displayed for a minimum duration, so that e.g. it lasts exactly 10\nseconds from start of audio even though the audio is only 2 seconds long. If using this\nfeature a progress bar may be displayed.\n\nAny number of images may be placed on the screen, and their position\nspecified. (Aspect ratio will be the same as the original image.)\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\n```json\n\"frames\": {\n   \"story-intro-1\": {\n           \"doRecording\": false,\n           \"autoProceed\": true,\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/ingroupobligations/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"parentTextBlock\": {\n               \"title\": \"Parents!\",\n               \"text\": \"some instructions\",\n               \"emph\": true,\n               \"css\": {\n                   \"color\": \"red\",\n                   \"font-size\": \"12px\"\n               }\n           },\n           \"images\": [\n               {\n                   \"id\": \"leftA\",\n                   \"src\": \"flurps1.jpg\",\n                   \"left\": \"10\",\n                   \"width\": \"30\",\n                   \"top\": \"34.47\"\n               },\n               {\n                   \"id\": \"rightA\",\n                   \"src\": \"zazzes1.jpg\",\n                   \"left\": \"60\",\n                   \"width\": \"30\",\n                   \"top\": \"34.47\"\n               }\n           ],\n           \"kind\": \"exp-lookit-story-page\",\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": \"intro1\",\n                   \"highlights\": [\n                       {\"range\": [3.017343,    5.600283], \"image\":     \"leftA\"},\n                       {\"range\": [5.752911,    8.899402], \"image\":     \"rightA\"}\n                   ]\n               }\n           ]\n       }\n}\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ],
            "deprecated": true
        },
        "Exp-lookit-survey": {
            "name": "Exp-lookit-survey",
            "shortname": "Exp-lookit-survey",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 14,
            "description": "Basic survey frame allowing researcher to specify question text and types.\n\nThis frame uses ember-cli-dynamic-forms as a wrapper for alpacajs, a powerful\nlibrary for generating online forms. To specify the structure of your form\n(questions, answer types, validation), you provide a single 'formSchema' structure.\nThe 'formSchema' consists of a 'schema' object and an 'options' object, described\nunder Properties.\n\nYou can choose from any question types listed at http://www.alpacajs.org/documentation.html.\nIn that documentation, you will see that each field type - e.g., Checkbox, Radio, Text -\nhas some 'Schema' properties and some 'Options' properties. The properties under 'Schema'\nwill be defined in the 'schema' object of your formSchema. The properties under 'Options'\nwill be defined in the 'options' object of your formSchema.\n\nMany question types allow you to easily validate answers. For instance, for a \"number\"\nfield you can set minimum and maximum values, and entries will automatically be\nrequired to be numeric (http://www.alpacajs.org/docs/fields/number.html). You can also\neither set required: true in the schema->properties entry for this field OR set\nvalidator: required-field in the options->fields entry if you want to require that the\nparticipant enters something. A validation error message will be displayed next to\nany fields that fail validation checks and the participant will not be able to proceed until\nthese are addressed.\n\nAlpacajs is fairly powerful, and you are essentially using it directly. In general, you can copy\nand paste any object passed to alpaca in the alpaca docs right in as your formSchema to\nsee that example in action on Lookit. Not all features of alpaca are detailed here,\nbut they can be used: e.g., advanced users can enter 'views' and 'data' in the\nformSchema to customize the layout of their forms and the initial data. A 'dataSource'\nmay be specified under options to populate a question's potential answers (e.g., to\nload a list of countries from some other source rather than hard-coding it, or to\nprovide checkboxes with vocabulary items from an externally-defined inventory).\n\nYou can also use alpacajs's \"dependencies\" and \"conditional dependencies\" functionality to\nset up fields that depend on other fields - e.g., asking if the child speaks any\nlanguage besides English in the home and only if so displaying a dropdown to select the\nlanguage(s), or asking if the child likes Elmo or Grover better and then asking a question\nspecific to the preferred character. Or if you have questions only relevant to the\nbirth mother of the child, you could ask if the participant is the birth mother and show\nthose questions conditionally.\n\nNote that question titles are interpreted as HTML and can include images, audio/video\nelements, and inline CSS.\n\nIf a participant returns to this frame after continuing, via a 'Previous' button on the\nnext frame, then the values in this form are pre-filled.\n\nNo video recording is conducted on this frame.\n\nA previous button may optionally be included on this frame.\n\nThe form itself occupies a maximum of 800px horizontally and takes up 80% of the vertical\nheight of the window (it will scroll to fit).\n\nCurrent limitations: you are NOT\nable to provide custom functions (e.g. validators, custom dataSource functions)\ndirectly to the formSchema.\n\nHere is an example of a reasonably simple survey using this frame:\n\n\n```json\n\"frames\": {\n       \"pet-survey\": {\n           \"kind\": \"exp-lookit-survey\",\n           \"formSchema\": {\n               \"schema\": {\n                   \"type\": \"object\",\n                   \"title\": \"Tell us about your pet!\",\n                   \"properties\": {\n                       \"age\": {\n                           \"type\": \"integer\",\n                           \"title\": \"Age\",\n                           \"maximum\": 200,\n                           \"minimum\": 0,\n                           \"required\": true\n                       },\n                       \"name\": {\n                           \"type\": \"string\",\n                           \"title\": \"Name\",\n                           \"required\": true\n                       },\n                       \"species\": {\n                           \"enum\": [\n                               \"dog\",\n                               \"cat\",\n                               \"fish\",\n                               \"bird\",\n                               \"raccoon\"\n                           ],\n                           \"type\": \"string\",\n                           \"title\": \"What type of animal?\",\n                           \"default\": \"\"\n                       }\n                   }\n               },\n               \"options\": {\n                   \"fields\": {\n                       \"age\": {\n                           \"numericEntry\": true\n                       },\n                       \"name\": {\n                           \"placeholder\": \"a name...\"\n                       },\n                       \"species\": {\n                           \"type\": \"radio\",\n                           \"message\": \"Seriously, what species??\",\n                           \"validator\": \"required-field\"\n                       }\n                   }\n               }\n           },\n           \"nextButtonText\": \"Moving on...\"\n       }\n   }\n```\n\nAnd here is an example of re-implementing the exp-lookit-mood-questionnaire, using\ncustom formatting, time-pickers, dependencies, and question groups.\n\n```json\n\"frames\": {\n           \"survey-sample-3\": {\n           \"kind\": \"exp-lookit-survey\",\n           \"formSchema\": {\n               \"view\": {\n                   \"fields\": {\n                       \"/child/happy\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/child/active\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/child/rested\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/child/healthy\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/parent/energetic\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/parent/parentHappy\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       },\n                       \"/parent/ontopofstuff\": {\n                           \"templates\": {\n                               \"control\": \"<div>{{#if options.leftLabel}}<label class='label-left'>{{{options.leftLabel}}}</label>{{/if}}{{#control}}{{/control}}{{#if options.rightLabel}}<label class='label-right'>{{{options.rightLabel}}}</label>{{/if}}</div>\"\n                           }\n                       }\n                   },\n                   \"layout\": {\n                       \"bindings\": {\n                           \"child\": \"#child\",\n                           \"parent\": \"#parent\",\n                           \"lastEat\": \"#lastEat\",\n                           \"nextNap\": \"#nextNap\",\n                           \"napWakeUp\": \"#napWakeUp\",\n                           \"doingBefore\": \"#doingBefore\",\n                           \"usualNapSchedule\": \"#usualNapSchedule\"\n                       },\n                       \"template\": \"<div class='row exp-text exp-lookit-mood-questionnaire'><h4>{{{options.formTitle}}}</h4><p>{{{options.introText}}}</p><div id='child'></div><div id='parent'></div><div id='napWakeUp'></div><div id='usualNapSchedule'></div><div id='nextNap'></div><div id='lastEat'></div><div id='doingBefore'></div></div>\"\n                   },\n                   \"parent\": \"bootstrap-edit\"\n               },\n               \"schema\": {\n                   \"type\": \"object\",\n                   \"properties\": {\n                       \"child\": {\n                           \"type\": \"object\",\n                           \"title\": \"How is your CHILD feeling right now?\",\n                           \"properties\": {\n                               \"happy\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               },\n                               \"active\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               },\n                               \"rested\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               },\n                               \"healthy\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               }\n                           }\n                       },\n                       \"parent\": {\n                           \"type\": \"object\",\n                           \"title\": \"How are YOU feeling right now?\",\n                           \"properties\": {\n                               \"energetic\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               },\n                               \"parentHappy\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               },\n                               \"ontopofstuff\": {\n                                   \"enum\": [\n                                       \"1\",\n                                       \"2\",\n                                       \"3\",\n                                       \"4\",\n                                       \"5\",\n                                       \"6\",\n                                       \"7\"\n                                   ],\n                                   \"required\": true\n                               }\n                           }\n                       },\n                       \"lastEat\": {\n                           \"title\": \"About how long ago did your child last eat or drink?\",\n                           \"required\": true\n                       },\n                       \"nextNap\": {\n                           \"title\": \"About how much longer until his/her next nap (or bedtime)?\",\n                           \"required\": true\n                       },\n                       \"napWakeUp\": {\n                           \"title\": \"About how long ago did your child last wake up from sleep or a nap?\",\n                           \"required\": true\n                       },\n                       \"doingBefore\": {\n                           \"title\": \"What was your child doing before this?\",\n                           \"required\": true\n                       },\n                       \"usualNapSchedule\": {\n                           \"enum\": [\n                               \"yes\",\n                               \"no\",\n                               \"yes-overdue\"\n                           ],\n                           \"title\": \"Does your child have a usual nap schedule?\",\n                           \"required\": true\n                       }\n                   },\n                   \"dependencies\": {\n                       \"nextNap\": [\n                           \"usualNapSchedule\"\n                       ]\n                   }\n               },\n               \"options\": {\n                   \"fields\": {\n                       \"child\": {\n                           \"fields\": {\n                               \"happy\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 3,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Fussy\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Happy\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               },\n                               \"active\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 4,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Calm\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Active\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               },\n                               \"rested\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 1,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Tired\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Rested\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               },\n                               \"healthy\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 2,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Sick\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Healthy\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               }\n                           }\n                       },\n                       \"parent\": {\n                           \"fields\": {\n                               \"energetic\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 1,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Tired\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Energetic\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               },\n                               \"parentHappy\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 3,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Upset\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"Happy\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               },\n                               \"ontopofstuff\": {\n                                   \"type\": \"radio\",\n                                   \"order\": 2,\n                                   \"vertical\": false,\n                                   \"leftLabel\": \"Overwhelmed\",\n                                   \"fieldClass\": \"aligned-radio-group\",\n                                   \"rightLabel\": \"On top of things\",\n                                   \"optionLabels\": [\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\",\n                                       \"\"\n                                   ]\n                               }\n                           }\n                       },\n                       \"lastEat\": {\n                           \"size\": 10,\n                           \"type\": \"time\",\n                           \"picker\": {\n                               \"useCurrent\": \"day\"\n                           },\n                           \"dateFormat\": \"HH:mm\",\n                           \"placeholder\": \"hours:minutes\"\n                       },\n                       \"nextNap\": {\n                           \"size\": 10,\n                           \"type\": \"time\",\n                           \"picker\": {\n                               \"useCurrent\": \"day\"\n                           },\n                           \"dateFormat\": \"HH:mm\",\n                           \"placeholder\": \"hours:minutes\",\n                           \"dependencies\": {\n                               \"usualNapSchedule\": \"yes\"\n                           }\n                       },\n                       \"napWakeUp\": {\n                           \"size\": 10,\n                           \"type\": \"time\",\n                           \"picker\": {\n                               \"useCurrent\": \"day\"\n                           },\n                           \"dateFormat\": \"HH:mm\",\n                           \"placeholder\": \"hours:minutes\"\n                       },\n                       \"doingBefore\": {\n                           \"type\": \"text\",\n                           \"placeholder\": \"examples: having lunch, playing outside, going to the store with me\"\n                       },\n                       \"usualNapSchedule\": {\n                           \"sort\": false,\n                           \"type\": \"select\",\n                           \"hideNone\": false,\n                           \"noneLabel\": \"\",\n                           \"optionLabels\": [\n                               \"Yes\",\n                               \"No\",\n                               \"Yes, and he/she is already due for a nap\"\n                           ],\n                           \"removeDefaultNone\": false\n                       }\n                   },\n                   \"formTitle\": \"Mood Questionnaire\",\n                   \"introText\": \"How are you two doing? We really want to know: we’re interested in how your child’s mood affects which sorts of surprising physical events he/she notices. You can help us find out what babies are really learning as they get older... and what they already knew, but weren’t calm and focused enough to show us!\",\n                   \"hideInitValidationError\": true\n               }\n           },\n           \"nextButtonText\": \"Next\"\n       }\n\n```",
            "extends": "Exp-frame-base"
        },
        "Exp-lookit-text": {
            "name": "Exp-lookit-text",
            "shortname": "Exp-lookit-text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-text/component.js",
            "line": 9,
            "description": "A frame to display text-only instructions, etc. to the user.\n\n```json\n\"frames\": {\n   \"study-intro\": {\n       \"blocks\": [\n           {\n               \"emph\": true,\n               \"text\": \"Important: your child does not need to be with you until the videos begin. First, let's go over what will happen!\",\n               \"title\": \"Your baby, the physicist\"\n           },\n           {\n               \"text\": \"Some introductory text about this study.\"\n           },\n           {\n               \"text\": \"Another paragraph about this study.\"\n           }\n       ],\n       \"showPreviousButton\": false,\n       \"kind\": \"exp-lookit-text\"\n   }\n}\n\n```",
            "extends": "Exp-frame-base"
        },
        "Exp-lookit-video": {
            "name": "Exp-lookit-video",
            "shortname": "Exp-lookit-video",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-video/component.js",
            "line": 19,
            "description": "Video display frame. This may be used for displaying videos to older children or parents, as well as for\ntypical looking measures trials or as brief filler in between test trials.\n\n(Note: this frame replaced the previous exp-lookit-video frame, which is now called\n {{#crossLink \"Exp-lookit-composite-video-trial\"}}{{/crossLink}}.)\n\nThis is very customizable: you can...\n  - position the video wherever you want on the screen, including specifying that it should fill the screen (while maintaining aspect ratio)\n  - choose the background color\n  - optionally specify audio that should play along with the video\n  - have the frame proceed automatically (`autoProceed`), or enable a Next button when the user can move on\n  - allow parents to press a key to pause the video (and then either restart when they un-pause, or move on to the next frame)\n\nVideo (and audio if provided) start as soon as any recording begins, or right away if there is no recording starting.\n\nIf the user pauses using the `pauseKey`, or if the user leaves fullscreen mode, the study will be paused.\nWhile paused, the video/audio are stopped and not displayed, and instead a looping `pauseVideo` and text are displayed.\n\nThere are several ways you can specify how long the trial should last. The frame will continue until\nALL of the following are true:\n  - the video has been played all the way through `requireVideoCount` times\n  - the audio has been played all the way through `requireAudioCount` times\n  - `requiredDuration` seconds have elapsed since beginning the video\n\nYou do not need to use all of these - for instance, to play the video one time and then proceed, set\n`requireVideoCount` to 1 and the others to 0. You can also specify whether the audio and video should loop (beyond\nany replaying required to reach the required counts).\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nExample usage: (Note - this is a bit of an odd example with both audio ('peekaboo') and audio embedded in the video.\nIn general you would probably only want one or the other!)\n\n```json\n\"play-video-twice\": {\n           \"kind\": \"exp-lookit-video\",\n           \"audio\": {\n               \"loop\": false,\n               \"source\": \"peekaboo\"\n           },\n           \"video\": {\n               \"top\": 10,\n               \"left\": 25,\n               \"loop\": true,\n               \"width\": 50,\n               \"source\": \"cropped_apple\"\n           },\n           \"backgroundColor\": \"white\",\n           \"autoProceed\": true,\n           \"parentTextBlock\": {\n               \"text\": \"If your child needs a break, just press X to pause!\"\n           },\n           \"requiredDuration\": 0,\n           \"requireAudioCount\": 0,\n           \"requireVideoCount\": 2,\n           \"restartAfterPause\": true,\n           \"pauseKey\": \"x\",\n           \"pauseKeyDescription\": \"X\",\n           \"pauseAudio\": \"pause\",\n           \"pauseVideo\": \"attentiongrabber\",\n           \"pauseText\": \"(You'll have a moment to turn around again.)\",\n           \"unpauseAudio\": \"return_after_pause\",\n           \"doRecording\": true,\n           \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n           \"audioTypes\": [\n               \"ogg\",\n               \"mp3\"\n           ],\n           \"videoTypes\": [\n               \"webm\",\n               \"mp4\"\n           ]\n       },\n\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Full-screen",
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-video-assent": {
            "name": "Exp-lookit-video-assent",
            "shortname": "Exp-lookit-video-assent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 19,
            "description": "Video assent frame for Lookit studies for older children to agree to participation,\nseparately from parental consent.\n\nA series of assent form \"pages\" is displayed, each one displaying some combination of\n(a) an image or the participant's webcam view or a video, (b) audio, and (c) text. You can\noptionally record webcam video during the whole assent procedure or on the last page.\n\nOnce the family has viewed all pages, the\nchild can answer a question about whether to participate. If they choose yes, they proceed;\nif they choose no, they are sent to the exit URL.\n\nYou can either simply have children click on \"Yes\" or \"No,\" or you can add audio/video on\nthe last page that instructs them to answer verbally, and do webcam recording on that page.\nFor instance, you might show a video of yourself asking \"Do you want to participate in this study?\nYou can say \"yes\" or \"no.\" Parents, once your child has answered, please click on their answer\nto the right.\"\n\nIn general it is expected that only one of webcam view, video, and image will be provided per\npage, although it is ok to have only text or only text plus audio. If audio or video is provided for a page,\nthe participant must finish it to proceed. (If both audio and video are provided they will\nbe played simultaneously and both must finish for the participant to proceed.) They only\nneed to complete the audio/video for a given page once, in case they navigate using the\nprevious/next buttons.\n\nThis frame can optionally be shown only when the child is at least N years old, in case\nsome participants will need to give assent and others will rely only on parent consent.\n\nSpecifying media locations:\n\nFor `imgSrc` parameters within `pages`, you can either specify complete URLs or partial URLs\nrelative to a base directory `baseDir` for the frame. Images are expected to be in an\n`img` directory within the `baseDir`. For instance, in the example below,\nthe first page's image is at `https://s3.amazonaws.com/lookitcontents/cats/img/jane_smith.jpg`.\n\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n    [\n        {\n            'src': 'http://.../video1.mp4',\n            'type': 'video/mp4'\n        },\n        {\n            'src': 'http://.../video1.webm',\n            'type': 'video/webm'\n        }\n    ]\n```\nOR you can provide a single string 'stub', which will be expanded\nbased on the parameter baseDir and the media types expected - either audioTypes or\nvideoTypes as appropriate. For example, if you provide the audio source `intro`\nand baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\nwill be expanded to:\n```json\n                 [\n                        {\n                            src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                            type: 'audio/mp3'\n                        },\n                        {\n                            src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                            type: 'audio/ogg'\n                        }\n                ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be organized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nExample usage:\n\n```json\n\"frames\": {\n    \"video-assent\": {\n        \"kind\": \"exp-lookit-video-assent\",\n            \"pages\": [\n                {\n                    \"imgSrc\": \"jane_smith.png\",\n                    \"altText\": \"Jane Smith\",\n                    \"textBlocks\": [\n                        {\n                            \"text\": \"My name is Jane Smith. I am a scientist who studies why children love cats.\"\n                        }\n                    ],\n                    \"audio\": \"narration_1\"\n                },\n                {\n                    \"imgSrc\": \"cats_game.png\",\n                    \"altText\": \"picture of sample game\",\n                    \"textBlocks\": [\n                        {\n                            \"text\": \"In this study, you will play a game about cats.\"\n                        }\n                    ]\n                },\n                {\n                    \"showWebcam\": true,\n                    \"textBlocks\": [\n                        {\n                            \"text\": \"During the study, your webcam will record a video of you. We will watch this video later to see how much you love cats.\"\n                        }\n                    ]\n                }\n            ],\n            \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/cats/\",\n            \"videoTypes\": [\n                \"webm\",\n                \"mp4\"\n            ],\n            \"participationQuestion\": \"Do you want to participate in this study?\",\n            \"minimumYearsToAssent\": 7\n        }\n    }\n}\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Video-record",
                "Expand-assets"
            ]
        },
        "Exp-lookit-video-consent": {
            "name": "Exp-lookit-video-consent",
            "shortname": "Exp-lookit-video-consent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 16,
            "description": "Video consent frame for Lookit studies, with consent document displayed at left and instructions to start recording, read a statement out loud, and send. A standard consent\ndocument is displayed, with additional study-specific information provided by the researcher, in accordance with the Lookit terms of use.\n\nResearchers can select from the following named templates:\n\n* `consent_001`: Original Lookit consent document (2019)\n\n* `consent_002`: Added optional GDPR section and research subject rights statement\n\n* `consent_003`: Same as consent_002 except that the 'Payment' section is renamed 'Benefits, risks, and payment' for institutions that prefer that\n\nImportant: To look up the exact text of each consent template for your IRB protocol, and to understand the context for each piece of text to be inserted, please see https://github.com/lookit/research-resources/tree/master/Legal\n\nThe consent document can be downloaded as PDF document by participant.\n\n```json\n\"frames\": {\n    \"video-consent\": {\n        \"kind\": \"exp-lookit-video-consent\",\n        \"template\": \"consent_003\",\n        \"PIName\": \"Jane Smith\",\n        \"institution\": \"Science University\",\n        \"PIContact\": \"Jane Smith at 123 456 7890\",\n        \"purpose\": \"Why do babies love cats? This study will help us find out whether babies love cats because of their soft fur or their twitchy tails.\",\n        \"procedures\": \"Your child will be shown pictures of lots of different cats, along with noises that cats make like meowing and purring. We are interested in which pictures and sounds make your child smile. We will ask you (the parent) to turn around to avoid influencing your child's responses.\",\n        \"payment\": \"After you finish the study, we will email you a $5 BabyStore gift card within approximately three days. To be eligible for the gift card your child must be in the age range for this study, you need to submit a valid consent statement, and we need to see that there is a child with you. But we will send a gift card even if you do not finish the whole study or we are not able to use your child's data! There are no other direct benefits to you or your child from participating, but we hope you will enjoy the experience. There are no anticipated risks associated with participating.\",\n        \"datause\": \"We are primarily interested in your child's emotional reactions to the images and sounds. A research assistant will watch your video to measure the precise amount of delight in your child's face as he or she sees each cat picture.\",\n        \"gdpr\": false,\n        \"research_rights_statement\": \"You are not waiving any legal claims, rights or remedies because of your participation in this research study.  If you feel you have been treated unfairly, or you have questions regarding your rights as a research subject, you may contact the [IRB NAME], [INSTITUTION], [ADDRESS/CONTACT]\",\n        \"additional_segments\": [\n                {\n                    \"title\": \"US Patriot Act Disclosure\",\n                    \"text\": \"[EXAMPLE ONLY, PLEASE REMOVE ADDITIONAL_SEGMENTS UNLESS YOU NEED THEM.] Lookit is a U.S. organization and all information gathered from the website is stored on servers based in the U.S. Therefore, your video recordings are subject to U.S. laws, such as the US Patriot Act. This act allows authorities access to the records of internet service providers. If you choose to participate in this study, you understand that your video recording will be stored and accessed in the USA. The security and privacy policy for Lookit can be found at the following link: <a href='https://lookit.mit.edu/privacy/' target='_blank'>https://lookit.mit.edu/privacy/</a>.\"\n                }\n            ]\n        }\n}\n```",
            "extends": "Exp-frame-base",
            "uses": [
                "Video-record"
            ]
        },
        "Exp-lookit-video-infant-control": {
            "name": "Exp-lookit-video-infant-control",
            "shortname": "Exp-lookit-video-infant-control",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-video-infant-control/component.js",
            "line": 9,
            "description": "Infant-controlled version of the {{#crossLink \"Exp-lookit-video\"}}{{/crossLink}} frame. This works the same way as\nexp-lookit-video except that you can enable the parent to:\n\n- end the trial by pressing the `endTrialKey` key\n- hold down the `lookawayKey` (or the mouse button) to indicate that the child is not looking; the trial will automatically end\n  after the lookaway criterion is met.\n\nYou can disable either of these behaviors by setting the key to `''`.\n\nThe frame will still end when it would have anyway if neither of these things happen! For instance, if you would have\nlooped the video for 30 seconds, then after 30 seconds the frame will move on, serving as a \"ceiling\" on looking time.\n\nLookaway criterion: You have two options for how to determine when the child has looked away long enough to proceed.\nSet the `lookawayType` to `\"total\"` to accumulate lookaway time until the child has looked away for a total of\n`lookawayThreshold` seconds. (For instance, if the `lookawayThreshold` is 2, then the trial will end after the child\nlooks away for 0.5s, then 1s, then 0.5s.) Set the `lookawayType` to `\"continuous\"` to require that the child look\naway for a continuous `lookawayThreshold`-second interval. (For instance, if the `lookawayThreshold` is 2, then the\nchild might look away for 1s, 1.5s, and 1s but the trial would continue until she looked away for 2s.)\n\nThe looking time measurement begins only when the video starts, not while a video connection is established.\n\nIf a `lookawayKey` is defined, lookaways are recorded the entire time the frame is running. However, the looking\ntime measurement only starts once video begins playing (e.g., not during webcam connection). Lookaways at the very\nstart of the video don't count! If the child is not looking as the video begins, the measurement begins once they look\nfor the first time.\n\nIf the trial is paused, parent control of the trial is also paused; the looking time measurement begins fresh when\nrestarting.\n\nTwo pieces of data are recorded for convenience when coding or if implementing a live habituation procedure:\n`totalLookingTime` and `reasonTrialEnded`.\n\nExample usage:\n\n```json\n\"play-video-twice\": {\n   \"kind\": \"exp-lookit-video-infant-control\",\n   \"lookawayKey\": \"p\",\n   \"lookawayType\": \"total\",\n   \"lookawayThreshold\": 2,\n   \"endTrialKey\": \"q\",\n\n   \"audio\": {\n       \"loop\": false,\n       \"source\": \"peekaboo\"\n   },\n   \"video\": {\n       \"top\": 10,\n       \"left\": 25,\n       \"loop\": true,\n       \"width\": 50,\n       \"source\": \"cropped_apple\"\n   },\n   \"backgroundColor\": \"white\",\n   \"autoProceed\": true,\n   \"parentTextBlock\": {\n       \"text\": \"If your child needs a break, just press X to pause!\"\n   },\n   \"requiredDuration\": 0,\n   \"requireAudioCount\": 0,\n   \"requireVideoCount\": 2,\n   \"restartAfterPause\": true,\n   \"pauseKey\": \"x\",\n   \"pauseKeyDescription\": \"X\",\n   \"pauseAudio\": \"pause\",\n   \"pauseVideo\": \"attentiongrabber\",\n   \"pauseText\": \"(You'll have a moment to turn around again.)\",\n   \"unpauseAudio\": \"return_after_pause\",\n   \"doRecording\": true,\n   \"baseDir\": \"https://www.mit.edu/~kimscott/placeholderstimuli/\",\n   \"audioTypes\": [\n       \"ogg\",\n       \"mp3\"\n   ],\n   \"videoTypes\": [\n       \"webm\",\n       \"mp4\"\n   ]\n}\n\n```",
            "extends": "Exp-lookit-video",
            "uses": [
                "Infant-controlled-timing"
            ]
        },
        "Exp-lookit-webcam-display": {
            "name": "Exp-lookit-webcam-display",
            "shortname": "Exp-lookit-webcam-display",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-lookit-webcam-display/component.js",
            "line": 9,
            "description": "A frame to display the user's webcam stream, along with a small amount of optional text.\nExpected use is as a break during an experiment, e.g. to check positioning, but could\nalso be used as a lightweight frame for data collection.\n\nNot fullscreen by default, but can be displayed fullscreen as shown in example below.\nCan optionally record video.\n\n\n```\n   \"frames\": {\n       \"webcam-display-break\": {\n           \"kind\": \"exp-lookit-webcam-display\",\n           \"blocks\": [\n               {\n                   \"title\": \"Here is a short break\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"You can check that your child is still visible\"\n                       },\n                       {\n                           \"text\": \"You can make some silly faces\"\n                       }\n                   ]\n               }\n           ],\n           \"nextButtonText\": \"Next\",\n           \"showPreviousButton\": false,\n           \"displayFullscreenOverride\": true,\n           \"startRecordingAutomatically\": false\n       }\n   }\n```",
            "extends": "Video-record"
        },
        "Exp-video-config": {
            "name": "Exp-video-config",
            "shortname": "Exp-video-config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-video-config/component.js",
            "line": 18,
            "description": "Video configuration frame guiding user through making sure permissions are set\nappropriately and microphone is working, with troubleshooting text. Almost all content is\nhard-coded, to provide a general-purpose technical setup frame.\n\n```json\n\"frames\": {\n    \"video-config\": {\n        \"kind\": \"exp-video-config\",\n        \"troubleshootingIntro\": \"If you're having any trouble getting your webcam set up,\n          please feel free to call the XYZ lab at (123) 456-7890 and we'd be glad to\n          help you out!\"\n    }\n}\n```",
            "extends": "Video-record"
        },
        "Exp-video-config-quality": {
            "name": "Exp-video-config-quality",
            "shortname": "Exp-video-config-quality",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 17,
            "description": "Video configuration frame showing webcam view at right and instructions for checking\nvideo quality for preferential looking setup at left. Default content is hard-coded to\nprovide a reasonable set of instructions for preferential looking setups, so the frame can\nbe used as follows with no parameters besides `kind`:\n\n```json\n\"frames\": {\n    \"video-quality\": {\n        \"kind\": \"exp-video-config-quality\"\n    }\n}\n```\n\nOptionally,\nparticipants can be required to check off each item before they can proceed to the next\nframe. If `requireItemConfirmation` is true (default), then the 'next' button will\nappear disabled until the participant has checked off all buttons, although if they click\nit anyway they will get an informative warning and the instructions section will scroll\nto the first unchecked item.\n\nParticipants can also be optionally required to create and view a short recording, e.g. to\ncheck their child will be audible or their child's eyes will be visible in a particular position.\n\nYou can also customize any or all text and images as in the following example.\n\n```json\n\"frames\": {\n    \"video-quality\": {\n        \"kind\": \"exp-video-config-quality\",\n        \"title\": \"Webcam setup for preferential looking\",\n        \"introText\": \"We'll be analyzing where your child chooses to look during the videos--but only if we can tell where that is! Please check each of the following to ensure we're able to use your video:\",\n        \"requireItemConfirmation\": true,\n        \"completedItemText\": \"Did it!\",\n        \"instructionBlocks\": [\n                    {\n                        \"text\": \"<strong>Make sure the webcam you're using is roughly centered</strong> relative to this monitor. This makes it much easier for us to tell whether your child is looking to the left or right!\",\n                        \"image\": {\n                            \"src\": \"https://s3.amazonaws.com/lookitcontents/website/centering.png\",\n                            \"alt\": \"Example images of using centered external webcam on monitor or built-in webcam on laptop.\"\n                        }\n                    },\n                    {\n                        \"text\": \"<strong>Turn off any other monitors</strong> connected to your computer, besides the one with the centered webcam. (If there's just one monitor, you're all set!)\",\n                        \"image\": {\n                            \"src\": \"https://s3.amazonaws.com/lookitcontents/website/monitors.png\",\n                            \"alt\": \"Example images showing laptop screen turned off if using external monitor and webcam, or external monitor turned off if using built-in webcam and laptop screen.\"\n                        }\n                    },\n                    {\n                        \"text\": \"Check the lighting by making sure you can <strong>clearly see your own eyes</strong> on the webcam view to the right. You may need to either turn on a light or reduce light coming from behind you.\",\n                        \"image\": {\n                            \"src\": \"https://s3.amazonaws.com/lookitcontents/website/lighting.png\",\n                            \"alt\": \"Example images showing good lighting, room too dark, and backlit scene where eyes are not visible.\"\n                        }\n                    },\n                    {\n                        \"text\": \"If it's practical, <strong>minimize exciting things</strong> that are visible behind or to the side of the screen--for instance, by facing a wall instead of the kitchen. (If this isn't practical for you, don't worry about it--just check the box!)\",\n                        \"image\": {\n                            \"src\": \"https://s3.amazonaws.com/lookitcontents/website/distractions.png\",\n                            \"alt\": \"Example images showing a child and puppy next to the computer, versus a computer just on its own.\"\n                        }\n                    },\n                    {\n                        \"text\": \"During the study, we'll ask that you sit facing away from the monitor, holding your child over your shoulder, like this. (More on that in a moment!) <strong>Make sure the webcam is angled up or down enough that your child's eyes are visible in this position</strong>. If you're not sure if your child's eyes will be visible, you can make a short recording to check!\",\n                        \"image\": {\n                            \"src\": \"https://s3.amazonaws.com/lookitcontents/website/over_shoulder.jpg\",\n                            \"alt\": \"Example image showing a dad holding his child looking over his shoulder.\"\n                        }\n                    }\n                ],\n            \"requireTestVideo\": true,\n            \"showRecordMenu\": true,\n            \"recordingInstructionText\": \"You should be able to see your camera view above. You can create and view a short recording to see how your setup looks.\"\n    }\n}\n```",
            "extends": "Video-record"
        },
        "Expand-assets": {
            "name": "Expand-assets",
            "shortname": "Expand-assets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-lookit-calibration",
                "Exp-lookit-change-detection",
                "Exp-lookit-composite-video-trial",
                "Exp-lookit-dialogue-page",
                "Exp-lookit-geometry-alternation",
                "Exp-lookit-geometry-alternation-open",
                "Exp-lookit-images-audio",
                "Exp-lookit-preferential-looking",
                "Exp-lookit-start-recording",
                "Exp-lookit-stimuli-preview",
                "Exp-lookit-stop-recording",
                "Exp-lookit-story-page",
                "Exp-lookit-video",
                "Exp-lookit-video-assent"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/expand-assets.js",
            "line": 8,
            "description": "Reference for DEVELOPERS of new frames only!\nMixin to allow users to provide audio/video and image source values as either relative paths\n within a base directory or as full paths.\nWhen adding this mixin to a frame, you will need to define a property of the frame\n `assetsToExpand`, which indicates which parameters might be source objects that need\n expansion. `assetsToExpand` should be an object with keys `image`, `video`, and `audio`,\n and each value should be an Array of parameter names that provide sources for resources\n of the corresponding type. E.g.,\n ```\n    {\n        'image': ['leftObjectPic', 'rightObjectPic'],\n        'audio': ['introAudio', 'testAudio'],\n        'video': ['objectDemoVideo']\n    }\n ```\nThis is defined directly within your frame, e.g.:\n```\n    export default ExpFrameBaseComponent.extend(ExpandAssets, {\n        ...\n        type: 'exp-my-cool-frame',\n        assetsToExpand:     {\n            'image': ['leftObjectPic', 'rightObjectPic'],\n            'audio': ['introAudio', 'testAudio'],\n            'video': ['objectDemoVideo']\n            },\n        ...,\n        meta: {...},\n        actions: {...}\n    });\n```\n\n\nThe *user* of your frame can then optionally provide `baseDir`, `audioTypes`, and\n `videoTypes` parameters to indicate how to expand relative paths.\nHow expansion works:\n - **Images**: Suppose the list `assetsToExpand['image']` contains `centerStimulus`. If\n   `centerStimulus` is provided as a full URL (with `://` in it), nothing will happen to\n   it. But if `centerStimulus` is a string that is not a full URL, it will be transformed\n   during the `didReceiveAttrs` hook to `baseDir + 'img/' + centerStimulus`.\n- **Audio**: Suppose the list `assetsToExpand['audio']` contains `utterance1`. If\n   `utterance1` is a nonempty string (rather than an object/Array), e.g., `goodmorning`,\n   and `audioTypes` has been set to `['typeA', 'typeB']`,\n   then `utterance1` will be expanded out to\n ```\n         [\n             {\n                 src: 'baseDir' + 'typeA/goodmorning.typeA',\n                 type: 'audio/typeA'\n             },\n             {\n                 src: 'baseDir' + 'typeB/goodmorning.typeB',\n                 type: 'audio/typeB'\n             }\n         ]\n ```\n- **Video**: Same as audio, but using the types from `videoTypes`.\n**Important**: During the `didReceiveAttrs` hook, your frame will acquire new properties `[parameterName]_parsed`\n for each of the parameters named in `assetsToExpand`. These properties will hold the\n expanded values. E.g., in the example above, you would now have a `centerStimulus_parsed`\n property. This is what you should use for showing/playing images/audio/video in your\n frame template.\n**Advanced use**: the property names in `assetsToExpand` can be either full parameter names\n as in the examples above, or can be of the form `parameterName/subProperty`. If using\n the `parameterName/subProperty` syntax, instead of processing the parameter `parameterName`,\n we will expect that that parameter is either an object with property `subProperty`\n (which will be expanded) or an Array of objects with property `subProperty` (which will\n be expanded). The original value of the `parameterName` parameter may in this case be\n mutated as assets are expanded. However, your frame will still also acquire a new\n property `[parameterName]_parsed` which you should use for accessing the processed\n values. This avoids potential problems with the template being rendered using the original\n values and not updated."
        },
        "Full-screen": {
            "name": "Full-screen",
            "shortname": "Full-screen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-frame-base",
                "Exp-lookit-calibration",
                "Exp-lookit-change-detection",
                "Exp-lookit-composite-video-trial",
                "Exp-lookit-dialogue-page",
                "Exp-lookit-exit-survey",
                "Exp-lookit-geometry-alternation",
                "Exp-lookit-geometry-alternation-open",
                "Exp-lookit-images-audio",
                "Exp-lookit-preferential-looking",
                "Exp-lookit-start-recording",
                "Exp-lookit-stop-recording",
                "Exp-lookit-story-page",
                "Exp-lookit-video"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/full-screen.js",
            "line": 12,
            "description": "Reference for DEVELOPERS of new frames only!\nAllow components to specify fullscreen capabilities based on minimal configuration options"
        },
        "Infant-controlled-timing": {
            "name": "Infant-controlled-timing",
            "shortname": "Infant-controlled-timing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-lookit-images-audio-infant-control",
                "Exp-lookit-video-infant-control"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 12,
            "description": "Reference for DEVELOPERS of new frames only!\nMixin to allow parent to control frame progression by holding down a key when the child is not looking.\n Enables \"infant-controlled\" study designs via parent live-coding of infant looking behavior.\nTo add this behavior to an existing frame:\n1) Call `this.startParentControl()` at the point you want looking time to start being measured.\n    The parent will only be able to end the trial using the endTrialKey during the parent control period. Lookaway\n    time will only accumulate and lookaways will only be able to end the trial during the parent control period.\n    However, lookaways will be recorded as events throughout the frame. If the child is already looking away before\n    the parent control period begins, lookaway time will begin accumulating only after the first look.\n2) Call `this.endParentControl()` at the point you want the parent not to be able to control frame progression anymore.\n    For instance, if hiding stimuli and stopping recording after completing the frame, or if pausing the frame.\n3) If you need to be able to pause and re-start the frame, call `this.endParentControl()` when pausing and\n    `this.startParentControl()` when re-starting. Note that startParentControl will start a \"fresh\" looking time\n    measurement: looking and lookaway time will both be 0, the child will not be assumed to have already looked, etc.\n4) Define a function `onLookawayCriterion` that says what should happen when the parent presses the endTrialKey or the\n    child reaches the lookaway criterion. E.g., this might typically move to the next frame. If needed you can access\n    `this.get('trialEndReason')` (either 'parentEnded' or 'lookaway') to distinguish between these two possibilities.\n5) If it is possible for the frame to end by other mechanisms than the trialEndKey or reaching the lookaway criterion,\n    then when that happens: set the `trialEndReason` accordingly (e.g., `this.set('trialEndReason', 'ceiling')`) and\n    call `this.setTrialEndTime()` to calculate a total looking time based on the\n6) So that your frame will capture information about looking time and the reason the trial ended, and make that\n    available to the researcher, add the following to your frame's `meta.data.properties`:\n    ```\n      totalLookingTime: {\n          type: 'number'\n      },\n      trialEndReason: {\n          type: 'string'\n      }\n      ```"
        },
        "Media-reload": {
            "name": "Media-reload",
            "shortname": "Media-reload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-lookit-calibration",
                "Exp-lookit-composite-video-trial",
                "Exp-lookit-start-recording",
                "Exp-lookit-stimuli-preview",
                "Exp-lookit-stop-recording"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/media-reload.js",
            "line": 8,
            "description": "Reference for DEVELOPERS of new frames only!\nAllow any media-containing frame to correctly reset.\n Fix LEI-93, an issue where the second of two consecutive videos did not play correctly.\nDue to an internal ember quirk/optimization, the component instance is not destroyed if two of the same thing are\n  used in a row, which means the same video tag was being dynamically reassigned- something HTML does not normally\n allow. The page needs to be manually told to load the correct new video.\nSee commentary here: http://stackoverflow.com/a/18454389/1422268"
        },
        "Session-record": {
            "name": "Session-record",
            "shortname": "Session-record",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-frame-base"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/session-record.js",
            "line": 14,
            "description": "Reference for DEVELOPERS of new frames only!\nA mixin that can be used to add basic support for video recording to a particular experiment frame\nYou will also need to set `sessionRecorderElement` if the recorder is to be housed other than\n in an element identified by the ID `sessionRecorder`.\nThe properties `sessionRecorder`, `sessionRecorderReady`, and\n `sessionVideoId` become available to the consuming frame. The recorder object has fields\n that give information about its state: `hasWebCam`, 'hasCamAccess`, `recording`,\n `connected`, and `micChecked` - for details, see services/video-recorder.js. These\n can be accessed from the consuming frame as e.g. `this.get('recorder').get('hasWebCam')`.\nIf starting recording, the function `onSessionRecordingStarted` will be called\n once recording begins. If you want to do other things at this point, like proceeding\n to a test trial, you can add this hook in your frame.\nSee 'methods' for the functions you can use on a frame that extends SessionRecord.\nEvents recorded in a frame that extends SessionRecord will automatically have additional\n fields sessionVideoId (video filename), pipeId (temporary filename initially assigned by\n the recording service),\n and streamTime (when in the video they happened, in s)."
        },
        "Video-record": {
            "name": "Video-record",
            "shortname": "Video-record",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Exp-lookit-calibration",
                "Exp-lookit-change-detection",
                "Exp-lookit-composite-video-trial",
                "Exp-lookit-dialogue-page",
                "Exp-lookit-geometry-alternation",
                "Exp-lookit-geometry-alternation-open",
                "Exp-lookit-images-audio",
                "Exp-lookit-preferential-looking",
                "Exp-lookit-start-recording",
                "Exp-lookit-stimuli-preview",
                "Exp-lookit-stop-recording",
                "Exp-lookit-story-page",
                "Exp-lookit-video",
                "Exp-lookit-video-assent",
                "Exp-lookit-video-consent"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "app/mixins/video-record.js",
            "line": 14,
            "description": "Reference for DEVELOPERS of new frames only!\nA mixin that can be used to add basic support for video recording across frames\nBy default, the recorder will be installed when this frame loads, but recording\n will not start automatically. To override either of these settings, set\n the properties `doUseCamera` and/or `startRecordingAutomatically` in the consuming\n frame.\nYou will also need to set `recorderElement` if the recorder is to be housed other than\n in an element identified by the ID `recorder`.\nThe properties `recorder`, `videoList`, `stoppedRecording`, `recorderReady`, and\n `videoId` become available to the consuming frame. The recorder object has fields\n that give information about its state: `hasWebCam`, 'hasCamAccess`, `recording`,\n `connected`, and `micChecked` - for details, see services/video-recorder.js. These\n can be accessed from the consuming frame as e.g. `this.get('recorder').get('hasWebCam')`.\nIf starting recording automatically,  the function `onRecordingStarted` will be called\n once recording begins. If you want to do other things at this point, like proceeding\n to a test trial, you can add this hook in your frame.\nSee 'methods' for the functions you can use on a frame that extends VideoRecord.\nEvents recorded in a frame that extends VideoRecord will automatically have additional\n fields videoId (video filename), pipeId (temporary filename initially assigned by\n the recording service),\n and streamTime (when in the video they happened, in s).\nSetting up the camera is handled in didInsertElement, and making sure recording is\n stopped is handled in willDestroyElement (Ember hooks that fire during the component\n lifecycle). It is very important (in general, but especially when using this mixin)\n that you call `this._super(...arguments);` in any functions where your frame overrides\n hooks like this, so that the mixin's functions get called too!"
        },
        "Permute": {
            "name": "Permute",
            "shortname": "Permute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "randomizers",
            "namespace": "",
            "file": "app/randomizers/permute.js",
            "line": 6,
            "description": "Randomizer to allow random ordering of a list of frames. Intended to be\nuseful for e.g. randomly permuting the order of particular stimuli used during\na set of trials (although frames need not be of the same kind to permute).\n\nTo use, define a frame with \"kind\": \"choice\" and \"sampler\": \"permute\",\nas shown below, in addition to the parameters described under 'properties'.\n\n```json\n\"frames\": {\n   \"test-trials\": {\n       \"sampler\": \"permute\",\n       \"kind\": \"choice\",\n       \"commonFrameProperties\": {\n           \"showPreviousButton\": false\n       },\n       \"frameOptions\": [\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": true,\n                       \"text\": \"Let's think about hippos!\",\n                       \"title\": \"hippos!\"\n                   },\n                   {\n                       \"text\": \"Some more about hippos...\"\n                   }\n               ],\n               \"kind\": \"exp-lookit-text\"\n           },\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": false,\n                       \"text\": \"Let's think about dolphins!\",\n                       \"title\": \"dolphins!\"\n                   }\n               ],\n               \"kind\": \"exp-lookit-text\"\n           }\n       ]\n   }\n}\n\n```"
        },
        "Random-parameter-set": {
            "name": "Random-parameter-set",
            "shortname": "Random-parameter-set",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "randomizers",
            "namespace": "",
            "file": "app/randomizers/random-parameter-set.js",
            "line": 9,
            "description": "Randomizer to implement flexible condition assignment and counterbalancing by\nallowing the user to specify an arbitrary sequence of frames to create. A\nset of parameters is randomly selected from a list of available parameterSets,\nand these parameters are substituted in to the parameters specified in the\nlist of frames.\n\nFor a more detailed walkthrough, please see\nhttps://lookit.readthedocs.io/en/develop/experiments.html#randomizer-frames\n\nTo use, define a frame with 'kind': 'choice' and 'sampler': 'random-parameter-set',\nas shown below, in addition to the parameters described under 'properties'.\n\nThis\n\n```json\n'frames': {\n   'test-trials': {\n       'sampler': 'random-parameter-set',\n       'kind': 'choice',\n       'commonFrameProperties': {\n           'kind': 'exp-lookit-story-page',\n           'baseDir': 'https://s3.amazonaws.com/lookitcontents/ingroupobligations/',\n           'audioTypes': ['mp3', 'ogg'],\n           'doRecording': true,\n           'autoProceed': false,\n           'parentTextBlock': {\n               'title': 'Parents!',\n               'text': 'Common instructions across test trials here',\n               'emph': true\n           }\n       },\n       'frameList': [\n           {\n               'images': [\n                   {\n                       'id': 'agent',\n                       'src': 'AGENTIMG1',\n                       'left': '40',\n                       'width': '20',\n                       'top': '10'\n                   },\n                   {\n                       'id': 'left',\n                       'src': 'LEFTIMG1',\n                       'left': '10',\n                       'width': '20',\n                       'top': '50'\n                   },\n                   {\n                       'id': 'right',\n                       'src': 'RIGHTIMG1',\n                       'left': '70',\n                       'width': '20',\n                       'top': '50'\n                   }\n               ],\n               'audioSources': [\n                   {\n                       'audioId': 'questionaudio',\n                       'sources': [{'stub': 'QUESTION1AUDIO'}],\n                       'highlights': 'QUESTION1HIGHLIGHTS'\n                   }\n               ]\n           },\n           {\n               'images': [\n                   {\n                       'id': 'agent',\n                       'src': 'AGENTIMG2',\n                       'left': '40',\n                       'width': '20',\n                       'top': '10'\n                   },\n                   {\n                       'id': 'left',\n                       'src': 'LEFTIMG2',\n                       'left': '10',\n                       'width': '20',\n                       'top': '50'\n                   },\n                   {\n                       'id': 'right',\n                       'src': 'RIGHTIMG2',\n                       'left': '70',\n                       'width': '20',\n                       'top': '50'\n                   }\n               ],\n               'audioSources': [\n                   {\n                       'audioId': 'questionaudio',\n                       'sources': [{'stub': 'QUESTION2AUDIO'}],\n                       'highlights': 'QUESTION2HIGHLIGHTS'\n                   }\n               ]\n           }\n       ],\n       'parameterSets': [\n           {\n               'AGENTIMG1': 'flurpagent1.jpg',\n               'LEFTIMG1': 'flurpvictim1.jpg',\n               'RIGHTIMG1': 'zazzvictim1.jpg',\n               'QUESTION1AUDIO': 'flurpleftmean1',\n               'QUESTION1HIGHLIGHTS': [\n                   {'range': [0.399293,\t3.617124], 'image': 'agent'},\n                   {'range': [5.085112,\t6.811467], 'image': 'left'},\n                   {'range': [6.905418,\t8.702236], 'image': 'right'}\n               ],\n               'AGENTIMG2': 'flurpagent2.jpg',\n               'LEFTIMG2': 'flurpvictim2.jpg',\n               'RIGHTIMG2': 'zazzvictim2.jpg',\n               'QUESTION2AUDIO': 'flurpleftinduct1',\n               'QUESTION2HIGHLIGHTS': [\n                   {'range': [0.372569,\t5.309110], 'image': 'agent'},\n                   {'range': [5.495395,\t7.209213], 'image': 'left'},\n                   {'range': [5.495395,\t7.209213], 'image': 'right'},\n                   {'range': [9.966225,\t11.922212], 'image': 'left'},\n                   {'range': [12.052612,\t14.008600], 'image': 'right'}\n               ]\n           },\n           {\n               'AGENTIMG1': 'zazzagent1.jpg',\n               'LEFTIMG1': 'flurpvictim1.jpg',\n               'RIGHTIMG1': 'zazzvictim1.jpg',\n               'QUESTION1AUDIO': 'zazzrightnice1',\n               'QUESTION1HIGHLIGHTS': [\n                   {'range': [0.348454,\t3.736871], 'image': 'agent'},\n                   {'range': [5.395033,\t6.884975], 'image': 'left'},\n                   {'range': [6.969085,\t8.975701], 'image': 'right'}\n               ],\n               'AGENTIMG2': 'zazzagent2.jpg',\n               'LEFTIMG2': 'flurpvictim2.jpg',\n               'RIGHTIMG2': 'zazzvictim2.jpg',\n               'QUESTION2AUDIO': 'zazzrightinduct1',\n               'QUESTION2HIGHLIGHTS': [\n                   {'range': [0.572920,\t5.138376], 'image': 'agent'},\n                   {'range': [5.335317,\t7.089884], 'image': 'left'},\n                   {'range': [5.335317,\t7.089884], 'image': 'right'},\n                   {'range': [9.721735,\t11.565821], 'image': 'left'},\n                   {'range': [11.655340,\t13.535233], 'image': 'right'}\n               ]\n           }\n       ],\n       'parameterSetWeights': [1, 1]\n   }\n}\n\n```"
        },
        "Select": {
            "name": "Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "randomizers",
            "namespace": "",
            "file": "app/randomizers/select.js",
            "line": 6,
            "description": "Randomizer to allow selection of one (or arbitrary sequence) of defined frames.\nThis is intended to be used either within a {{#crossLink \"Random-parameter-set\"}}{{/crossLink}} randomizer with\ndifferent `parameterSets` picking out different values for `whichFrames`) or indirectly\nvia the {{#crossLink \"Exp-frame-select\"}}{{/crossLink}} frame (which allows setting `whichFrames` using a custom\n`generateProperties` function). Note that you cannot add a `generateProperties` function\ndirectly to a randomizer!\n\nTo use, define a frame with \"kind\": \"choice\" and \"sampler\": \"select\",\nas shown below, in addition to the parameters described under 'properties'.\n\n```json\n\"frames\": {\n   \"select-randomizer-test\": {\n       \"sampler\": \"select\",\n       \"kind\": \"choice\",\n       \"whichFrames\": 0,\n       \"commonFrameProperties\": {\n           \"kind\": \"exp-lookit-text\"\n       },\n       \"frameOptions\": [\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": true,\n                       \"text\": \"Let's think about hippos!\",\n                       \"title\": \"FRAME 1\"\n                   },\n                   {\n                       \"text\": \"Some more about hippos...\"\n                   }\n               ]\n           },\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": false,\n                       \"text\": \"Let's think about dolphins!\",\n                       \"title\": \"FRAME 2\"\n                   }\n               ]\n           }\n       ]\n   }\n}\n\n```"
        },
        "video-recorder": {
            "name": "video-recorder",
            "shortname": "video-recorder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "namespace": "",
            "file": "app/services/video-recorder.js",
            "line": 76,
            "description": "An instance of a video recorder tied to or used by one specific page. A given experiment may use more than one\n  video recorder depending on the number of video capture frames."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 76,
            "description": "Function to generate additional properties for this frame (like {\"kind\": \"exp-lookit-text\"})\nat the time the frame is initialized. Allows behavior of study to depend on what has\nhappened so far (e.g., answers on a form or to previous test trials).\nMust be a valid Javascript function, returning an object, provided as\na string.\n\n\nArguments that will be provided are: `expData`, `sequence`, `child`, `pastSessions`, `conditions`.\n\n\n`expData`, `sequence`, and `conditions` are the same data as would be found in the session data shown\non the Lookit experimenter interface under 'Individual Responses', except that\nthey will only contain information up to this point in the study.\n\n\n`expData` is an object consisting of `frameId`: `frameData` pairs; the data associated\nwith a particular frame depends on the frame kind.\n\n\n`sequence` is an ordered list of frameIds, corresponding to the keys in `expData`.\n\n\n`conditions` is an object representing the data stored by any randomizer frames;\nkeys are `frameId`s for randomizer frames and data stored depends on the randomizer\nused.\n\n\n`child` is an object that has the following properties - use child.get(propertyName)\nto access:\n- `additionalInformation`: String; additional information field from child form\n- `ageAtBirth`: String; child's gestational age at birth in weeks. Possible values are\n  \"24\" through \"39\", \"na\" (not sure or prefer not to answer),\n\"<24\" (under 24 weeks), and \"40>\" (40 or more weeks).\n- `birthday`: Date object\n- `gender`: \"f\" (female), \"m\" (male), \"o\" (other), or \"na\" (prefer not to answer)\n- `givenName`: String, child's given name/nickname\n- `id`: String, child UUID\n- `languageList`: String, space-separated list of languages child is exposed to\n(2-letter codes)\n- `conditionList`: String, space-separated list of conditions/characteristics\n- of child from registration form, as used in criteria expression, e.g.\n\"autism_spectrum_disorder deaf multiple_birth\"\n\n\n`pastSessions` is a list of previous response objects for this child and this study,\nordered starting from most recent (at index 0 is this session!). Each has properties\n(access as pastSessions[i].get(propertyName)):\n- `completed`: Boolean, whether they submitted an exit survey\n- `completedConsentFrame`: Boolean, whether they got through at least a consent frame\n- `conditions`: Object representing any conditions assigned by randomizer frames\n- `createdOn`: Date object\n- `expData`: Object consisting of frameId: frameData pairs\n- `globalEventTimings`: list of any events stored outside of individual frames - currently\n  just used for attempts to leave the study early\n- `sequence`: ordered list of frameIds, corresponding to keys in expData\n- `isPreview`: Boolean, whether this is from a preview session (possible in the event\n  this is an experimenter's account)\n\n\nExample:\n```\nfunction(expData, sequence, child, pastSessions, conditions) {\n    return {\n       'blocks':\n            [\n                {\n                    'text': 'Name: ' + child.get('givenName')\n                },\n                {\n                    'text': 'Frame number: ' + sequence.length\n                },\n                {\n                    'text': 'N past sessions: ' + pastSessions.length\n                }\n            ]\n      };\n  }\n```\n\n\n (This example is split across lines for readability; when added to JSON it would need\n to be on one line.)",
            "itemtype": "property",
            "name": "generateProperties",
            "type": "String",
            "default": "null",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 167,
            "description": "Function to select which frame index to go to when using the 'next' action on this\nframe. Allows flexible looping / short-circuiting based on what has happened so far\nin the study (e.g., once the child answers N questions correctly, move on to next\nsegment). Must be a valid Javascript function, returning a number from 0 through\nframes.length - 1, provided as a string.\n\n\nArguments that will be provided are:\n`frames`, `frameIndex`, `expData`, `sequence`, `child`, `pastSessions`\n\n\n`frames` is an ordered list of frame configurations for this study; each element\nis an object corresponding directly to a frame you defined in the\nJSON document for this study (but with any randomizer frames resolved into the\nparticular frames that will be used this time).\n\n\n`frameIndex` is the index in `frames` of the current frame\n\n\n`expData` is an object consisting of `frameId`: `frameData` pairs; the data associated\nwith a particular frame depends on the frame kind.\n\n\n`sequence` is an ordered list of frameIds, corresponding to the keys in `expData`.\n\n\n`child` is an object that has the following properties - use child.get(propertyName)\nto access:\n- `additionalInformation`: String; additional information field from child form\n- `ageAtBirth`: String; child's gestational age at birth in weeks. Possible values are\n  \"24\" through \"39\", \"na\" (not sure or prefer not to answer),\n\"<24\" (under 24 weeks), and \"40>\" (40 or more weeks).\n- `birthday`: timestamp in format \"Mon Apr 10 2017 20:00:00 GMT-0400 (Eastern Daylight Time)\"\n- `gender`: \"f\" (female), \"m\" (male), \"o\" (other), or \"na\" (prefer not to answer)\n- `givenName`: String, child's given name/nickname\n- `id`: String, child UUID\n\n\n`pastSessions` is a list of previous response objects for this child and this study,\nordered starting from most recent (at index 0 is this session!). Each has properties\n(access as pastSessions[i].get(propertyName)):\n- `completed`: Boolean, whether they submitted an exit survey\n- `completedConsentFrame`: Boolean, whether they got through at least a consent frame\n- `conditions`: Object representing any conditions assigned by randomizer frames\n- `createdOn`: timestamp in format \"Thu Apr 18 2019 12:33:26 GMT-0400 (Eastern Daylight Time)\"\n- `expData`: Object consisting of frameId: frameData pairs\n- `globalEventTimings`: list of any events stored outside of individual frames - currently\n  just used for attempts to leave the study early\n- `sequence`: ordered list of frameIds, corresponding to keys in expData\n\n\nExample that just sends us to the last frame of the study no matter what:\n``\"function(frames, frameIndex, frameData, expData, sequence, child, pastSessions) {return frames.length - 1;}\"```",
            "itemtype": "property",
            "name": "selectNextFrame",
            "type": "String",
            "default": "null",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 230,
            "description": "An object containing values for any parameters (variables) to use in this frame.\nAny property VALUES in this frame that match any of the property NAMES in `parameters`\nwill be replaced by the corresponding parameter value. For example, suppose your frame\nis:\n\n```\n{\n   'kind': 'FRAME_KIND',\n   'parameters': {\n       'FRAME_KIND': 'exp-lookit-text'\n   }\n}\n```\n\nThen the frame `kind` will be `exp-lookit-text`. This may be useful if you need\nto repeat values for different frame properties, especially if your frame is actually\na randomizer or group. You may use parameters nested within objects (at any depth) or\nwithin lists.\n\nYou can also use selectors to randomly sample from or permute\na list defined in `parameters`. Suppose `STIMLIST` is defined in\n`parameters`, e.g. a list of potential stimuli. Rather than just using `STIMLIST`\nas a value in your frames, you can also:\n\n* Select the Nth element (0-indexed) of the value of `STIMLIST`: (Will cause error if `N >= THELIST.length`)\n```\n   'parameterName': 'STIMLIST#N'\n```\n* Select (uniformly) a random element of the value of `STIMLIST`:\n```\n   'parameterName': 'STIMLIST#RAND'\n```\n* Set `parameterName` to a random permutation of the value of `STIMLIST`:\n```\n   'parameterName': 'STIMLIST#PERM'\n```\n* Select the next element in a random permutation of the value of `STIMLIST`, which is used across all\nsubstitutions in this randomizer. This allows you, for instance, to provide a list\nof possible images in your `parameterSet`, and use a different one each frame with the\nsubset/order randomized per participant. If more `STIMLIST#UNIQ` parameters than\nelements of `STIMLIST` are used, we loop back around to the start of the permutation\ngenerated for this randomizer.\n```\n   'parameterName': 'STIMLIST#UNIQ'\n```",
            "itemtype": "property",
            "name": "parameters",
            "type": "Object[]",
            "default": "{}",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 460,
            "description": "Any properties generated via a custom generateProperties function provided to this\nframe (e.g., a score you computed to decide on feedback). In general will be null.",
            "itemtype": "attribute",
            "name": "generatedProperties",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 466,
            "description": "Duration between frame being inserted and call to `next`",
            "itemtype": "attribute",
            "name": "frameDuration",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 471,
            "description": "Type of frame: EXIT (exit survey), CONSENT (consent or assent frame), or DEFAULT\n(anything else)",
            "itemtype": "attribute",
            "name": "frameType",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 477,
            "description": "Ordered list of events captured during this frame (oldest to newest). Each event is\nrepresented as an object with at least the properties\n`{'eventType': EVENTNAME, 'timestamp': TIMESTAMP}`.\nSee Events tab for details of events that might be captured.",
            "itemtype": "attribute",
            "name": "eventTimings",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 485,
            "description": "Each frame that extends ExpFrameBase will send at least an array `eventTimings`,\na frame type, and any generateProperties back to the server upon completion.\nIndividual frames may define additional properties that are sent.",
            "params": [
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Array"
                }
            ],
            "itemtype": "method",
            "name": "serializeContent",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 508,
            "description": "Create the time event payload for a particular frame / event. This can be overridden to add fields to every\n event sent by a particular frame",
            "itemtype": "method",
            "name": "makeTimeEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "extra",
                    "description": "An object with additional properties to be sent to the server",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Event type, time, and any additional metadata provided",
                "type": "Object"
            },
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 553,
            "description": "Move to next frame",
            "itemtype": "event",
            "name": "nextFrame",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-base/component.js",
            "line": 613,
            "description": "Move to previous frame",
            "itemtype": "event",
            "name": "previousFrame",
            "class": "Exp-frame-base",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-select/component.js",
            "line": 89,
            "description": "List of frames that can be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n'kind' of frame can be specified either here (per frame) or in\ncommonFrameProperties. If a property is defined for a given frame both\nin this frame list and in commonFrameProperties, the value in the frame\nlist will take precedence.\n\n(E.g., you could include 'kind': 'normal-frame' in\ncommmonFrameProperties, but for a single frame in frameOptions, include\n'kind': 'special-frame'.)",
            "itemtype": "property",
            "name": "frameOptions",
            "type": "Object[]",
            "class": "Exp-frame-select",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-select/component.js",
            "line": 111,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "Exp-frame-select",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-frame-select/component.js",
            "line": 124,
            "description": "Index or indices (0-indexed) within frameOptions to actually use. This can be either a number\n(e.g., 0 or 1 to use the first or second option respectively) or an array providing\nan ordered list of indices to use (e.g., [0, 1] or [1, 0] to use the first then\nsecond or second then first options, respectively). All indices must be integers\nin [0, frameOptions.length).\n\nIf not provided or -1, the entire frameOptions list is used in order. (If empty\nlist is provided, however, that is respected and no frames are inserted by this\nrandomizer.)",
            "itemtype": "property",
            "name": "whichFrames",
            "type": "Number",
            "class": "Exp-frame-select",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 138,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 148,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'black'",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 161,
            "description": "Length of single calibration segment in ms.",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 172,
            "description": "Ordered list of positions to show calibration segment in. Options are\n\"center\", \"left\", \"right\". Ignored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationPositions",
            "type": "Array",
            "default": "[\"center\", \"left\", \"right\", \"center\"]",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 188,
            "description": "Audio to play when the attention-grabber is placed at each location (will be\nplayed once from the start, but cut off if it's longer than calibrationLength).\n\nThis can either be an array of `{src: 'url', type: 'MIMEtype'}` objects for\ncalibration audio, or just a string to use the full URLs based on `baseDir`.",
            "itemtype": "property",
            "name": "calibrationAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 203,
            "description": "Calibration video (played from start at each calibration position). Supply\neither a calibration video or calibration image, not both.\n\nThis can be either an array of {src: 'url', type: 'MIMEtype'} objects or\njust a string like `attentiongrabber` to rely on the `baseDir` and `videoTypes`\nto generate full paths.",
            "itemtype": "property",
            "name": "calibrationVideo",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 219,
            "description": "Image to use for calibration - will be placed at each location. Supply\neither a calibration video or calibration image, not both.\n\nThis can be either a full URL or just the filename (e.g. \"star.png\") to\nuse the full path based on `baseDir` (e.g. `baseDir/img/star.png`).",
            "itemtype": "property",
            "name": "calibrationImage",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 235,
            "description": "Which animation to use for the calibration image. Options are 'bounce', 'spin',\nor '' (empty to not animate).",
            "itemtype": "property",
            "name": "calibrationImageAnimation",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-calibration/component.js",
            "line": 299,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-calibration",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 227,
            "description": "Whether to do webcam recording on this frame",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 237,
            "description": "minimum amount of time to show attention-getter in seconds. If 0, attention-getter\nsegment is skipped.",
            "itemtype": "property",
            "name": "attnLength",
            "type": "Number",
            "default": "0",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 249,
            "description": "length of alternation trial in seconds. This refers only to the section of the\ntrial where the alternating image streams are presented - it does not count\nany announcement phase.",
            "itemtype": "property",
            "name": "trialLength",
            "type": "Number",
            "default": "60",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 262,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ninstructions during attention-getter video",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 273,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nmusic during trial",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 284,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio after completion of trial (optional; used for last\ntrial \"okay to open your eyes now\" announcement)",
            "itemtype": "property",
            "name": "endAudioSources",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 296,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nattention-getter video (should be loopable)",
            "itemtype": "property",
            "name": "videoSources",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 307,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 318,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 329,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played when study is paused due to not being fullscreen",
            "itemtype": "property",
            "name": "fsAudio",
            "type": "Object[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 340,
            "description": "Whether to start with the 'A' image list on both left and right. If true, both\nsides start with their respective A image lists; if false, both lists start with\ntheir respective B image lists.",
            "itemtype": "property",
            "name": "startWithA",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 353,
            "description": "Whether to randomize image presentation order within the lists leftImagesA,\nleftImagesB, rightImagesA, and rightImagesB. If true (default), the order\nof presentation is randomized. Each time all the images in one list have been\npresented, the order is randomized again for the next 'round.' If false, the\norder of presentation is as written in the list. Once all images are presented,\nwe loop back around to the first image and start again.\n\nExample of randomization: suppose we have defined\n```\nleftImagesA: ['apple', 'banana', 'cucumber'],\nleftImagesB: ['aardvark', 'bat'],\nrandomizeImageOrder: true,\nstartWithA: true\n```\n\nAnd suppose the timing is such that we end up with 10 images total. Here is a\npossible sequence of images shown on the left:\n\n['banana', 'aardvark', 'apple', 'bat', 'cucumber', 'bat', 'cucumber', 'aardvark', 'apple', 'bat']",
            "itemtype": "property",
            "name": "randomizeImageOrder",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 382,
            "description": "Amount of time to display each image, in milliseconds",
            "itemtype": "property",
            "name": "displayMs",
            "type": "Number",
            "default": "750",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 393,
            "description": "Amount of time for blank display between each image, in milliseconds",
            "itemtype": "property",
            "name": "blankMs",
            "type": "Number",
            "default": "750",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 404,
            "description": "Format of border to display around alternation streams, if any. See\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/border for syntax.",
            "itemtype": "property",
            "name": "border",
            "type": "String",
            "default": "'thin solid gray'",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 416,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'white'",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 429,
            "description": "Color of image stream container, if different from overall background.\nDefaults to backgroundColor if one is provided.\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "containerColor",
            "type": "String",
            "default": "'white'",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 444,
            "description": "Set A of images to display on left of screen. Left stream will alternate between\nimages from set A and from set B. Elements of list can be full URLs or relative\npaths starting from `baseDir`.",
            "itemtype": "property",
            "name": "leftImagesA",
            "type": "String[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 459,
            "description": "Set B of images to display on left of screen. Left stream will alternate between\nimages from set A and from set B. Elements of list can be full URLs or relative\npaths starting from `baseDir`.",
            "itemtype": "property",
            "name": "leftImagesB",
            "type": "String[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 474,
            "description": "Set A of images to display on right of screen. Right stream will alternate between\nimages from set A and from set B. Elements of list can be full URLs or relative\npaths starting from `baseDir`.",
            "itemtype": "property",
            "name": "rightImagesA",
            "type": "String[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 489,
            "description": "Set B of images to display on right of screen. Right stream will alternate between\nimages from set A and from set B. Elements of list can be full URLs or relative\npaths starting from `baseDir`.",
            "itemtype": "property",
            "name": "rightImagesA",
            "type": "String[]",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 510,
            "description": "Sequence of images shown on the left",
            "itemtype": "attribute",
            "name": "leftSequence",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 517,
            "description": "Sequence of images shown on the right",
            "itemtype": "attribute",
            "name": "rightSequence",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 527,
            "description": "Whether this trial was paused",
            "itemtype": "attribute",
            "name": "hasBeenPaused",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 575,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 602,
            "description": "Immediately before starting intro/announcement segment",
            "itemtype": "event",
            "name": "startIntro",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 626,
            "description": "Immediately before starting test trial segment",
            "itemtype": "event",
            "name": "startTestTrial",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 664,
            "description": "Records each time images are cleared from display",
            "itemtype": "event",
            "name": "clearImages",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 699,
            "description": "Immediately after making images visible",
            "itemtype": "event",
            "name": "presentImages",
            "params": [
                {
                    "name": "left",
                    "description": "url of left image",
                    "type": "String"
                },
                {
                    "name": "right",
                    "description": "url of right image",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 813,
            "description": "What to do when individual-frame recording starts.",
            "itemtype": "method",
            "name": "onRecordingStarted",
            "access": "private",
            "tagname": "",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-change-detection/component.js",
            "line": 823,
            "description": "What to do when session-level recording starts.",
            "itemtype": "method",
            "name": "onSessionRecordingStarted",
            "access": "private",
            "tagname": "",
            "class": "Exp-lookit-change-detection",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 177,
            "description": "Array of objects specifying video src and type for test video (these should be the same video, but multiple sources--e.g. mp4 and webm--are generally needed for cross-browser support). If none provided, skip test phase.\n\nExample value:\n\n```[{'src': 'http://.../video1.mp4', 'type': 'video/mp4'}, {'src': 'http://.../video1.webm', 'type': 'video/webm'}]```",
            "itemtype": "property",
            "name": "sources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 194,
            "description": "Array of objects specifying video src and type for alternate test video, as for sources. Alternate test video will be shown if the first test is paused, after restarting the trial. If alternate test video is also paused, we just move on. If altSources is not provided, defaults to playing same test video again (but still only one pause of test video allowed per trial).",
            "itemtype": "property",
            "name": "altSources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 207,
            "description": "Array of objects specifying intro video src and type, as for sources.\nIf empty, intro segment will be skipped.",
            "itemtype": "property",
            "name": "introSources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 221,
            "description": "Array of objects specifying attention-grabber video src and type, as for sources. The attention-grabber video is shown (looping) during the announcement phase and when the study is paused.",
            "itemtype": "property",
            "name": "attnSources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 233,
            "description": "minimum amount of time to show attention-getter in seconds. Announcement phase (attention-getter plus audio) will last the minimum of announceLength and the duration of any announcement audio.",
            "itemtype": "property",
            "name": "announceLength",
            "type": "Number",
            "default": "2",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 244,
            "description": "List of objects specifying intro announcement src and type. If empty and minimum announceLength is 0, announcement is skipped.\nExample: `[{'src': 'http://.../audio1.mp3', 'type': 'audio/mp3'}, {'src': 'http://.../audio1.ogg', 'type': 'audio/ogg'}]`",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 258,
            "description": "List of objects specifying music audio src and type, as for audioSources.\nIf empty, no music is played.",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "musicSources",
                    "description": ""
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 273,
            "description": "Length to loop test videos, in seconds. Set if you want a time-based limit. E.g., setting testLength to 20 means that the first 20 seconds of the video will be played, with shorter videos looping until they get to 20s. Leave out or set to Infinity  to play the video through to the end a set number of times instead. If a testLength is set, it overrides any value set in testCount.",
            "itemtype": "property",
            "name": "testLength",
            "type": "Number",
            "default": "Infinity",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 284,
            "description": "Number of times to play test video before moving on. This is ignored if\ntestLength is set to a finite value.",
            "itemtype": "property",
            "name": "testCount",
            "type": "Number",
            "default": "1",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 296,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 306,
            "description": "length of single calibration segment in ms. 0 to skip calibration.",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 317,
            "description": "Ordered list of positions to show calibration segment in. Options are\n\"center\", \"left\", \"right\". Ignored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationPositions",
            "type": "Array",
            "default": "[\"center\", \"left\", \"right\", \"center\"]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 329,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationAudioSources",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 342,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationVideoSources",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 355,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 367,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 379,
            "description": "Text to show under \"Study paused / Press space to resume\" when study is paused.\nDefault: (You'll have a moment to turn around again.)",
            "itemtype": "property",
            "name": "pauseText",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 398,
            "description": "Sources of videos (potentially) shown during this trial: [source of test video, source of alternate test video].",
            "itemtype": "attribute",
            "name": "videosShown",
            "type": "array",
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-composite-video-trial/component.js",
            "line": 616,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-composite-video-trial",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 207,
            "description": "Phase number (just included as a convenience & sent to server, to make handling collected data simpler)",
            "itemtype": "property",
            "name": "nPhase",
            "type": "Number",
            "default": "0",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 218,
            "description": "Trial number (just included as a convenience & sent to server, to make handling collected data simpler)",
            "itemtype": "property",
            "name": "nTrial",
            "type": "Number",
            "default": "0",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 229,
            "description": "URL of background image; will be stretched to width of page",
            "itemtype": "property",
            "name": "backgroundImage",
            "type": "String",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 238,
            "description": "Whether this is a frame where the user needs to click to\nselect one of the images before proceeding",
            "itemtype": "property",
            "name": "isChoiceFrame",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 249,
            "description": "Whether to do webcam recording (will wait for webcam\nconnection before starting audio if so)",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 259,
            "description": "Whether to proceed automatically after audio (and hide\nreplay/next buttons)",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 269,
            "description": "Array of objects describing audio to play at the start of\nthis frame. Each element describes a separate audio segment.",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "audioId",
                    "description": "unique string identifying this\n     audio segment",
                    "type": "String"
                },
                {
                    "name": "sources",
                    "description": "Array of {src: 'url', type:\n     'MIMEtype'} objects with audio sources for this segment.\n\nCan also give a single string 'filename', which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "highlights",
                    "description": "Array of {'range': [startT,\n     endT], 'image': 'imageId'} objects, where the imageId\n     values correspond to the ids given in images",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 321,
            "description": "Text block to display to parent. (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'red', 'font-size': '12px'}.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 351,
            "description": "Array of images to display and information about their placement",
            "itemtype": "property",
            "name": "images",
            "type": "Object[]",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "id",
                    "description": "unique ID for this image. This will be used to refer to the choice made by the user, if any.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "URL of image source (can be full URL, or stub to append to baseDir; see `baseDir`)",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "distance from left of story area to image center, as percentage of story area width - as string",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "image height, as percentage of story area height - as string",
                    "type": "String"
                },
                {
                    "name": "bottom",
                    "description": "bottom margin, as percentage of story area height - as string",
                    "type": "String"
                },
                {
                    "name": "animate",
                    "description": "animation to use at start of trial on this image, if any. If not provided, image is shown throughout trial. Options are 'fadein', 'fadeout', 'flyleft' (fly from left), and 'flyright'.",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "text to display above image, e.g. 'Click to hear what he said!' If omitted, no text is shown.",
                    "type": "String"
                },
                {
                    "name": "imageAudio",
                    "description": "sources Array of {src: 'url',\ntype: 'MIMEtype'} objects with audio sources for audio to play when this image is clicked, if any. (Omit to not associate audio with this image.)\n\nCan also give a single string `filename`, which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "requireAudio",
                    "description": "whether to require the user to click this image and complete the audio associated before proceeding to the next trial. (Incompatible with autoProceed.)",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 416,
            "description": "Which image is selected at\n  the end of the trial, or null if none is. This indicates the\n  final selected choice for a choice trial.",
            "itemtype": "attribute",
            "name": "currentlyHighlighted",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 425,
            "description": "Trial number as passed to this frame",
            "itemtype": "attribute",
            "name": "nTrial",
            "type": "number",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 433,
            "description": "Phase number as passed to this frame",
            "itemtype": "attribute",
            "name": "nPhase",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 470,
            "description": "When one of the images is clicked during a choice frame",
            "itemtype": "event",
            "name": "clickSpeaker",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 501,
            "description": "When image audio is started",
            "itemtype": "event",
            "name": "startSpeakerAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 520,
            "description": "When image audio is played (recorded even if not completed)",
            "itemtype": "event",
            "name": "playSpeakerAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-dialogue-page/component.js",
            "line": 566,
            "description": "When narration audio is completed",
            "itemtype": "event",
            "name": "completeMainAudio",
            "class": "Exp-lookit-dialogue-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 63,
            "description": "Object specifying information to show on second page of exit survey, before returning to main Lookit site.",
            "itemtype": "property",
            "name": "debriefing",
            "type": "Object",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of debriefing page",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph to show as debriefing",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "Object specifying source URL [src] & alt-text [alt] for any image to show during debriefing (optional). Example: `{\n\"src\": \"https://s3.amazonaws.com/lookitcontents/ducks/duck.png\",\n\"alt\": \"Very cute duck\"\n}`",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 96,
            "description": "Whether to show a 'share this study on Facebook' button",
            "itemtype": "property",
            "name": "showShareButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 113,
            "description": "Child's birthdate as entered into exit survey; timestamp string starting YYYY-mm-dd.",
            "itemtype": "attribute",
            "name": "birthDate",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 121,
            "description": "Whether data can be shared with Databrary: 'yes' or 'no'",
            "itemtype": "attribute",
            "name": "databraryShare",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 128,
            "description": "Video privacy level: 'private', 'scientific', or 'public'",
            "itemtype": "attribute",
            "name": "useOfMedia",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 135,
            "description": "Whether the the box to withdraw video data is checked",
            "itemtype": "attribute",
            "name": "withdrawal",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-exit-survey/component.js",
            "line": 143,
            "description": "Freeform comments entered by parent",
            "itemtype": "attribute",
            "name": "feedback",
            "class": "Exp-lookit-exit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 180,
            "description": "Whether to do webcam recording on this frame",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 190,
            "description": "True to use big fat triangle as context figure, or false to use small skinny triangle as context.",
            "itemtype": "property",
            "name": "context",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 201,
            "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size)",
            "itemtype": "property",
            "name": "altOnLeft",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 212,
            "description": "color of triangle outline (3 or 6 char hex, starting with #)",
            "itemtype": "property",
            "name": "triangleColor",
            "type": "String",
            "default": "'#056090'",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 223,
            "description": "triangle line width in pixels",
            "itemtype": "property",
            "name": "triangleLineWidth",
            "type": "Integer",
            "default": "5",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 234,
            "description": "minimum amount of time to show attention-getter in seconds",
            "itemtype": "property",
            "name": "attnLength",
            "type": "Number",
            "default": "5",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 245,
            "description": "length of alternation trial in seconds",
            "itemtype": "property",
            "name": "trialLength",
            "type": "Number",
            "default": "6",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 256,
            "description": "length of single calibration segment in ms",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 267,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ninstructions during attention-getter video",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 278,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nmusic during trial",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 289,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio after completion of trial (optional; used for last\ntrial \"okay to open your eyes now\" announcement)",
            "itemtype": "property",
            "name": "endAudioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 301,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played 4 times during calibration)",
            "itemtype": "property",
            "name": "calibrationAudioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 312,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start 4 times during\ncalibration)",
            "itemtype": "property",
            "name": "calibrationVideoSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 324,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nattention-getter video (should be loopable)",
            "itemtype": "property",
            "name": "videoSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 335,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 346,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 357,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played when study is paused due to not being fullscreen",
            "itemtype": "property",
            "name": "fsAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 374,
            "description": "True to use big fat triangle as context figure, or false to use small skinny triangle as context. [same as passed to this frame]",
            "itemtype": "attribute",
            "name": "context",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 381,
            "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size) [same as passed to this frame]",
            "itemtype": "attribute",
            "name": "altOnLeft",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 391,
            "description": "whether this trial was paused",
            "itemtype": "attribute",
            "name": "hasBeenPaused",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 433,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 460,
            "description": "Immediately before starting intro/announcement segment",
            "itemtype": "event",
            "name": "startIntro",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 495,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 524,
            "description": "Immediately before starting test trial segment",
            "itemtype": "event",
            "name": "startTestTrial",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 572,
            "description": "records EACH triangle presentation during test trial",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "Lshape",
                    "description": "shape of left triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "Rshape",
                    "description": "shape of right triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "LX",
                    "description": "Horizontal offset of left triangle from rectangle center, in units where rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "LY",
                    "description": "Vertical offset of left triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "RX",
                    "description": "Horizontal offset of right triangle from rectangle center, in units where screen width = 200 and rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "RY",
                    "description": "Vertical offset of right triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "LRot",
                    "description": "rotation of left triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "RRot",
                    "description": "rotation of right triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "LFlip",
                    "description": "whether left triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "RFlip",
                    "description": "whether right triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "LSize",
                    "description": "size of left triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                },
                {
                    "name": "RSize",
                    "description": "size of right triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                }
            ],
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation/component.js",
            "line": 620,
            "description": "Records each time triangles are cleared from display",
            "itemtype": "event",
            "name": "clearTriangles",
            "class": "Exp-lookit-geometry-alternation",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 179,
            "description": "Whether to do webcam recording on this frame",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 189,
            "description": "True to use big uneven triangle as context figure, or false to use small even triangle as context.",
            "itemtype": "property",
            "name": "context",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 200,
            "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size)",
            "itemtype": "property",
            "name": "altOnLeft",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 211,
            "description": "color of triangle outline (3 or 6 char hex, starting with #)",
            "itemtype": "property",
            "name": "triangleColor",
            "type": "String",
            "default": "'#056090'",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 222,
            "description": "triangle line width in pixels",
            "itemtype": "property",
            "name": "triangleLineWidth",
            "type": "Integer",
            "default": "5",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 233,
            "description": "minimum amount of time to show attention-getter in seconds",
            "itemtype": "property",
            "name": "attnLength",
            "type": "Number",
            "default": "5",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 244,
            "description": "length of alternation trial in seconds",
            "itemtype": "property",
            "name": "trialLength",
            "type": "Number",
            "default": "6",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 255,
            "description": "length of single calibration segment in ms",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 266,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ninstructions during attention-getter video",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 277,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nmusic during trial",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 288,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio after completion of trial (optional; used for last\ntrial \"okay to open your eyes now\" announcement)",
            "itemtype": "property",
            "name": "endAudioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 300,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played 4 times during calibration)",
            "itemtype": "property",
            "name": "calibrationAudioSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 311,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start 4 times during\ncalibration)",
            "itemtype": "property",
            "name": "calibrationVideoSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 323,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nattention-getter video (should be loopable)",
            "itemtype": "property",
            "name": "videoSources",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 334,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 345,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 356,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played when study is paused due to not being fullscreen",
            "itemtype": "property",
            "name": "fsAudio",
            "type": "Object[]",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 373,
            "description": "True to use big fat triangle as context figure, or false to use small skinny triangle as context. [same as passed to this frame]",
            "itemtype": "attribute",
            "name": "context",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 380,
            "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size) [same as passed to this frame]",
            "itemtype": "attribute",
            "name": "altOnLeft",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 390,
            "description": "whether this trial was paused",
            "itemtype": "attribute",
            "name": "hasBeenPaused",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 445,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 472,
            "description": "Immediately before starting intro/announcement segment",
            "itemtype": "event",
            "name": "startIntro",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 510,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 539,
            "description": "Immediately before starting test trial segment",
            "itemtype": "event",
            "name": "startTestTrial",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 587,
            "description": "records EACH triangle presentation during test trial",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "Lshape",
                    "description": "shape of left triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "Rshape",
                    "description": "shape of right triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "LX",
                    "description": "Horizontal offset of left triangle from rectangle center, in units where rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "LY",
                    "description": "Vertical offset of left triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "RX",
                    "description": "Horizontal offset of right triangle from rectangle center, in units where screen width = 200 and rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "RY",
                    "description": "Vertical offset of right triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "LRot",
                    "description": "rotation of left triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "RRot",
                    "description": "rotation of right triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "LFlip",
                    "description": "whether left triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "RFlip",
                    "description": "whether right triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "LSize",
                    "description": "size of left triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                },
                {
                    "name": "RSize",
                    "description": "size of right triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                }
            ],
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-geometry-alternation-open/component.js",
            "line": 635,
            "description": "Records each time triangles are cleared from display",
            "itemtype": "event",
            "name": "clearTriangles",
            "class": "Exp-lookit-geometry-alternation-open",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 381,
            "description": "Whether to do webcam recording (will wait for webcam\nconnection before starting audio or showing images if so)",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 392,
            "description": "Whether to proceed automatically when all conditions are met, vs. enabling\nnext button at that point. If true: the next, previous, and replay buttons are\nhidden, and the frame auto-advances after ALL of the following happen\n(a) the audio segment (if any) completes\n(b) the durationSeconds (if any) is achieved\n(c) a choice is made (if required)\n(d) that choice is correct (if required)\n(e) the choice audio (if any) completes\n(f) the choice text (if any) is dismissed\nIf false: the next, previous, and replay buttons (as applicable) are displayed.\nIt becomes possible to press 'next' only once the conditions above are met.",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 414,
            "description": "Minimum duration of frame in seconds. If set, then it will only\nbe possible to proceed to the next frame after both the audio completes AND\nthis duration is acheived.",
            "itemtype": "property",
            "name": "durationSeconds",
            "type": "Number",
            "default": "0",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 429,
            "description": "[Only used if durationSeconds set] Whether to\nshow a progress bar based on durationSeconds in the parent text area.",
            "itemtype": "property",
            "name": "showProgressBar",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 442,
            "description": "[Only used if not autoProceed] Whether to\nshow a previous button to allow the participant to go to the previous frame",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 455,
            "description": "[Only used if not autoProceed AND if there is audio] Whether to\nshow a replay button to allow the participant to replay the audio",
            "itemtype": "property",
            "name": "showReplayButton",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 468,
            "description": "Whether to have the image display area take up the whole screen if possible.\nThis will only apply if (a) there is no parent text and (b) there are no\ncontrol buttons (next, previous, replay) because the frame auto-proceeds.",
            "itemtype": "property",
            "name": "maximizeDisplay",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 482,
            "description": "Audio file to play at the start of this frame.\nThis can either be an array of {src: 'url', type: 'MIMEtype'} objects, e.g.\nlisting equivalent .mp3 and .ogg files, or can be a single string `filename`\nwhich will be expanded based on `baseDir` and `audioTypes` values (see `audioTypes`).",
            "itemtype": "property",
            "name": "audio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 497,
            "description": "Text block to display to parent.  (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'gray', 'font-size': 'large'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 523,
            "description": "Array of images to display and information about their placement. For each\nimage, you need to specify `src` (image name/URL) and placement (either by\nproviding left/width/top values, or by using a `position` preset).\n\nEverything else is optional! This is where you would say that an image should\nbe shown at a delay",
            "itemtype": "property",
            "name": "images",
            "type": "Object[]",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "id",
                    "description": "unique ID for this image",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "URL of image source. This can be a full\n    URL, or relative to baseDir (see baseDir).",
                    "type": "String"
                },
                {
                    "name": "alt",
                    "description": "alt-text for image in case it doesn't load and for\n    screen readers",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "left margin, as percentage of story area width. If not provided,\n    the image is centered horizontally.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "image width, as percentage of story area width. Note:\n    in general only provide one of width and height; the other will be adjusted to\n    preserve the image aspect ratio.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "top margin, as percentage of story area height. If not provided,\n    the image is centered vertically.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "image height, as percentage of story area height. Note:\n    in general only provide one of width and height; the other will be adjusted to\n    preserve the image aspect ratio.",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "one of 'left', 'center', 'right', 'fill' to use presets\n    that place the image in approximately the left, center, or right third of\n    the screen or to fill the screen as much as possible.\n    This overrides left/width/top values if given.",
                    "type": "String"
                },
                {
                    "name": "nonChoiceOption",
                    "description": "[Only used if `choiceRequired` is true]\n    whether this should be treated as a non-clickable option (e.g., this is\n    a picture of a girl, and the child needs to choose whether the girl has a\n    DOG or a CAT)",
                    "type": "Boolean"
                },
                {
                    "name": "displayDelayMs",
                    "description": "Delay at which to show the image after trial\n    start (timing will be relative to any audio or to start of trial if no\n    audio). Optional; default is to show images immediately.",
                    "type": "Number"
                },
                {
                    "name": "feedbackAudio",
                    "description": "[Only used if `choiceRequired` is true]\n     Audio to play upon clicking this image. This can either be an array of\n    {src: 'url', type: 'MIMEtype'} objects, e.g. listing equivalent .mp3 and\n    .ogg files, or can be a single string `filename` which will be expanded\n    based on `baseDir` and `audioTypes` values (see `audioTypes`).",
                    "type": "Object[]"
                },
                {
                    "name": "feedbackText",
                    "description": "[Only used if `choiceRequired` is true] Text\n    to display in a dialogue window upon clicking the image.",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 615,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'black'",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 628,
            "description": "Color of area where images are shown, if different from overall background.\nDefaults to backgroundColor if one is provided. See\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "pageColor",
            "type": "String",
            "default": "'white'",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 643,
            "description": "Whether this is a frame where the user needs to click to select one of the\nimages before proceeding.",
            "itemtype": "property",
            "name": "choiceRequired",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 655,
            "description": "[Only used if `choiceRequired` is true] Whether the participant has to select\none of the *correct* images before proceeding.",
            "itemtype": "property",
            "name": "correctChoiceRequired",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 667,
            "description": "Whether the participant can make a choice before audio finishes. (Only relevant\nif `choiceRequired` is true.)",
            "itemtype": "property",
            "name": "canMakeChoiceBeforeAudioFinished",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 679,
            "description": "Array representing times when particular images should be highlighted. Each\nelement of the array should be of the form {'range': [3.64, 7.83], 'imageId': 'myImageId'}.\nThe two `range` values are the start and end times of the highlight in seconds,\nrelative to the audio played. The `imageId` corresponds to the `id` of an\nelement of `images`.\n\nHighlights can overlap in time. Any that go longer than the audio will just\nbe ignored/cut off.\n\nOne strategy for generating a bunch of highlights for a longer story is to\nannotate using Audacity and export the labels to get the range values.",
            "itemtype": "property",
            "name": "highlights",
            "type": "Object[]",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "range",
                    "description": "[startTimeInSeconds, endTimeInSeconds], e.g. [3.64, 7.83]",
                    "type": "Array"
                },
                {
                    "name": "imageId",
                    "description": "ID of the image to highlight, corresponding to the `id` field of the element of `images` to highlight",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 727,
            "description": "Array of images used in this frame [same as passed to this frame, but\nmay reflect random assignment for this particular participant]",
            "itemtype": "attribute",
            "name": "images",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 735,
            "description": "ID of image selected at time of proceeding",
            "itemtype": "attribute",
            "name": "selectedImage",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 742,
            "description": "Whether image selected at time of proceeding is marked as correct",
            "itemtype": "attribute",
            "name": "correctImageSelected",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 809,
            "description": "When main audio segment is replayed",
            "itemtype": "event",
            "name": "replayAudio",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 825,
            "description": "Trial is complete and attempting to move to next frame; may wait for recording\nto catch up before proceeding.",
            "itemtype": "event",
            "name": "trialComplete",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 852,
            "description": "When main audio segment finishes playing",
            "itemtype": "event",
            "name": "finishAudio",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 886,
            "description": "Timer for set-duration trial begins",
            "itemtype": "event",
            "name": "startTimer",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 893,
            "description": "Timer for set-duration trial ends",
            "itemtype": "event",
            "name": "endTimer",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 924,
            "description": "When main audio segment starts playing",
            "itemtype": "event",
            "name": "startAudio",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 931,
            "description": "When main audio cannot be started. In this case we treat it as if\nthe audio was completed (for purposes of allowing participant to\nproceed)",
            "itemtype": "event",
            "name": "failedToStartAudio",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 947,
            "description": "When images are displayed to participant (for images without any delay added)",
            "itemtype": "event",
            "name": "displayAllImages",
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 957,
            "description": "When a specific image is shown at a delay.",
            "itemtype": "event",
            "name": "displayImage",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 983,
            "description": "When one of the image options is clicked during a choice frame",
            "itemtype": "event",
            "name": "clickImage",
            "params": [
                {
                    "name": "imageId",
                    "description": "ID of the image selected",
                    "type": "String"
                },
                {
                    "name": "correct",
                    "description": "whether this image is marked as correct",
                    "type": "Boolean"
                }
            ],
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 1018,
            "description": "When image/feedback audio is started",
            "itemtype": "event",
            "name": "startImageAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 1028,
            "description": "When image/feedback audio cannot be started. In this case we treat it as if\nthe audio was completed (for purposes of allowing participant to\nproceed)",
            "itemtype": "event",
            "name": "failedToStartImageAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-images-audio/component.js",
            "line": 1098,
            "description": "When the participant dismisses a feedback dialogue",
            "itemtype": "event",
            "name": "dismissFeedback",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-images-audio",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 116,
            "description": "Whether to display the user's webcam",
            "itemtype": "property",
            "name": "showWebcam",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-instructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 128,
            "description": "Array of blocks for {{#crossLink \"Exp-text-block\"}}{{/crossLink}}, specifying text/images of instructions to display",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "Exp-lookit-instructions",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                },
                {
                    "name": "mediaBlock",
                    "description": "Object specifying audio or video clip to include (optional). mediaBlock should be of form:\n  {title: 'title text to show above audio', text: 'text to show below controls', warningText: 'Text to show in red if user tries to proceed but hasn't played; only used if mustPlay is true', sources: 'sources Array of {src: 'url', type: 'MIMEtype'} objects specifying audio sources', isVideo: 'boolean, whether video or audio', mustPlay: 'boolean, whether clip has to be played to proceed'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 214,
            "description": "Array of objects specifying text/images of instructions to display under webcam view (if webcam is shown)",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "Exp-lookit-instructions",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 260,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-instructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-instructions/component.js",
            "line": 270,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Start the videos! \\n (You\\'ll have a moment to turn around.)'",
            "class": "Exp-lookit-instructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 118,
            "description": "Intro paragraph describing why we want mood info",
            "itemtype": "property",
            "name": "introText",
            "type": "String",
            "default": "'How are you two doing? We really want to know: we’re interested in how your child’s mood affects his or her looking preferences.'",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 134,
            "description": "Rating for CHILD on tired - rested scale, '1' to '7' where '7' is rested",
            "itemtype": "attribute",
            "name": "rested",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 141,
            "description": "Rating for CHILD on sick - healthy scale, '1' to '7' where '7' is healthy",
            "itemtype": "attribute",
            "name": "healthy",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 148,
            "description": "Rating for CHILD on fussy - happy scale, '1' to '7' where '7' is happy",
            "itemtype": "attribute",
            "name": "childHappy",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 155,
            "description": "Rating for CHILD on calm - active scale, '1' to '7' where '7' is active",
            "itemtype": "attribute",
            "name": "active",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 162,
            "description": "Rating for PARENT on tired - energetic scale, '1' to '7' where '7' is energetic",
            "itemtype": "attribute",
            "name": "energetic",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 169,
            "description": "Rating for PARENT on overwhelmed - on top of stuff scale, '1' to '7' where '7' is on top of stuff",
            "itemtype": "attribute",
            "name": "ontopofstuff",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 176,
            "description": "Rating for PARENT on upset - happy scale, '1' to '7' where '7' is happy",
            "itemtype": "attribute",
            "name": "parentHappy",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 183,
            "description": "how long since the child woke up from nap, HH:mm",
            "itemtype": "attribute",
            "name": "napWakeUp",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 191,
            "description": "whether the child has a typical nap schedule: 'no', 'yes', or 'yes-overdue' if child is overdue for nap",
            "itemtype": "attribute",
            "name": "usualNapSchedule",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 198,
            "description": "only valid if usualNapSchedule is 'yes';  how long until child is due to sleep again, HH:mm",
            "itemtype": "attribute",
            "name": "nextNap",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 205,
            "description": "how long since the child ate/drank, HH:mm",
            "itemtype": "attribute",
            "name": "lastEat",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-mood-questionnaire/component.js",
            "line": 213,
            "description": "what the child was doing before this (free response)",
            "itemtype": "attribute",
            "name": "doingBefore",
            "class": "Exp-lookit-mood-questionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 74,
            "description": "Array of blocks for {{#crossLink \"Exp-text-block\"}}{{/crossLink}}, specifying text/images of instructions to display",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 120,
            "description": "Number of seconds to record for before automatically pausing. Use\n0 for no limit.",
            "itemtype": "property",
            "name": "recordSegmentLength",
            "type": "String",
            "default": "300",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 131,
            "description": "Whether to automatically begin recording upon frame load",
            "itemtype": "property",
            "name": "startRecordingAutomatically",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 141,
            "description": "Whether a recording must be made to proceed to next frame. 'Next' button\nwill be disabled until recording is made if so. 0 to not require recording;\nany positive number to require that many seconds of recording",
            "itemtype": "property",
            "name": "recordingRequired",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 153,
            "description": "Whether to hide video recording controls (only use with startRecordingAutomatically)",
            "itemtype": "property",
            "name": "hideControls",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 163,
            "description": "Whether to hide webcam view when frame loads (participant will still be able to show manually)",
            "itemtype": "property",
            "name": "hideWebcam",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 173,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Next'",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 183,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 227,
            "description": "Webcam display hidden from participant",
            "itemtype": "event",
            "name": "hideWebcam",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 270,
            "description": "Video recording automatically paused upon reaching time limit",
            "itemtype": "event",
            "name": "recorderTimeout",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 328,
            "description": "Webcam display hidden from participant",
            "itemtype": "event",
            "name": "hideWebcam",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-observation/component.js",
            "line": 339,
            "description": "Webcam display shown to participant",
            "itemtype": "event",
            "name": "showWebcam",
            "class": "Exp-lookit-observation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 200,
            "description": "Array of objects specifying video src and type for test video (these should be the same video, but multiple sources--e.g. mp4 and webm--are generally needed for cross-browser support). If none provided, skip test phase.\n\nExample value:\n\n```[{'src': 'http://.../video1.mp4', 'type': 'video/mp4'}, {'src': 'http://.../video1.webm', 'type': 'video/webm'}]```",
            "itemtype": "property",
            "name": "testVideo",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 217,
            "description": "Array of objects specifying video src and type for alternate test video, as for testVideo. Alternate test video will be shown if the first test is paused, after restarting the trial. If alternate test video is also paused, we just move on. If altTestVideo is not provided, defaults to playing same test video again (but still only one pause of test video allowed per trial).",
            "itemtype": "property",
            "name": "altTestVideo",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 230,
            "description": "Array of objects specifying intro video src and type, as for testVideo.\nIf empty, intro segment will be skipped.",
            "itemtype": "property",
            "name": "introVideo",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 244,
            "description": "Array of objects specifying attention-grabber video src and type, as for testVideo. The attention-grabber video is shown (looping) during the announcement phase and when the study is paused.",
            "itemtype": "property",
            "name": "announcementVideo",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 256,
            "description": "minimum amount of time to show attention-getter in seconds. Announcement phase (attention-getter plus audio) will last the minimum of announcementLength and the duration of any announcement audio.",
            "itemtype": "property",
            "name": "announcementLength",
            "type": "Number",
            "default": "2",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 267,
            "description": "List of objects specifying intro announcement src and type. If empty and minimum announcementLength is 0, announcement is skipped.\nExample: `[{'src': 'http://.../audio1.mp3', 'type': 'audio/mp3'}, {'src': 'http://.../audio1.ogg', 'type': 'audio/ogg'}]`",
            "itemtype": "property",
            "name": "announcementAudio",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 281,
            "description": "URL of image to show on left, if any. Can be a full URL or a\nstub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "leftImage",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 292,
            "description": "URL of image to show on right, if any. Can be a full URL or a\nstub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "rightImage",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 304,
            "description": "List of possible images that may be shown. Can be full URLs or\nstubs that will be appended to `baseDir` + `img/` (see\nbaseDir). If leftImageIndex, rightImageIndex, and/or centerImageIndex\nare provided, they indicate the index of the item in this list.",
            "itemtype": "property",
            "name": "possibleImages",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 321,
            "description": "Index in possibleImages for image to use on left. This will be overridden\nby any actual value provided for leftImage. Index must be in range\n[0, len(possibleImages)]. Omit or -1 not to use.",
            "itemtype": "property",
            "name": "leftImageIndex",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 334,
            "description": "Index in possibleImages for image to use on right. This will be overridden\nby any actual value provided for rightImage. Index must be in range\n[0, len(possibleImages)].  Omit or -1 not to use.",
            "itemtype": "property",
            "name": "rightImageIndex",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 347,
            "description": "Index in possibleImages for center image. This will be overridden\nby any actual value provided for centerImage. Index must be in range\n[0, len(possibleImages)].  Omit or -1 not to use.",
            "itemtype": "property",
            "name": "centerImageIndex",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 359,
            "description": "URL of image to show at center, if any. Can be a full URL or\na stub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "centerImage",
            "type": "String",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 371,
            "description": "List of objects specifying test audio src and type, as for announcementAudio.\nIf empty, no additional test audio is played besides any audio in testVideo.",
            "itemtype": "property",
            "name": "testAudio",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "testAudio",
                    "description": ""
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 386,
            "description": "Whether test audio should loop",
            "itemtype": "property",
            "name": "loopTestAudio",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 397,
            "description": "Whether to allow participant to pause study during test. If no, study still\npauses but upon unpausing moves to next trial. If yes, study restarts from\nbeginning upon unpausing (with alternate sources).",
            "itemtype": "property",
            "name": "allowPauseDuringTest",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 410,
            "description": "Length to loop test videos, in seconds. Set if you want a time-based limit. E.g., setting testLength to 20 means that the first 20 seconds of the video will be played, with shorter videos looping until they get to 20s. Leave out or set to Infinity  to play the video through to the end a set number of times instead. If a testLength is set, it overrides any value set in testCount.",
            "itemtype": "property",
            "name": "testLength",
            "type": "Number",
            "default": "Infinity",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 422,
            "description": "Number of times to play test video before moving on. This is ignored if\ntestLength is set to a finite value.",
            "itemtype": "property",
            "name": "testCount",
            "type": "Number",
            "default": "1",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 435,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 445,
            "description": "length of single calibration segment in ms. 0 to skip calibration.",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 457,
            "description": "Ordered list of positions to show calibration segment in. Options are\n\"center\", \"left\", \"right\". Ignored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationPositions",
            "type": "Array",
            "default": "[\"center\", \"left\", \"right\", \"center\"]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 473,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 486,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationVideo",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 499,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 511,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study. Unpausing audio will always be played\nbefore proceeding to next trial, even if this trial will not be redone\n(e.g. because it was paused during test and allowPauseDuringTest is\nset to false)",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 526,
            "description": "Text to show under \"Study paused / Press space to resume\" when study is paused.\nDefault: (You'll have a moment to turn around again.)",
            "itemtype": "property",
            "name": "pauseText",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 545,
            "description": "Sources of videos (potentially) shown during this trial: [source of test video, source of alternate test video].",
            "itemtype": "attribute",
            "name": "videosShown",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 556,
            "description": "URL of image shown on right (given as a property of the frame)",
            "itemtype": "attribute",
            "name": "rightImage",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 563,
            "description": "URL of image shown on left (given as a property of the frame)",
            "itemtype": "attribute",
            "name": "leftImage",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 570,
            "description": "URL of image shown at center (given as a property of the frame)",
            "itemtype": "attribute",
            "name": "centerImage",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 577,
            "description": "seconds to display images/loop videos (given as a property of the frame), if using time-based limit",
            "itemtype": "attribute",
            "name": "testLength",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 584,
            "description": "test audio file played, if any",
            "itemtype": "attribute",
            "name": "testAudio",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 591,
            "description": "location of stimuli",
            "itemtype": "attribute",
            "name": "baseDir",
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-preferential-looking/component.js",
            "line": 818,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-preferential-looking",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 78,
            "itemtype": "property",
            "name": "startSessionRecording",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 86,
            "itemtype": "property",
            "name": "endSessionRecording",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 105,
            "description": "Whether to display this frame in full-screen mode",
            "itemtype": "property",
            "name": "displayFullscreen",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 116,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'black'",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 129,
            "description": "Video to play (looping) while waiting. Supply\neither a video or image, not both.\n\nThis can be either an array of {src: 'url', type: 'MIMEtype'} objects or\njust a string like `attentiongrabber` to rely on the `baseDir` and `videoTypes`\nto generate full paths.",
            "itemtype": "property",
            "name": "video",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 145,
            "description": "Image to display while waiting. Supply\neither a video or image, not both.\n\nThis can be either a full URL or just the filename (e.g. \"star.png\") to\nuse the full path based on `baseDir` (e.g. `baseDir/img/star.png`).",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-start-recording/component.js",
            "line": 161,
            "description": "Which animation to use for the image. Options are 'bounce', 'spin',\nor '' (empty to not animate).",
            "itemtype": "property",
            "name": "imageAnimation",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-start-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 107,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 117,
            "description": "Array of text blocks to display as an introduction to the preview. Should be a list\nof objects that can be passed to exp-text-block; each can have any of the\nproperties below.",
            "itemtype": "property",
            "name": "blocks",
            "type": "Array",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                },
                {
                    "name": "image",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of image (must be full URL)",
                    "type": "String"
                },
                {
                    "name": "alt",
                    "description": "alt-text",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section\n     These will themselves be passed to exp-text-block and can include images,\n     etc.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 167,
            "description": "Text on the preview button user clicks to proceed to stimuli/images",
            "itemtype": "property",
            "name": "previewButtonText",
            "type": "String",
            "default": "'I\\'d like to preview the videos'",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 177,
            "description": "Text to display on the button to skip the next frame",
            "itemtype": "property",
            "name": "skipButtonText",
            "type": "String",
            "default": "'Skip preview'",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 187,
            "description": "A series of preview stimuli to display within a single frame, defined as an array of objects.\nGenerally each item of the list will include ONE of image, video, or audio\n(depending on the stimulus type), plus a caption.",
            "itemtype": "property",
            "name": "stimuli",
            "type": "Array",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "caption",
                    "description": "Some text to appear under this video",
                    "type": "String"
                },
                {
                    "name": "video",
                    "description": "String indicating video URL. This can be relative to baseDir (see baseDir), OR Array of {src: 'url', type: 'MIMEtype'} objects.",
                    "type": "Object[]"
                },
                {
                    "name": "audio",
                    "description": "String indicating audio URL. This can be relative to baseDir (see baseDir), OR Array of {src: 'url', type: 'MIMEtype'} objects.",
                    "type": "Object[]"
                },
                {
                    "name": "image",
                    "description": "URL of image to display (optional; each preview video should designate either video or image). Can be full path or relative to baseDir.",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 222,
            "description": "Text on the button to proceed to the next example video/image",
            "itemtype": "property",
            "name": "nextStimulusText",
            "type": "String",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 232,
            "description": "Text on the button to proceed to the previous example video/image",
            "itemtype": "property",
            "name": "previousStimulusText",
            "type": "String",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 242,
            "description": "Whether to make a webcam video recording during stimulus preview (begins only if user chooses to preview stimuli). Default true.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 269,
            "description": "User clicks on start preview button",
            "itemtype": "event",
            "name": "startPreview",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 283,
            "description": "User clicks to move to next stimulus",
            "itemtype": "event",
            "name": "nextStimulus",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stimuli-preview/component.js",
            "line": 292,
            "description": "User clicks to move to previous stimulus",
            "itemtype": "event",
            "name": "previousStimulus",
            "class": "Exp-lookit-stimuli-preview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 101,
            "description": "Whether to display this frame in full-screen mode         *",
            "itemtype": "property",
            "name": "displayFullscreen",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 111,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#')",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'black'",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 124,
            "description": "Video to play (looping) while waiting. Supply\neither a video or image, not both.\n\nThis can be either an array of {src: 'url', type: 'MIMEtype'} objects or\njust a string like `attentiongrabber` to rely on the `baseDir` and `videoTypes`\nto generate full paths.",
            "itemtype": "property",
            "name": "video",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 140,
            "description": "Image to display while waiting. Supply\neither a video or image, not both.\n\nThis can be either a full URL or just the filename (e.g. \"star.png\") to\nuse the full path based on `baseDir` (e.g. `baseDir/img/star.png`).",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 156,
            "description": "Which animation to use for the image. Options are 'bounce', 'spin',\nor '' (empty to not animate).",
            "itemtype": "property",
            "name": "imageAnimation",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 199,
            "description": "If there's no active session recording so this frame is proceeding\nimmediately.",
            "itemtype": "event",
            "name": "warningNoActiveSessionRecording",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-stop-recording/component.js",
            "line": 230,
            "description": "If no progress update about upload is available within 10s, and\nframe proceeds automatically. Otherwise if the upload has started\n(e.g. we know it is 10% done) it will continue waiting.",
            "itemtype": "event",
            "name": "warningUploadTimeoutError",
            "class": "Exp-lookit-stop-recording",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 135,
            "description": "Whether to do webcam recording (will wait for webcam\nconnection before starting audio if so)",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 145,
            "description": "Whether to proceed automatically after audio (and hide\nreplay/next buttons)",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 156,
            "description": "[Only used if autoProceed is true] Minimum duration of frame in seconds.\nFrame will auto-proceed after this much time has elapsed and all audio\nhas completed.",
            "itemtype": "property",
            "name": "durationSeconds",
            "type": "Number",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 168,
            "description": "[Only used if autoProceed is true and durationSeconds set] Whether to\nshow a progress bar based on durationSeconds in the parent text area.",
            "itemtype": "property",
            "name": "showProgressBar",
            "type": "Number",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated"
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 179,
            "description": "Array of objects describing audio to play at the start of\nthis frame. Each element describes a separate audio segment.",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "audioId",
                    "description": "unique string identifying this\n     audio segment",
                    "type": "String"
                },
                {
                    "name": "sources",
                    "description": "Array of {src: 'url', type:\n     'MIMEtype'} objects with audio sources for this segment\n\nCan also give a single string `filename`, which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "highlights",
                    "description": "Array of {'range': [startT,\n     endT], 'image': 'imageId'} objects, where the imageId\n     values correspond to the ids given in images",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 230,
            "description": "Text block to display to parent.  (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'red', 'font-size': '12px'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-story-page/component.js",
            "line": 260,
            "description": "Array of images to display and information about their placement",
            "itemtype": "property",
            "name": "images",
            "type": "Object[]",
            "class": "Exp-lookit-story-page",
            "module": "exp-player",
            "submodule": "frames-deprecated",
            "subprops": [
                {
                    "name": "id",
                    "description": "unique ID for this image",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "URL of image source. This can be a full\n    URL, or relative to baseDir (see baseDir).",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "left margin, as percentage of story area width",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "image width, as percentage of story area width",
                    "type": "String"
                },
                {
                    "name": "top",
                    "description": "top margin, as percentage of story area height",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 516,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 526,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Next'",
            "class": "Exp-lookit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 536,
            "description": "Object specifying the content of the form. This is in the same format as\nthe example definition of the const 'schema' at http://toddjordan.github.io/ember-cli-dynamic-forms/#/demos/data:\na schema and options are designated separately. Each field of the form\nmust be defined in schema. Options may additionally be specified in options.",
            "itemtype": "property",
            "name": "formSchema",
            "type": "Object",
            "class": "Exp-lookit-survey",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "schema",
                    "description": "The schema defines the fields in this form. It has the following properties:\n    'type' (which MUST BE THE STRING 'object'),\n    'title' (a form title for display), and\n    'properties'. 'properties' is an object defining the set of fields in this form and\n        their associated data types, at minimum. Each key:value pair in this object is of\n        the form FIELDNAME:object. The FIELDNAME is something you select; it should be\n        unique within this form. The object contains at least 'type' and 'title' values,\n        as well as any additional desired parameters that belong to the 'Schema' for the\n        desired field described at http://www.alpacajs.org/documentation.html.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The options allow additional customization of the forms specified in the schema. This\n        object should have a single key 'fields' mapping to an object. Each key:value pair in this object is of\n        the form FIELDNAME:object, with FIELDNAMEs the same as in the schema.\n        The potential parameters to use are those that belong to the 'Options' for the\n        desired field described at  http://www.alpacajs.org/documentation.html.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 575,
            "description": "The same formSchema that was provided as a parameter to this frame, for ease of analysis if randomizing or iterating on experimental design.",
            "itemtype": "attribute",
            "name": "formSchema",
            "class": "Exp-lookit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-survey/component.js",
            "line": 582,
            "description": "Data corresponding to the fields defined in formSchema['schema']['properties']. The keys of formData are the FIELDNAMEs used there, and the values are the participant's responses. Note that if the participant does not answer a question, that key may be absent, rather than being present with a null value.",
            "itemtype": "attribute",
            "name": "formData",
            "class": "Exp-lookit-survey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-text/component.js",
            "line": 43,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-text",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-text/component.js",
            "line": 53,
            "description": "Array of text blocks (paragraphs) to display. Rendered using\n{{#crossLink \"Exp-text-block\"}}{{/crossLink}}, so all parameters\nof ExpTextBlock can be used.",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object",
            "class": "Exp-lookit-text",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 146,
            "description": "Object describing the video to show.",
            "itemtype": "property",
            "name": "video",
            "type": "Object",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "source",
                    "description": "The location of the main video to play. This can be either\n     an array of {'src': 'https://...', 'type': '...'} objects (e.g. providing both\n     webm and mp4 versions at specified URLS) or a single string relative to baseDir/<EXT>/.",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "left margin, as percentage of screen width. If not provided,\n    the image is centered horizontally.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "image width, as percentage of screen width. Note:\n    in general only provide one of width and height; the other will be adjusted to\n    preserve the video aspect ratio.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "top margin, as percentage of video area height (i.e. whole screen,\n    unless parent text or next button are shown). If not provided,\n    the image is centered vertically.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "image height, as percentage of video area height. Note:\n    in general only provide one of width and height; the other will be adjusted to\n    preserve the video aspect ratio.",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "use 'fill' to fill the screen as much as possible while\n    preserving aspect ratio. This overrides left/width/top/height values if given.",
                    "type": "String"
                },
                {
                    "name": "loop",
                    "description": "whether the video should loop, even after any requireTestVideoCount\n    is satisfied",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 196,
            "description": "Object describing the audio file to play along with video (optional)",
            "itemtype": "property",
            "name": "audio",
            "type": "Object",
            "default": "{'source': '', loop: false}",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "source",
                    "description": "Location of the audio file to play.\n  This can either be an array of {src: 'url', type: 'MIMEtype'} objects, e.g.\n  listing equivalent .mp3 and .ogg files, or can be a single string `filename`\n  which will be expanded based on `baseDir` and `audioTypes` values (see `audioTypes`).",
                    "type": "String"
                },
                {
                    "name": "loop",
                    "description": "whether the audio should loop, even after any requireTestAudioCount\n    is satisfied",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 222,
            "description": "Whether to proceed automatically when video is complete / requiredDuration is\nachieved, vs. enabling a next button at that point.\nIf true, the frame auto-advances after ALL of the following happen\n(a) the requiredDuration (if any) is achieved, counting from the video starting\n(b) the video is played requireVideoCount times\n(c) the audio is played requireAudioCount times\nIf false: a next button is displayed. It becomes possible to press 'next'\nonly once the conditions above are met.",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 241,
            "description": "Color of background. See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\nfor acceptable syntax: can use color names ('blue', 'red', 'green', etc.), or\nrgb hex values (e.g. '#800080' - include the '#'). We recommend a light background if you need to\nsee children's eyes.",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "String",
            "default": "'white'",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 256,
            "description": "Array of objects specifying attention-grabber video src and type, as for sources. The attention-grabber video is shown (looping) during the announcement phase and when the study is paused.",
            "itemtype": "property",
            "name": "pauseVideo",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 269,
            "description": "Key to pause the trial. Use an empty string, '', to not allow pausing using the keyboard. You can look up the names of keys at\nhttps://keycode.info. Default is the space bar (' ').",
            "itemtype": "property",
            "name": "pauseKey",
            "type": "String",
            "default": "' '",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 281,
            "description": "Parent-facing description of the key to pause the study. This is just used to display text\n\"Press {pauseKeyDescription} to resume\" when the study is paused.",
            "itemtype": "property",
            "name": "pauseKeyDescription",
            "type": "String",
            "default": "'space'",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 294,
            "description": "Whether to restart this frame upon unpausing, vs moving on to the next frame",
            "itemtype": "property",
            "name": "restartAfterPause",
            "type": "Array",
            "default": "true",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 305,
            "description": "Duration to require before proceeding, if any. Set if you want a time-based limit. E.g., setting requiredDuration to 20 means that the first 20 seconds of the video will be played, with shorter videos looping until they get to 20s. Leave out or set to 0 to play the video through to the end a set number of times instead.",
            "itemtype": "property",
            "name": "requiredDuration",
            "type": "Number",
            "default": "0",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 317,
            "description": "Number of times to play test video before moving on.",
            "itemtype": "property",
            "name": "requireVideoCount",
            "type": "Number",
            "default": "1",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 328,
            "description": "Number of times to play test audio before moving on.",
            "itemtype": "property",
            "name": "requireAudioCount",
            "type": "Number",
            "default": "1",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 339,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 349,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 361,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 373,
            "description": "Text to show under \"Study paused / Press space to resume\" when study is paused.\nDefault: (You'll have a moment to turn around again.)",
            "itemtype": "property",
            "name": "pauseText",
            "type": "String",
            "default": "[]",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 385,
            "description": "Text block to display to parent.  (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'gray', 'font-size': 'large'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 417,
            "description": "Source of video  shown during this trial. Just stores first URL if multiple formats are offered.",
            "itemtype": "attribute",
            "name": "videoShown",
            "type": "string",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 429,
            "description": "Whether the video was paused at any point during the trial",
            "itemtype": "attribute",
            "name": "hasBeenPaused",
            "type": "boolean",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 456,
            "description": "When video begins playing (recorded each time video starts if played through more than once)",
            "itemtype": "event",
            "name": "videoStarted",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 491,
            "description": "When video completes playback (recorded each time if played more than once)",
            "itemtype": "event",
            "name": "videoStopped",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 512,
            "description": "When audio begins playing (recorded each time video starts if played through more than once)",
            "itemtype": "event",
            "name": "audioStarted",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 524,
            "description": "When audio completes playback (recorded each time if played more than once)",
            "itemtype": "event",
            "name": "audioStopped",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 550,
            "description": "When trial is complete and begins cleanup (may then wait for video upload)",
            "itemtype": "event",
            "name": "trialCompleted",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 580,
            "description": "When trial is unpaused (actually proceeding to beginning or next frame)",
            "itemtype": "event",
            "name": "unpauseTrial",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 607,
            "description": "When all requirements for this frame are completed and next button is enabled (only recorded if\nautoProceed is false)",
            "itemtype": "event",
            "name": "nextButtonEnabled",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video/component.js",
            "line": 656,
            "description": "When trial is paused",
            "itemtype": "event",
            "name": "pauseTrial",
            "class": "Exp-lookit-video",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 225,
            "description": "Participant proceeded to next assent page",
            "itemtype": "event",
            "name": "nextAssentPage",
            "params": [
                {
                    "name": "pageNumber",
                    "description": "which assent page was viewed (zero-indexed)",
                    "type": "Number"
                }
            ],
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 238,
            "description": "Participant returned to previous assent page",
            "itemtype": "event",
            "name": "previousAssentPage",
            "params": [
                {
                    "name": "pageNumber",
                    "description": "which assent page was viewed (zero-indexed)",
                    "type": "Number"
                }
            ],
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 259,
            "description": "Participant submitted assent question answer",
            "itemtype": "event",
            "name": "assentQuestionSubmit",
            "params": [
                {
                    "name": "childResponse",
                    "description": "child response submitted ('Yes' or 'No')",
                    "type": "String"
                }
            ],
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 347,
            "description": "When participant downloads consent form",
            "itemtype": "event",
            "name": "downloadConsentForm",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 357,
            "description": "A list of pages of assent form text/pictures/video for the participant to read through",
            "itemtype": "property",
            "name": "pages",
            "type": "Array",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "altText",
                    "description": "Alt-text used for the image displayed, if any",
                    "type": "String"
                },
                {
                    "name": "video",
                    "description": "(Optional) String indicating video path relative to baseDir (see baseDir), OR Array of {src: 'url', type: 'MIMEtype'} objects. Video will be displayed (with controls shown) and participant must complete to proceed.",
                    "type": "Object[]"
                },
                {
                    "name": "audio",
                    "description": "(Optional) String indicating audio path relative to baseDir (see baseDir), OR Array of {src: 'url', type: 'MIMEtype'} objects. Audio will be played (with controls shown) and participant must complete to proceed.",
                    "type": "Object[]"
                },
                {
                    "name": "imgSrc",
                    "description": "(Optional) URL of image to display; can be full path or relative to baseDir",
                    "type": "String"
                },
                {
                    "name": "textBlocks",
                    "description": "list of text blocks to show on this page, processed by exp-text-block. Can use HTML.",
                    "type": "Object[]"
                },
                {
                    "name": "showWebcam",
                    "description": "Whether to display the participant webcam on this page",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 403,
            "description": "Text on the button to proceed to the next example video/image",
            "itemtype": "property",
            "name": "nextStimulusText",
            "type": "String",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 413,
            "description": "Whether to record webcam video on the last page",
            "itemtype": "property",
            "name": "recordLastPage",
            "type": "Boolean",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 423,
            "description": "Whether to record webcam video during the entire assent frame (if true, overrides recordLastPage)",
            "itemtype": "property",
            "name": "recordWholeProcedure",
            "type": "Boolean",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 433,
            "description": "Text on the button to proceed to the previous example video/image",
            "itemtype": "property",
            "name": "previousStimulusText",
            "type": "String",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 443,
            "description": "Text of the question to ask about whether to participate. Answer options are Yes/No; No means study will stop, Yes means it will proceed.",
            "itemtype": "property",
            "name": "participationQuestion",
            "type": "String",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 453,
            "description": "How many years old the child has to be for this page to be shown. If child\nis younger, the page is skipped. Leave at 0 to always show. This is an\nage in 'calendar years' - it will line up with the child's birthday,\nregardless of leap years etc.",
            "itemtype": "property",
            "name": "minimumYearsToAssent",
            "type": "String",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 478,
            "description": "the exact text shown in the assent document during this frame",
            "itemtype": "attribute",
            "name": "assentFormText",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 485,
            "description": "The child's response to the assent question - Yes or No",
            "itemtype": "attribute",
            "name": "childResponse",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-assent/component.js",
            "line": 531,
            "description": "Skip the assent form because the participant is too young to give assent",
            "itemtype": "event",
            "name": "skipAssentDueToParticipantAge",
            "class": "Exp-lookit-video-assent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 197,
            "description": "When participant downloads consent form",
            "itemtype": "event",
            "name": "downloadConsentForm",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 207,
            "description": "Name of PI running this study",
            "itemtype": "property",
            "name": "PIName",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 216,
            "description": "Name of institution running this study (if ambiguous, list institution whose IRB approved the study)",
            "itemtype": "property",
            "name": "institution",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 225,
            "description": "Contact information for PI or lab in case of participant questions or concerns. This will directly follow the phrase \"please contact\", so format accordingly: e.g., \"the XYZ lab at xyz@science.edu\" or \"Mary Smith at 123 456 7890\".",
            "itemtype": "property",
            "name": "PIContact",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 234,
            "description": "Brief description of purpose of study - 1-2 sentences that describe what you are trying to find out. Language should be as straightforward and accessible as possible! E.g., \"Why do babies love cats? This study will help us find out whether babies love cats because of their soft fur or their twitchy tails.\"",
            "itemtype": "property",
            "name": "purpose",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 243,
            "description": "Brief description of study procedures. For consent templates 001 and 002, this should include any risks or a statement that there are no anticipated risks. (For consent template 003, that is included in `payment`). We add a statement about the duration (from your study definition) to the start (e.g., \"This study takes about 10 minutes to complete\"), so you don't need to include that. It can be in third person or addressed to the parent. E.g., \"Your child will be shown pictures of lots of different cats, along with noises that cats make like meowing and purring. We are interested in which pictures and sounds make your child smile. We will ask you (the parent) to turn around to avoid influencing your child's responses. There are no anticipated risks associated with participating.\"",
            "itemtype": "property",
            "name": "procedures",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 252,
            "description": "Whether to include an addition step #4 prompting any other adults present to read a statement of consent (I have read and understand the consent document. I also agree to participate in this study.)",
            "itemtype": "property",
            "name": "prompt_all_adults",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 263,
            "description": "Statement about payment/compensation for participation, including a statement that there are no additional benefits anticipated to the participant. E.g., \"After you finish the study, we will email you a $5 BabyStore gift card within approximately three days. To be eligible for the gift card your child must be in the age range for this study, you need to submit a valid consent statement, and we need to see that there is a child with you. But we will send a gift card even if you do not finish the whole study or we are not able to use your child's data! There are no other direct benefits to you or your child from participating, but we hope you will enjoy the experience.\" For consent template 003, this section is titled Benefits, risks, and payment; it should include information about risks as well.",
            "itemtype": "property",
            "name": "payment",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 272,
            "description": "Study-specific data use statement (optional). This will follow the following more general text: \"The research group led by [PIName] at [institution] will have access to video and other data collected during this session. We will also have access to your account profile, demographic survey, and the child profile for the child who is participating, including changes you make in the future to any of this information. We may study your child’s responses in connection with his or her previous responses to this or other studies run by our group, siblings’ responses to this or other studies run by our group, or demographic survey responses.\"\nYou may want to note what measures you will actually be coding for (looking time, facial expressions, parent-child interaction, etc.) and other more specific information about your use of data from this study here. For instance, you would note if you were building a corpus of naturalistic data that may be used to answer a variety of questions (rather than just collecting data for a single planned study).",
            "itemtype": "property",
            "name": "datause",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 282,
            "description": "Whether to include a section on GDPR; only used in template consent_002 + .",
            "itemtype": "property",
            "name": "gdpr",
            "type": "String",
            "default": "false",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 293,
            "description": "List of types of personal information collected, for GDPR section only. Do not include special category information, which is listed separately.",
            "itemtype": "property",
            "name": "gdpr_personal_data",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 302,
            "description": "List of types of special category information collected, for GDPR section only. Include all that apply: racial or ethnic origin; political opinions; religious or philosophical beliefs; trade union membership; processing of genetic data; biometric data; health data; and/or sex life or sexual orientation information",
            "itemtype": "property",
            "name": "gdpr_sensitive_data",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 311,
            "description": "Statement about rights of research subjects and how to contact IRB.  Used only in template consent_002+. For instance, MIT's standard language is: You are not waiving any legal claims, rights or remedies because of your participation in this research study.  If you feel you have been treated unfairly, or you have questions regarding your rights as a research subject, you may contact [CONTACT INFO].",
            "itemtype": "property",
            "name": "research_rights_statement",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 320,
            "description": "List of additional custom sections of the consent form, e.g. US Patriot Act Disclosure. These are subject to Lookit approval and in general can only add information that was true anyway but that your IRB needs included; please contact us before submitting your study to check.",
            "itemtype": "property",
            "name": "additional_segments",
            "type": "Array",
            "default": "[]",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 343,
            "description": "Which consent document template to use. If you are setting up a new study,\nuse the most recent (highest number) of these options. Options: consent_001,\nconsent_002, consent_003.",
            "itemtype": "property",
            "name": "template",
            "type": "String",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-video-consent/component.js",
            "line": 369,
            "description": "the exact text shown in the consent document during this frame",
            "itemtype": "attribute",
            "name": "consentFormText",
            "class": "Exp-lookit-video-consent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-webcam-display/component.js",
            "line": 54,
            "description": "Array of blocks for {{#crossLink \"Exp-text-block\"}}{{/crossLink}}, specifying text/images of instructions to display",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "Exp-lookit-webcam-display",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "app/components/exp-lookit-webcam-display/component.js",
            "line": 100,
            "description": "Whether to automatically begin recording upon frame load",
            "itemtype": "property",
            "name": "startRecordingAutomatically",
            "type": "Boolean",
            "default": "false",
            "class": "Exp-lookit-webcam-display",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-webcam-display/component.js",
            "line": 110,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Next'",
            "class": "Exp-lookit-webcam-display",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-lookit-webcam-display/component.js",
            "line": 120,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-lookit-webcam-display",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-player/component.js",
            "line": 56,
            "description": "The message to display in the early exit modal. Newer browsers may not respect this message.",
            "itemtype": "property",
            "name": "messageEarlyExitModal",
            "type": "String|null",
            "class": "Exp-video-config",
            "module": "exp-player"
        },
        {
            "file": "app/components/exp-player/component.js",
            "line": 62,
            "description": "Customize what happens when the user exits the page",
            "itemtype": "method",
            "name": "beforeUnload",
            "params": [
                {
                    "name": "event",
                    "description": "The event to be handled",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "If string is provided, triggers a modal to confirm user wants to leave page",
                "type": "String|null"
            },
            "class": "Exp-video-config",
            "module": "exp-player"
        },
        {
            "file": "app/components/exp-video-config/component.js",
            "line": 127,
            "description": "Text to show as the introduction to the troubleshooting tips section",
            "itemtype": "property",
            "name": "troubleshootingIntro",
            "type": "String",
            "default": "\"\"",
            "class": "Exp-video-config",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 107,
            "description": "Text to show as the introduction to the list of things to check. Can include\nHTML.",
            "itemtype": "property",
            "name": "introText",
            "type": "String",
            "default": "\"\"",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 118,
            "description": "Title to display to participant",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "\"\"",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 128,
            "description": "Whether to show checkboxes under each instruction item and require\nparticipant to check them off to proceed.",
            "itemtype": "property",
            "name": "requireItemConfirmation",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 139,
            "description": "Whether to require participant to make and view a test video. Ignored if\nshowRecordMenu is false.",
            "itemtype": "property",
            "name": "requireTestVideo",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 150,
            "description": "Whether to display record/replay menu to participant. If false,\nrequireTestVideo value is ignored.",
            "itemtype": "property",
            "name": "showRecordMenu",
            "type": "Boolean",
            "default": "true",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 161,
            "description": "Text to show below the webcam view. For instance, you might instruct\nfamilies to make a short recording in the position they will be in for the\nexperiment, and make sure that the infant's eyes are visible or that the\nchild is audible. HTML is allowed.",
            "itemtype": "property",
            "name": "recordingInstructionText",
            "type": "String",
            "default": "\"Did it!\"",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 174,
            "description": "Text to show next to instructions checkboxes, if participant is required\nto check off each instruction (see requireItemConfirmation). Ignored if\nrequireItemConfirmation is false.",
            "itemtype": "property",
            "name": "completedItemText",
            "type": "String",
            "default": "\"Did it!\"",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 186,
            "description": "List of instruction segments to display to participant. Rendered using\n{{#crossLink \"Exp-text-block\"}}{{/crossLink}}, so all parameters\nof ExpTextBlock can be used.",
            "itemtype": "property",
            "name": "instructionBlocks",
            "type": "Object",
            "default": "[set of standard instructions]",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "text",
                    "description": "instructions text (can include html)",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "image to display, with 'src' & 'alt' attributes",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "app/components/exp-video-config-quality/component.js",
            "line": 329,
            "description": "Observer that adds listener for play button once recorder is ready.",
            "itemtype": "method",
            "name": "whenPossibleToRecord",
            "class": "Exp-video-config-quality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "app/mixins/expand-assets.js",
            "line": 95,
            "description": "Object describing which properties may need expansion",
            "itemtype": "property",
            "name": "assetsToExpand",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Expand-assets",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/expand-assets.js",
            "line": 103,
            "description": "Base directory for where to find stimuli. Any image src\nvalues that are not full paths will be expanded by prefixing\nwith `baseDir` + `img/`. Any audio/video src values provided as\nstrings rather than objects with `src` and `type` will be\nexpanded out to `baseDir/avtype/[stub].avtype`, where the potential\navtypes are given by `audioTypes` and `videoTypes`.\n\nbaseDir should include a trailing slash\n(e.g., `http://stimuli.org/myexperiment/`); if a value is provided that\ndoes not end in a slash, one will be added.",
            "itemtype": "property",
            "name": "baseDir",
            "type": "String",
            "default": "''",
            "class": "Expand-assets",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/expand-assets.js",
            "line": 123,
            "description": "List of audio types to expect for any audio specified just\nwith a string rather than with a list of src/type objects.\nIf audioTypes is `['typeA', 'typeB']` and an audio source\nis given as `intro`, the audio source will be\nexpanded out to\n\n\n    [\n        {\n            src: 'baseDir' + 'typeA/intro.typeA',\n            type: 'audio/typeA'\n        },\n        {\n            src: 'baseDir' + 'typeB/intro.typeB',\n            type: 'audio/typeB'\n        }\n    ]",
            "itemtype": "property",
            "name": "audioTypes",
            "type": "String[]",
            "default": "['mp3', 'ogg']",
            "class": "Expand-assets",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/expand-assets.js",
            "line": 151,
            "description": "List of video types to expect for any audio specified just\nwith a string rather than with a list of src/type objects.\nIf videoTypes is `['typeA', 'typeB']` and a video source\nis given as `intro`, the video source will be\nexpanded out to\n\n\n    [\n        {\n            src: 'baseDir' + 'typeA/intro.typeA',\n            type: 'video/typeA'\n        },\n        {\n            src: 'baseDir' + 'typeB/intro.typeB',\n            type: 'video/typeB'\n        }\n    ]",
            "itemtype": "property",
            "name": "videoTypes",
            "type": "String[]",
            "default": "['mp4', 'webm']",
            "class": "Expand-assets",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 20,
            "description": "The element ID of the thing to make full screen (video element, div, etc)",
            "itemtype": "property",
            "name": "fullScreenElementId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 27,
            "description": "Whether to display this frame fullscreen",
            "itemtype": "property",
            "name": "displayFullscreen",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 35,
            "description": "The element ID of a button to show if the user leaves fullscreen mode",
            "itemtype": "property",
            "name": "fsButtonID",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 84,
            "description": "Upon detecting change to fullscreen mode",
            "itemtype": "event",
            "name": "enteredFullscreen",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 96,
            "description": "Upon detecting change out of fullscreen mode",
            "itemtype": "event",
            "name": "leftFullscreen",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 112,
            "description": "Make a specified element fullscreen",
            "itemtype": "method",
            "name": "showFullscreen",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 139,
            "description": "Exit fullscreen mode",
            "itemtype": "method",
            "name": "exitFullscreen",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/full-screen.js",
            "line": 165,
            "description": "Set to `true` to display this frame in fullscreen mode, even if the frame type\nis not always displayed fullscreen. (For instance, you might use this to keep\na survey between test trials in fullscreen mode.)",
            "itemtype": "property",
            "name": "displayFullscreenOverride",
            "type": "String",
            "default": "false",
            "class": "Full-screen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 62,
            "description": "Type of lookaway criterion. Must be either\n'total' (to count total lookaway time) or 'continuous' (to count only continuous lookaway time).\nWhichever criterion type is used, only lookaways after the first look to the screen are considered.",
            "itemtype": "property",
            "name": "lookawayType",
            "type": "String",
            "default": "'total'",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 77,
            "description": "Lookaway threshold in seconds. How long does the child need to look away before the trial ends? Depending on\nthe lookawayType, this will refer either to the total amount of time the child has looked away since their\nfirst look to the screen, or to the length of a single continuous lookaway.",
            "itemtype": "property",
            "name": "lookawayThreshold",
            "type": "String",
            "default": "2",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 91,
            "description": "Key parent should press to indicate the child is looking away. If a key is provided, then the trial will\nend if the child looks away looks long enough per the lookawayType and lookawayThreshold. You can also use\n'mouse' to indicate that mouse down/up should be used in place of key down/up events. Use an empty string,\n'', to not record any lookaways for this trial. You can look up the names of keys at https://keycode.info.\nDefault is 'w'.",
            "itemtype": "property",
            "name": "lookawayKey",
            "type": "String",
            "default": "'w'",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 105,
            "description": "Key parent should press to manually move on to next trial. This allows you to have parents control the study\nby giving instructions like \"press q when the child looks away for at least a few seconds\" instead of \"hold down\nw whenever the child isn't looking.\"  Use an empty string, '', to not allow this function\nfor this trial. You can look up the names of keys at https://keycode.info. Default is 'q'.",
            "itemtype": "property",
            "name": "endTrialKey",
            "type": "String",
            "default": "'q'",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 119,
            "description": "Total looking time during this frame, in seconds.\nLooking time is calculated as the total time spent looking between:\n(1) The start of the parent control period, or the first look during that period if the child is not looking initially\nand\n(2) The end of the trial due to the parent pushing the end trial key, the child reaching the lookaway criterion,\nor the frame being completed without either of these happening (e.g., a video is played N times or an image is\nshown for N seconds).\nAll time spent looking away, per parent coding, is excluded, regardless of the duration of the lookaway.\n\nThis value will be null if the trial is not completed by any of the above mechanisms, for instance because\nthe parent ends the study early during this frame.",
            "itemtype": "attribute",
            "name": "totalLookingTime",
            "type": "number",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 136,
            "description": "What caused the trial to end: 'lookaway' (the child reached the lookaway threshold), 'parentEnded' (the parent\npressed the endTrialKey), or 'ceiling' (the frame ended without either of those happening).\n\nThis value will be null if the trial is not completed by any of the above mechanisms, for instance because\nthe parent ends the study early during this frame.",
            "itemtype": "attribute",
            "name": "trialEndReason",
            "type": "string",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 162,
            "description": "When parent records a lookaway starting. This will be triggered at the start of this frame if the parent\nis already holding down the lookawayKey, and otherwise only when the key is newly pressed down. Lookaways\nare recorded regardless of whether the parent control period has started.",
            "itemtype": "event",
            "name": "lookawayStart",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 177,
            "description": "When trial ends due to lookaway criterion being reached.",
            "itemtype": "event",
            "name": "lookawayEndedTrial",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 193,
            "description": "When parent records a lookaway ending. This will NOT be triggered at the start of this frame if the parent\nis not holding down the lookawayKey, only when the key is actually released. Lookaways\nare recorded regardless of whether the parent control period has started.",
            "itemtype": "event",
            "name": "lookawayEnd",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 226,
            "description": "Hook called when session recording is started automatically. Override to do\nframe-specific actions at this point (e.g., beginning a test trial).",
            "itemtype": "method",
            "name": "onSessionRecordingStarted",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 236,
            "description": "Begin period of parent control of trial progression. After calling startParentControl(), we wait for the first\ninfant look to the screen (this may be immediate because infant is already looking. After that, whenever infant\nlook-away time reaches criterion (either due to long enough continuous lookaway, or due to cumulative time\nlooking away) we will call onLookawayCriterion().\n\nIf startParentControl is called multiple times, each time it's called it starts a \"fresh\" interval of parent\ncontrol - i.e. no stored lookaway time, and no assumption the child has previously looked.",
            "itemtype": "method",
            "name": "startParentControl",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 252,
            "description": "When interval of parent control of trial begins - i.e., lookaways begin counting up to threshold.\nLookaway events are recorded throughout, but do not count towards ending trial until parent control period\nbegins.",
            "itemtype": "event",
            "name": "parentControlPeriodStart",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 264,
            "description": "When trial ends due to parent pressing key to end trial",
            "itemtype": "event",
            "name": "parentEndedTrial",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 278,
            "description": "End period of parent control of trial progression, for instance because trial is paused. Looks to/away will\nstill be logged as events but trial will not end based on parent input.",
            "itemtype": "method",
            "name": "endParentControl",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/infant-controlled-timing.js",
            "line": 286,
            "description": "When interval of parent control of trial ends - i.e., lookaways cannot lead to ending trial, parent cannot\npress key to end trial.",
            "itemtype": "event",
            "name": "parentControlPeriodEnd",
            "class": "Infant-controlled-timing",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 43,
            "description": "When recorder detects a change in camera access",
            "itemtype": "event",
            "name": "hasCamAccess",
            "params": [
                {
                    "name": "hasCamAccess",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 50,
            "description": "When recorder detects a change in video stream connection status",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "status",
                    "description": "status of video stream connection, e.g.\n'NetConnection.Connect.Success' if successful",
                    "type": "String"
                }
            ],
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 58,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 82,
            "description": "Whether to start a session (multi-frame) recording as soon as possible upon loading this frame. This allows you to conduct video recording across multiple frames, simply specifying which frame to start and end on. Individual frames may also provide frame-specific recording capabilities; it is best NOT to conduct both a multiframe 'session' recording and frame-specific recording simultaneously as multiple video streams will eat up bandwidth. If you decide to use session recording, turn off recording for any frames that would otherwise record. There can be multiple session recordings in an experiment, e.g. from frames 1-3 and 5-10.",
            "itemtype": "property",
            "name": "startSessionRecording",
            "type": "Number",
            "default": "false",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 89,
            "description": "Maximum time allowed for whole-session video upload before proceeding, in seconds.\nCan be overridden by researcher, based on tradeoff between making families wait and\nlosing data.",
            "itemtype": "property",
            "name": "sessionMaxUploadSeconds",
            "type": "Number",
            "default": "10",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 98,
            "description": "Whether to end any session (multi-frame) recording at the end of this frame.",
            "itemtype": "property",
            "name": "endSessionRecording",
            "type": "Number",
            "default": "false",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 108,
            "description": "Whether to do audio-only (vs also video) recording for session (multiframe) recording. Only used if starting session recording this frame.",
            "itemtype": "property",
            "name": "sessionAudioOnly",
            "type": "Number",
            "default": "0",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 126,
            "description": "Set up a video recorder instance",
            "itemtype": "method",
            "name": "setupRecorder",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM node representing where to mount the recorder",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "A promise representing the result of installing the recorder",
                "type": "Promise"
            },
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 177,
            "description": "Start recording",
            "itemtype": "method",
            "name": "startSessionRecorder",
            "return": {
                "description": "Promise Resolves when recording has started"
            },
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 196,
            "description": "Stop recording",
            "itemtype": "method",
            "name": "startSessionRecorder",
            "return": {
                "description": "Promise Resolves when recording has started"
            },
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 211,
            "description": "Destroy recorder and stop accessing webcam",
            "itemtype": "method",
            "name": "destroySessionRecorder",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 230,
            "description": "When session video recorder has been installed",
            "itemtype": "event",
            "name": "sessionRecorderReady",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 262,
            "description": "Function called when session recording is started automatically. Override to do\nframe-specific actions at this point (e.g., beginning a test trial).",
            "itemtype": "method",
            "name": "onSessionRecordingStarted",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/session-record.js",
            "line": 271,
            "description": "Observer that starts recording once session recorder is ready.",
            "itemtype": "method",
            "name": "whenPossibleToRecordSessionObserver",
            "class": "Session-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 55,
            "description": "When recorder detects a change in camera access",
            "itemtype": "event",
            "name": "hasCamAccess",
            "params": [
                {
                    "name": "hasCamAccess",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 62,
            "description": "When recorder detects a change in video stream connection status",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "status",
                    "description": "status of video stream connection, e.g.\n'NetConnection.Connect.Success' if successful",
                    "type": "String"
                }
            ],
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 70,
            "description": "When pausing study, immediately before request to pause webcam recording",
            "itemtype": "event",
            "name": "pauseVideo",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 76,
            "description": "When unpausing study, immediately before request to resume webcam recording",
            "itemtype": "event",
            "name": "unpauseVideo",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 82,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 90,
            "description": "The recorder object, accessible to the consuming frame. Includes properties\nrecorder.nWebcams, recorder.hasCamAccess, recorder.micChecked, recorder.connected.",
            "itemtype": "property",
            "name": "recorder",
            "type": "VideoRecorder",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 98,
            "description": "A list of all video IDs used in this mixin (a new one is created for each recording).\nAccessible to consuming frame.",
            "itemtype": "property",
            "name": "videoList",
            "type": "List",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 106,
            "description": "Whether recording is stopped already, meaning it doesn't need to be re-stopped when\ndestroying frame. This should be set to true by the consuming frame when video is\nstopped.",
            "itemtype": "property",
            "name": "stoppedRecording",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 115,
            "description": "JQuery string to identify the recorder element.",
            "itemtype": "property",
            "name": "recorderElement",
            "type": "String",
            "default": "'#recorder'",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 123,
            "description": "Whether recorder has been set up yet. Automatically set when doing setup.\nAccessible to consuming frame.",
            "itemtype": "property",
            "name": "recorderReady",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 131,
            "description": "Maximum recording length in seconds. Can be overridden by consuming frame.",
            "itemtype": "property",
            "name": "maxRecordingLength",
            "type": "Number",
            "default": "7200",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 138,
            "description": "Maximum time allowed for video upload before proceeding, in seconds.\nCan be overridden by researcher, based on tradeoff between making families wait and\nlosing data.",
            "itemtype": "property",
            "name": "maxUploadSeconds",
            "type": "Number",
            "default": "5",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 147,
            "description": "Whether to autosave recordings. Can be overridden by consuming frame.\nTODO: eventually use this to set up non-recording option for previewing",
            "itemtype": "property",
            "name": "autosave",
            "type": "Number",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 156,
            "description": "Whether to do audio-only (vs also video) recording. Can be overridden by consuming frame.",
            "itemtype": "property",
            "name": "audioOnly",
            "type": "Number",
            "default": "0",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 163,
            "description": "Whether to use the camera in this frame. Consuming frame should set this property\nto override if needed.",
            "itemtype": "property",
            "name": "doUseCamera",
            "type": "Boolean",
            "default": "true",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 171,
            "description": "Whether to start recording ASAP (only applies if doUseCamera). Consuming frame\nshould set to override if needed.",
            "itemtype": "property",
            "name": "startRecordingAutomatically",
            "type": "Boolean",
            "default": "false",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 179,
            "description": "A video ID to use for the current recording. Format is\n`videoStream_<experimentId>_<frameId>_<sessionId>_timestampMS_RRR`\nwhere RRR are random numeric digits.",
            "itemtype": "property",
            "name": "videoId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 200,
            "description": "Extend any base time event capture with information about the recorded video",
            "itemtype": "method",
            "name": "makeTimeEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": ""
                },
                {
                    "name": "extra",
                    "description": ""
                }
            ],
            "return": {
                "description": "Event data object",
                "type": "Object"
            },
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 216,
            "description": "Set up a video recorder instance",
            "itemtype": "method",
            "name": "setupRecorder",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM node representing where to mount the recorder",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "A promise representing the result of installing the recorder",
                "type": "Promise"
            },
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 254,
            "description": "Start recording",
            "itemtype": "method",
            "name": "startRecorder",
            "return": {
                "description": "Promise Resolves when recording has started"
            },
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 277,
            "description": "Stop the recording",
            "itemtype": "method",
            "name": "stopRecorder",
            "return": {
                "description": "Promise A promise that resolves when upload is complete"
            },
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 292,
            "description": "Destroy recorder and stop accessing webcam",
            "itemtype": "method",
            "name": "destroyRecorder",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 335,
            "description": "When video recorder has been installed",
            "itemtype": "event",
            "name": "recorderReady",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 348,
            "description": "Function called when frame recording is started automatically. Override to do\nframe-specific actions at this point (e.g., beginning a test trial).",
            "itemtype": "method",
            "name": "onRecordingStarted",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 357,
            "description": "Observer that starts recording once recorder is ready.",
            "itemtype": "method",
            "name": "whenPossibleToRecordObserver",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 373,
            "description": "Hide the recorder from display. Useful if you would like to keep recording without extra UI elements to\n  distract the user.",
            "itemtype": "method",
            "name": "hideRecorder",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/mixins/video-record.js",
            "line": 382,
            "description": "Show the recorder to the user. Useful if you want to temporarily show a hidden recorder- eg to let the user fix\n  a problem with video capture settings",
            "itemtype": "method",
            "name": "showRecorder",
            "class": "Video-record",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "app/randomizers/permute.js",
            "line": 58,
            "description": "List of frames to be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n'kind' of frame can be specified either here (per frame) or in\ncommonFrameProperties. If a property is defined for a given frame both\nin this frame list and in commonFrameProperties, the value in the frame\nlist will take precedence.\n\n(E.g., you could include 'kind': 'normal-frame' in\ncommmonFrameProperties, but for a single frame in frameOptions, include\n'kind': 'special-frame'.)",
            "itemtype": "property",
            "name": "frameOptions",
            "type": "Object[]",
            "class": "Permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/permute.js",
            "line": 73,
            "description": "List of sets of frame properties of the same length as frameOptions. The order\nof this list will be preserved; the properties in orderedFrameOptions[0] will be added to the\nframe shown first, the properties in orderedFrameOptions[1] will be added to the\nframe shown second, etc. Properties are applied in this order:\ncommonFrameProperties, frameOptions, orderedFrameOptions\nso orderedFrameOptions properties will take priority over regular frameOptions.\nThis allows you to, for instance, do something different during the first or last\ntrial (e.g., a practice/training trial or a debriefing trial).\nIf `parameterSets` is included as one of the properties in orderedFrameOptions[n],\nthe values will be added to any parameterSets property on the existing frame\n(value-by-value, iterating through corresponding parameterSets)\nrather than overwriting the whole property.",
            "itemtype": "property",
            "name": "orderedFrameOptions",
            "type": "Object[]",
            "class": "Permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/permute.js",
            "line": 90,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "Permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/permute.js",
            "line": 143,
            "description": "Parameters captured and sent to the server",
            "itemtype": "attribute",
            "name": "conditions",
            "params": [
                {
                    "name": "frameList",
                    "description": "the list of frames used, in the final shuffled order",
                    "type": "Object[]"
                }
            ],
            "class": "Permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/pref-phys.js",
            "line": 14,
            "description": "Select the first matching session from an array of options, according to the specified rules",
            "itemtype": "method",
            "name": "getLastSession",
            "params": [
                {
                    "name": "pastSessions",
                    "description": "An array of session records. This returns the first match, eg assumes newest-first sort order",
                    "type": "Session[]"
                }
            ],
            "return": {
                "description": "The model representing the last session in which the user participated",
                "type": "Session"
            },
            "class": "Random-parameter-set",
            "module": "exp-player"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 183,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 191,
            "description": "List of frames to be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n`kind` of frame can be specified either here (per frame) or in\n`commonFrameProperties`. If a property is defined for a given frame both\nin this frame list and in `commonFrameProperties`, the value in the frame\nlist will take precedence.\n\n(E.g., you could include `'kind': 'normal-frame'` in\n`commmonFrameProperties`, but for a single frame in `frameList`, include\n`'kind': 'special-frame'`.)\n\nAny property VALUES within any of the frames in this list which match\na property NAME in the selected `parameterSet` will be replaced by the\ncorresponding `parameterSet` value. E.g., suppose a frame in `frameList` is\n\n```\n{\n   'leftImage': 'LEFTIMAGE1',\n   'rightImage': 'frog.jpg',\n   'size': 'IMAGESIZE'\n}\n```\n\nand the row that has been selected randomly of `parameterSets` is\n\n```\n{\n   'LEFTIMAGE1': 'toad.jpg',\n   'LEFTIMAGE2': 'dog.jpg',\n   'IMAGESIZE': 250\n}\n```\n\nThen the frame would be transformed into:\n```\n{\n   'leftImage': 'toad.jpg',\n    'rightImage': 'frog.jpg',\n    'size': 250\n}\n```\n\nThe same values may be applied across multiple frames. For instance,\nsuppose `frameList` is\n\n```\n      [\n           {\n               'leftImage': 'LEFTIMAGE1',\n               'rightImage': 'frog.jpg',\n               'size': 'IMAGESIZE'\n           },\n           {\n               'leftImage': 'LEFTIMAGE2',\n               'rightImage': 'frog.jpg',\n               'size': 'IMAGESIZE'\n           }\n       ]\n```\n\nThen the corresponding processed frames would include the values\n```\n      [\n           {\n               'leftImage': 'toad.jpg',\n               'rightImage': 'frog.jpg',\n               'size': 250\n           },\n           {\n               'leftImage': 'dog.jpg',\n               'rightImage': 'frog.jpg',\n               'size': 250\n           }\n       ]\n```\nA property value like `IMAGESIZE` may be placed in a frame definition\nnested within another object (at any depth) or within a list and\nwill still be replaced.\n\nYou can also use selectors to randomly sample from or permute\na list given in a `parameterSet`. Suppose `LISTVAR` is defined in\na `parameterSet` as `THELIST`, e.g. a list of potential stimuli. Within frames in your `frameList`\n(and in `commonFrameProperties`), you can use any of the following:\n\n* Select the Nth element (0-indexed) of `THELIST`: (Will cause error if `N >= THELIST.length`)\n```\n   'parameterName': 'LISTVAR#N'\n```\n* Select (uniformly) a random element of `THELIST`:\n```\n   'parameterName': 'LISTVAR#RAND'\n```\n* Set `parameterName` to a random permutation of `THELIST`:\n```\n   'parameterName': 'LISTVAR#PERM'\n```\n* Select the next element in a random permutation of `THELIST`, which is used across all\nsubstitutions in this randomizer. This allows you, for instance, to provide a list\nof possible images in your `parameterSet`, and use a different one each frame with the\nsubset/order randomized per participant. If more `LISTVAR_UNIQ` parameters than\nelements of `THELIST` are used, we loop back around to the start of the permutation\ngenerated for this randomizer.\n```\n   'parameterName': 'LISTVAR#UNIQ'\n```",
            "itemtype": "property",
            "name": "frameList",
            "type": "Object[]",
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 301,
            "description": "Array of parameter sets to randomly select from in order to determine\nthe parameters for each frame in this session.\n\nA single element of parameterSets will be applied to a given session.",
            "itemtype": "property",
            "name": "parameterSets",
            "type": "Object[]",
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 310,
            "description": "[Optional] How to select a parameterSet for a participant who has previously\nparticipated in this study. Must be one of 'random' (default), 'persist', or\n'rotate'. Meanings:\n\n* `\"random\"`: regardless of any previous sessions from this participant, select a\n   parameterSet for this participant as usual (including using parameterSetWeights if\n   provided). Default behavior.\n\n* `\"persist\"`: Continue assigning the same participant to the same parameterSet for all\n   sessions.\n\n* `\"rotate\"`: The first time, assign parameterSet randomly (per parameterSetWeights if\n   given); after that, each time the participant participates assign them to the next\n   parameterSet in the list. Subtracts length of parameterSets until the 'next' index\n   is in range.\n\nThe most recent session in which the `conditions` data includes an element that looks\nlike it was generated by this same randomizer (i.e., with key ending in `-frameId`,\nlike `-test-trials`) will always be used for assignment. **Only sessions with a\ncompleted consent frame are considered, so that participants are not rotated through\nconditions simply due to refreshing the setup page.**\n\nNote: The \"same\" or \"next\" parameterSets are determined by the **index** of the\n   previously-selected parameterSet. That is, if you were assigned to conditionNum 0\n   (index 0 in parameterSets) last time, you will be assigned to conditionNum 0 again\n   this time if `conditionForAdditionalSessions` is `\"persist\"` and conditionNum 1 if\n   `conditionForAdditionalSessions` is `\"rotate\"`. So if you update the list of parameterSets\n   in your study - e.g. to fix a bug or clarify wording - the new values will be used\n   even for repeat participants. But be careful that you do not reorder them unless you\n   intend to, say, swap all participants to the opposite condition on a specified date!\n\n   If the previous index is now outside the range of the parameterSets list (e.g., you\n   used to have 6 conditions, and the participant was previously in conditionNum 5,\n   but then you changed parameterSets to have only 3 elements) and conditionForAdditionalSessions is\n   `\"persist\"`, then the participant is assigned to the last element of parameterSets.",
            "itemtype": "property",
            "name": "conditionForAdditionalSessions",
            "type": "String",
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 350,
            "description": "[Optional] Array of weights for parameter sets; elements correspond to\nelements of parameterSets. The probability of selecting an element\n`parameterSets[i]` is `parameterSetWeights[i]/sum(parameterSetWeights)`.\n\nIf not provided, all `parameterSets` are weighted equally.\n\nThis is intended to allow manual control of counterbalancing during\ndata collection, e.g. to allow one condition to 'catch up' if it was\nrandomly selected less often.\n\nInstead of providing a single list of the same length as parameterSets,\nyou may instead provide a list of objects specifying the weights to use within\nvarious age ranges, like this:\n\n```\n   'parameterSetWeights': [\n       {\n           'minAge': 0,\n           'maxAge': 365,\n           'weights': [1, 0, 1]\n       },\n       {\n           'minAge': 365,\n           'maxAge': 10000,\n           'weights': [0, 1, 0]\n       },\n   ]\n```\nThe child's age in days will be computed, and the weights used will be based on the\nfirst element of `parameterSetWeights` where the child falls between the min and max\nage. In the example above, children under one year old will be assigned to either\nthe first or third condition; children over a year will be assigned to the second condition.\nThis may be useful for researchers who need to balance condition assignment per\nage bracket. As you code data and realize you are set on 3-year-olds in condition A, for\ninstance, you can stop assigning any more 3-year-olds to that condition.",
            "itemtype": "property",
            "name": "parameterSetWeights",
            "type": "Number[]",
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/random-parameter-set.js",
            "line": 491,
            "description": "Parameters captured and sent to the server",
            "itemtype": "attribute",
            "name": "conditions",
            "params": [
                {
                    "name": "conditionNum",
                    "description": "the index of the parameterSet chosen",
                    "type": "Number"
                },
                {
                    "name": "parameterSet",
                    "description": "the parameterSet chosen",
                    "type": "Object"
                }
            ],
            "class": "Random-parameter-set",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/select.js",
            "line": 60,
            "description": "List of frames that can be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n'kind' of frame can be specified either here (per frame) or in\ncommonFrameProperties. If a property is defined for a given frame both\nin this frame list and in commonFrameProperties, the value in the frame\nlist will take precedence.\n\n(E.g., you could include 'kind': 'normal-frame' in\ncommmonFrameProperties, but for a single frame in frameOptions, include\n'kind': 'special-frame'.)",
            "itemtype": "property",
            "name": "frameOptions",
            "type": "Object[]",
            "class": "Select",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/select.js",
            "line": 75,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "Select",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/select.js",
            "line": 83,
            "description": "Index or indices (0-indexed) within frameOptions to actually use. This can be either a number\n(e.g., 0 or 1 to use the first or second option respectively) or an array providing\nan ordered list of indices to use (e.g., [0, 1] or [1, 0] to use the first then\nsecond or second then first options, respectively). All indices must be integers\nin [0, frameOptions.length).\n\nIf not provided or -1, the entire frameOptions list is used in order. (If empty\nlist is provided, however, that is respected and no frames are inserted by this\nrandomizer.)",
            "itemtype": "property",
            "name": "whichFrames",
            "type": "Number",
            "class": "Select",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/randomizers/select.js",
            "line": 124,
            "description": "Parameters captured and sent to the server",
            "itemtype": "attribute",
            "name": "conditions",
            "params": [
                {
                    "name": "whichFrames",
                    "description": "the index/indices of the frame(s) used",
                    "type": "Object[]"
                }
            ],
            "class": "Select",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "app/services/video-recorder.js",
            "line": 135,
            "description": "Install a recorder onto the page and optionally begin recording immediately.",
            "itemtype": "method",
            "name": "install",
            "params": [
                {
                    "name": "videoFilename",
                    "description": "desired filename for video (will be set after saving with Pipe name) ['']"
                },
                {
                    "name": "pipeKey",
                    "description": "Pipe account hash ['']"
                },
                {
                    "name": "pipeEnv",
                    "description": "which Pipe environment [1]"
                },
                {
                    "name": "maxRecordingTime",
                    "description": "recording length limit in s [100000000]"
                },
                {
                    "name": "autosave",
                    "description": "whether to autosave - 1 or 0 [1]"
                },
                {
                    "name": "audioOnly",
                    "description": "whether to do audio only recording - 1 or 0 [0]"
                }
            ],
            "return": {
                "description": "Resolves when widget successfully installed and started",
                "type": "Promise"
            },
            "class": "video-recorder",
            "module": "exp-player"
        },
        {
            "file": "app/services/video-recorder.js",
            "line": 213,
            "description": "Start recording a video, and allow the state of the recording to be accessed for later usage",
            "itemtype": "method",
            "name": "record",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "video-recorder",
            "module": "exp-player"
        },
        {
            "file": "app/services/video-recorder.js",
            "line": 253,
            "description": "Get a timestamp based on the current recording position. Useful to ensure that tracked timing events\n line up with the video.",
            "itemtype": "method",
            "name": "getTime",
            "return": {
                "description": "",
                "type": "Date|null"
            },
            "class": "video-recorder",
            "module": "exp-player"
        },
        {
            "file": "app/services/video-recorder.js",
            "line": 267,
            "description": "Stop recording and save the video to the server",
            "itemtype": "method",
            "name": "stop",
            "class": "video-recorder",
            "module": "exp-player"
        },
        {
            "file": "app/services/video-recorder.js",
            "line": 303,
            "description": "Destroy video recorder",
            "itemtype": "method",
            "name": "destroy",
            "class": "video-recorder",
            "module": "exp-player"
        }
    ],
    "warnings": []
}